[package]
name = "linera-service"
version = "0.7.0"
description = "Executable for clients (aka CLI wallets), proxy (aka validator frontend) and servers of the Linera protocol."
authors = ["Linera <contact@linera.io>"]
readme = "README.md"
repository = "https://github.com/linera-io/linera-protocol"
homepage = "https://linera.dev"
documentation = "https://docs.rs/linera-service/latest/linera_service/"
license = "Apache-2.0"
edition = "2021"

[features]
default = ["wasmer", "rocksdb"]
test = ["linera-views/test"]
benchmark = ["linera-base/test", "dep:fungible", "dep:port-selector"]
wasmer = ["linera-execution/wasmer", "linera-storage/wasmer"]
wasmtime = ["linera-execution/wasmtime", "linera-storage/wasmtime"]
rocksdb = [
    "linera-views/rocksdb",
    "linera-core/rocksdb",
    "linera-storage/rocksdb",
]
aws = ["linera-views/aws", "linera-core/aws", "linera-storage/aws"]
scylladb = [
    "linera-views/scylladb",
    "linera-core/scylladb",
    "linera-storage/scylladb",
]
kubernetes = ["dep:k8s-openapi", "dep:kube", "dep:pathdiff", "dep:fs_extra"]
remote_net = ["dep:k8s-openapi", "dep:kube"]

[dependencies]
anyhow = { workspace = true }
async-graphql = { workspace = true }
async-graphql-axum = { workspace = true }
async-trait = { workspace = true }
axum = { workspace = true, features = ["ws", "headers"] }
bcs = { workspace = true }
cargo_toml = "0.15.3"
chrono = { workspace = true }
clap = { workspace = true }
clap-markdown = { workspace = true }
colored = { workspace = true }
comfy-table = { workspace = true }
current_platform = "0.2.0"
dirs = { workspace = true }
file-lock = "2.1.10"
fs-err = { workspace = true }
fs_extra = { workspace = true, optional = true }
fungible = { workspace = true, optional = true }
futures = { workspace = true }
hex = { workspace = true }
http = { workspace = true }
k8s-openapi = { workspace = true, optional = true }
kube = { workspace = true, optional = true }
linera-base = { workspace = true }
linera-chain = { workspace = true }
linera-core = { workspace = true }
linera-execution = { workspace = true }
linera-rpc = { workspace = true }
linera-storage = { workspace = true }
linera-views = { workspace = true }
pathdiff = { workspace = true, optional = true }
port-selector = { workspace = true, optional = true }
prometheus = { workspace = true }
rand = { workspace = true }
rand07 = { workspace = true }
rcgen = { workspace = true }
reqwest = { workspace = true, features = ["json"] }
serde = { workspace = true }
serde_json = { workspace = true }
tempfile = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["full"] }
tokio-stream = { workspace = true }
toml = { workspace = true }
tonic = { workspace = true }
tonic-health = { workspace = true }
tower = { workspace = true }
tower-http = { workspace = true, features = ["cors"] }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["fmt"] }

[dev-dependencies]
amm = { workspace = true }
counter = { workspace = true }
crowd-funding = { workspace = true }
fungible = { workspace = true }
linera-base = { workspace = true, features = ["test"] }
linera-chain = { workspace = true, features = ["test"] }
linera-core = { workspace = true, features = ["test"] }
linera-execution = { workspace = true, features = ["test"] }
linera-rpc = { workspace = true, features = ["test"] }
linera-service = { path = ".", features = ["test"] }
linera-storage = { workspace = true, features = ["test"] }
linera-views = { workspace = true, features = ["test"] }
matching-engine = { workspace = true }
proptest = { workspace = true }
reqwest = { workspace = true, features = ["json"] }
social = { workspace = true }
test-case = { workspace = true }
test-log = { workspace = true, features = ["trace"] }
test-strategy = { workspace = true }
tokio = { workspace = true, features = ["full", "test-util"] }

[[bin]]
name = "linera-db"
path = "src/database_tool.rs"

[[bin]]
name = "linera"
path = "src/linera/main.rs"

[[bin]]
name = "linera-server"
path = "src/server.rs"

[[bin]]
name = "linera-proxy"
path = "src/proxy.rs"

[[bin]]
name = "linera-schema-export"
path = "src/schema_export.rs"

[[bin]]
name = "linera-benchmark"
path = "src/benchmark.rs"
required-features = ["benchmark"]
