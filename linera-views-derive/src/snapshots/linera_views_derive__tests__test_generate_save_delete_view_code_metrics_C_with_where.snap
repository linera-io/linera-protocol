---
source: linera-views-derive/src/lib.rs
expression: pretty(generate_save_delete_view_code(input))
---
#[async_trait::async_trait]
impl<C, MyParam> linera_views::views::RootView<C> for TestView<C, MyParam>
where
    MyParam: Send + Sync + 'static,
    C: linera_views::common::Context + Send + Sync + Clone + 'static,
    linera_views::views::ViewError: From<C::Error>,
{
    async fn save(&mut self) -> Result<(), linera_views::views::ViewError> {
        use linera_views::{common::Context, batch::Batch, views::View};
        #[cfg(not(target_arch = "wasm32"))]
        linera_views::increment_counter(
            &linera_views::SAVE_VIEW_COUNTER,
            stringify!(TestView),
            &self.context().base_key(),
        );
        let mut batch = Batch::new();
        self.register.flush(&mut batch)?;
        self.collection.flush(&mut batch)?;
        self.context().write_batch(batch).await?;
        Ok(())
    }
}
