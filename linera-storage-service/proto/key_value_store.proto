syntax = "proto3";
package key_value_store.v1;

import "google/protobuf/empty.proto";


message OptValue {
  optional bytes value = 1;
}


message RequestReadValue {
  bytes key = 1;
}

message ReplyReadValue {
  optional bytes value = 1;
}


message RequestContainsKey {
  bytes key = 1;
}

message ReplyContainsKey {
  bool test = 1;
}


message RequestContainsKeys {
  repeated bytes keys = 1;
}

message ReplyContainsKeys {
  repeated bool tests = 1;
}


message RequestReadMultiValues {
  repeated bytes keys = 1;
}

message ReplyReadMultiValues {
  repeated OptValue values = 1;
}


message RequestFindKeysByPrefix {
  bytes key_prefix = 1;
}

message ReplyFindKeysByPrefix {
  repeated bytes keys = 1;
}


message RequestFindKeyValuesByPrefix {
  bytes key_prefix = 1;
}

message ReplyFindKeyValuesByPrefix {
  bytes key_values = 1;
}


message RequestWriteBatch {
  bytes stream = 1;
}


message RequestCreateNamespace {
  bytes namespace = 1;
}


message RequestExistsNamespace {
  bytes namespace = 1;
}

message ReplyExistsNamespace {
  bool exists = 1;
}


message RequestDeleteNamespace {
  bytes namespace = 1;
}


message ReplyListAll {
  repeated bytes namespaces = 1;
}


message RequestListRootKeys {
  bytes namespace = 1;
}

message ReplyListRootKeys {
  repeated bytes root_keys = 1;
}


service StoreProcessor {
  rpc ProcessReadValue (RequestReadValue) returns (stream ReplyReadValue) {}
  rpc ProcessContainsKey (RequestContainsKey) returns (ReplyContainsKey) {}
  rpc ProcessContainsKeys (stream RequestContainsKeys) returns (ReplyContainsKeys) {}
  rpc ProcessReadMultiValues (stream RequestReadMultiValues) returns (stream ReplyReadMultiValues) {}
  rpc ProcessFindKeysByPrefix (RequestFindKeysByPrefix) returns (stream ReplyFindKeysByPrefix) {}
  rpc ProcessFindKeyValuesByPrefix (RequestFindKeyValuesByPrefix) returns (stream ReplyFindKeyValuesByPrefix) {}
  rpc ProcessWriteBatch (stream RequestWriteBatch) returns (google.protobuf.Empty) {}
  rpc ProcessCreateNamespace (RequestCreateNamespace) returns (google.protobuf.Empty) {}
  rpc ProcessExistsNamespace (RequestExistsNamespace) returns (ReplyExistsNamespace) {}
  rpc ProcessDeleteNamespace (RequestDeleteNamespace) returns (google.protobuf.Empty) {}
  rpc ProcessListAll (google.protobuf.Empty) returns (stream ReplyListAll) {}
  rpc ProcessListRootKeys (RequestListRootKeys) returns (ReplyListRootKeys) {}
  rpc ProcessDeleteAll (google.protobuf.Empty) returns (google.protobuf.Empty) {}
}
