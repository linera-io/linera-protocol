// Copyright (c) Zefchain Labs, Inc.
// SPDX-License-Identifier: Apache-2.0

//! Conversions from types declared in [`linera_sdk`] to types generated by [`wit_bindgen_rust`].

use super::service;
use linera_sdk::HashValue;
use std::task::Poll;

impl From<HashValue> for service::HashValue {
    fn from(hash_value: HashValue) -> Self {
        let parts = <[u64; 8]>::from(hash_value);

        service::HashValue {
            part1: parts[0],
            part2: parts[1],
            part3: parts[2],
            part4: parts[3],
            part5: parts[4],
            part6: parts[5],
            part7: parts[6],
            part8: parts[7],
        }
    }
}

impl From<Poll<Result<Vec<u8>, String>>> for service::PollQuery {
    fn from(poll: Poll<Result<Vec<u8>, String>>) -> Self {
        use service::PollQuery;
        match poll {
            Poll::Pending => PollQuery::Pending,
            Poll::Ready(Ok(response)) => PollQuery::Ready(Ok(response)),
            Poll::Ready(Err(message)) => PollQuery::Ready(Err(message)),
        }
    }
}
