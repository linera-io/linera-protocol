chain-id: func() -> chain-id
application-id: func() -> application-id
application-parameters: func() -> list<u8>
read-chain-balance: func() -> amount
read-owner-balance: func(owner: owner) -> amount
transfer: func(source: option<owner>, destination: account, amount: amount)
claim: func(source: account, destination: account, amount: amount)
read-system-timestamp: func() -> timestamp

log: func(message: string, level: log-level)

enum log-level {
    trace,
    debug,
    info,
    warn,
    error,
}

try-call-application: func(
    authenticated: bool,
    application: application-id,
    argument: list<u8>,
    forwarded-sessions: list<session-id>,
) -> call-outcome

try-call-session: func(
    authenticated: bool,
    session: session-id,
    argument: list<u8>,
    forwarded-sessions: list<session-id>,
) -> call-outcome

open-chain: func(
    ownership: chain-ownership,
    balance: amount
) -> chain-id

close-chain: func() -> bool

chain-ownership: func() -> chain-ownership

record call-outcome {
    value: list<u8>,
    sessions: list<session-id>,
}

record session-id {
    application-id: application-id,
    index: u64,
}

record application-id {
    bytecode-id: bytecode-id,
    creation: message-id,
}

type owner = crypto-hash
type bytecode-id = message-id

record message-id {
    chain-id: chain-id,
    height: block-height,
    index: u32,
}

type chain-id = crypto-hash
type block-height = u64
type timestamp = u64
type duration = u64

record public-key {
    part1: u64,
    part2: u64,
    part3: u64,
    part4: u64,
}

record crypto-hash {
    part1: u64,
    part2: u64,
    part3: u64,
    part4: u64,
}

record amount {
    lower-half: u64,
    upper-half: u64,
}

record account {
    chain-id: chain-id,
    owner: option<owner>,
}

record chain-ownership {
    super-owners: list<public-key>,
    owners: list<tuple<public-key, u64>>,
    multi-leader-rounds: u32,
    timeout-config: timeout-config,
}

record timeout-config {
    fast-round-duration-ms: option<duration>,
    base-timeout-ms: duration,
    timeout-increment-ms: duration,
}
