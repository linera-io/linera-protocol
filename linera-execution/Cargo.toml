[package]
name = "linera-execution"
version = "0.10.1"
description = "Persistent data and the corresponding logics used by the Linera protocol for runtime and execution of smart contracts / applications."
authors = ["Linera <contact@linera.io>"]
readme = "README.md"
repository = "https://github.com/linera-io/linera-protocol"
homepage = "https://linera.dev"
documentation = "https://docs.rs/linera-execution/latest/linera_execution/"
license = "Apache-2.0"
edition = "2021"

[features]
test = ["tokio/macros"]
fs = ["tokio/fs"]
metrics = ["prometheus", "linera-views/metrics"]
wasmer = [
    "bytes",
    "dep:wasmer",
    "wasm-encoder",
    "wasmer-middlewares",
    "wasmparser",
    "wit-bindgen-host-wasmer-rust",
]
wasmtime = [
    "dep:wasmtime",
    "wasm-encoder",
    "wasmparser",
    "wit-bindgen-host-wasmtime-rust",
]
web = ["linera-base/web", "linera-views/web"]

[dependencies]
anyhow.workspace = true
async-graphql.workspace = true
async-trait.workspace = true
bcs.workspace = true
bytes = { workspace = true, optional = true }
cfg-if.workspace = true
clap.workspace = true
custom_debug_derive.workspace = true
dashmap.workspace = true
derive_more.workspace = true
futures.workspace = true
linera-base.workspace = true
linera-views.workspace = true
linera-views-derive.workspace = true
lru.workspace = true
once_cell.workspace = true
oneshot.workspace = true
prometheus = { workspace = true, optional = true }
serde.workspace = true
serde_bytes.workspace = true
serde_json.workspace = true
thiserror.workspace = true
tracing.workspace = true
wasm-encoder = { workspace = true, optional = true }
wasmer = { workspace = true, optional = true }
wasmer-middlewares = { workspace = true, optional = true }
wasmparser = { workspace = true, optional = true }
wasmtime = { workspace = true, optional = true }
wit-bindgen-host-wasmer-rust = { workspace = true, optional = true }
wit-bindgen-host-wasmtime-rust = { workspace = true, optional = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true, features = ["rt-multi-thread"] }

[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = { workspace = true, features = ["rt"] }

[dev-dependencies]
anyhow.workspace = true
assert_matches.workspace = true
bcs.workspace = true
counter.workspace = true
linera-base = { workspace = true, features = ["test"] }
linera-execution = { path = ".", features = ["test"] }
test-case.workspace = true
test-log = { workspace = true, features = ["trace"] }
tokio = { workspace = true, features = ["rt", "test-util"] }
tracing-subscriber = { workspace = true, features = ["fmt"] }

[build-dependencies]
cfg_aliases.workspace = true

[package.metadata.cargo-machete]
ignored = ["serde_bytes"]
