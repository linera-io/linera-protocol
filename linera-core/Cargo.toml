[package]
name = "linera-core"
version = "0.10.1"
description = "The core Linera protocol, including client and server logic, node synchronization, etc."
authors = ["Linera <contact@linera.io>"]
readme = "README.md"
repository = "https://github.com/linera-io/linera-protocol"
homepage = "https://linera.dev"
documentation = "https://docs.rs/linera-core/latest/linera_core/"
license = "Apache-2.0"
edition = "2021"

[features]
wasmer = ["linera-execution/wasmer", "linera-storage/wasmer"]
wasmtime = ["linera-execution/wasmtime", "linera-storage/wasmtime"]
test = [
    "anyhow",
    "linera-base/test",
    "linera-chain/test",
    "linera-execution/test",
    "linera-storage/test",
    "linera-views/test",
    "proptest",
    "tempfile",
    "test-log",
    "test-strategy",
    "tokio/parking_lot",
]
rocksdb = ["linera-views/rocksdb", "linera-storage/rocksdb"]
aws = ["linera-views/dynamodb", "linera-storage/dynamodb"]
scylladb = ["linera-views/scylladb", "linera-storage/scylladb"]
metrics = [
    "prometheus",
    "linera-base/metrics",
    "linera-chain/metrics",
    "linera-execution/metrics",
    "linera-storage/metrics",
    "linera-views/metrics",
]
web = [
    "linera-base/web",
    "linera-chain/web",
    "linera-execution/web",
    "linera-storage/web",
    "linera-views/web",
]

[dependencies]
anyhow = { workspace = true, optional = true }
async-graphql.workspace = true
async-trait.workspace = true
bcs.workspace = true
dashmap.workspace = true
futures.workspace = true
linera-base.workspace = true
linera-chain.workspace = true
linera-execution.workspace = true
linera-storage.workspace = true
linera-version.workspace = true
linera-views.workspace = true
lru.workspace = true
prometheus = { workspace = true, optional = true }
proptest = { workspace = true, optional = true }
rand = { workspace = true, features = ["std_rng"] }
serde.workspace = true
serde_json.workspace = true
tempfile = { workspace = true, optional = true }
test-log = { workspace = true, optional = true }
test-strategy = { workspace = true, optional = true }
thiserror.workspace = true
tokio.workspace = true
tokio-stream.workspace = true
tonic.workspace = true
tracing.workspace = true
trait-variant.workspace = true

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
linera-storage-service.workspace = true

[build-dependencies]
cfg_aliases.workspace = true

[dev-dependencies]
assert_matches.workspace = true
counter.workspace = true
criterion.workspace = true
fungible.workspace = true
linera-core = { path = ".", features = ["test"] }
linera-views.workspace = true
meta-counter.workspace = true
serde_json.workspace = true
social.workspace = true
test-case.workspace = true
tracing-subscriber = { workspace = true, features = ["fmt"] }

[target.'cfg(not(target_arch = "wasm32"))'.dev-dependencies]
criterion = { workspace = true, default-features = true, features = ["async_tokio"] }

[package.metadata.cargo-machete]
ignored = ["async-graphql", "proptest"]

[[bench]]
name = "client_benchmarks"
harness = false
required-features = ["test"]
