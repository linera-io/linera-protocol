name: Kubernetes

on:
  workflow_dispatch:

# This allows a subsequently queued workflow run to interrupt previous runs on pull-requests
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.run_id }}'
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTFLAGS: "-D warnings"
  RUSTUP_MAX_RETRIES: 10

permissions:
  contents: read

jobs:

  integration-test-with-kind:
    runs-on: ubuntu-latest-4-cores
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
      - uses: Swatinem/rust-cache@v2
      - name: Install Protoc
        uses: arduino/setup-protoc@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Build binaries
        run: |
          cargo build --release --locked --no-default-features --bin linera --bin linera-proxy --bin linera-server
      - name: Install Kind
        run: |
          curl -sL -o /tmp/kind https://kind.sigs.k8s.io/dl/v0.14.0/kind-linux-amd64
          chmod +x /tmp/kind
          mv /tmp/kind /usr/local/bin/
      - name: Install Kubectl
        run: |
          curl -sL -o /tmp/kubectl https://storage.googleapis.com/kubernetes-release/release/v1.24.1/bin/linux/amd64/kubectl
          chmod +x /tmp/kubectl
          mv /tmp/kubectl /usr/local/bin/
      - name: Create cluster
        run: |
          kind create cluster
      - name: Build and Load Docker images
        run: |
          cd docker
          cp ../target/release/{linera,linera-proxy,linera-server} .
          for image in linera linera-proxy linera-server setup; do
              docker build -t "zefchain-test-$image" --target "$image" .
              kind load docker-image "zefchain-test-$image"
          done
      - name: Deploy cluster
        run: |
          cd docker
          ./integration-test.sh 4 5
          kubectl apply -f zefchain-k8s.yml
      - name: Wait for client test
        run: |
          kubectl wait --for condition=Complete --timeout 180s job/client
      - name: Print client test logs
        if: always()
        run: |
          kubectl logs --tail 500 -l app=linera
      - name: Clean cluster
        if: always()
        run: |
          kubectl delete -f docker/zefchain-k8s.yml
      - name: Delete cluster
        if: always()
        run: |
          kind delete cluster
