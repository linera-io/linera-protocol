name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# This allows a subsequently queued workflow run to interrupt previous runs on pull-requests
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.run_id }}'
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTFLAGS: "-D warnings"
  RUSTUP_MAX_RETRIES: 10

permissions:
  contents: read

jobs:

  test:
    runs-on: ubuntu-latest-8-cores

    steps:
    - uses: actions/checkout@v3
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        target: wasm32-unknown-unknown
        components: clippy, rustfmt
    - uses: Swatinem/rust-cache@v2
    - name: Clear up some space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Build WASM test runner
      # use debug mode to avoid building wasmtime in release mode
      run: |
        cargo build --locked --bin test-runner
    - name: Run WASM application tests
      run: |
        cd linera-examples
        CARGO_TARGET_WASM32_UNKNOWN_UNKNOWN_RUNNER=../target/debug/test-runner cargo test --target wasm32-unknown-unknown
        cargo test --target x86_64-unknown-linux-gnu
    - name: Build example applications
      run: |
        cd linera-examples
        cargo build --release --target wasm32-unknown-unknown
    - name: Compile the workspace with the default features (test)
      run: |
        cargo test --locked --no-run
    - name: Compile the workspace with the default features (build)
      run: |
        cargo build --locked
    - name: Run all tests using the default features
      run: |
        cargo test --locked

  lint:
    runs-on: ubuntu-latest-4-cores

    steps:
    - uses: actions/checkout@v3
    - name: Check Copyright headers
      run: >
        find linera-* -name '*.rs' -a -not -wholename '*/target/*' -print0
        | xargs -0 -L1 ./scripts/check_copyright_header.sh
    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        target: wasm32-unknown-unknown
        components: clippy, rustfmt
    - uses: Swatinem/rust-cache@v2
    - name: Clear up some space
      run: |
        sudo rm -rf /usr/share/dotnet
        sudo rm -rf /opt/ghc
        sudo rm -rf "/usr/local/share/boost"
        sudo rm -rf "$AGENT_TOOLSDIRECTORY"
    - name: Install cargo-machete
      run: |
        cargo install cargo-machete
    - name: Install cargo-all-features
      run: |
        cargo install --git https://github.com/ma2bd/cargo-all-features --branch workspace_metadata
    - name: Install Protoc
      uses: arduino/setup-protoc@v1
      with:
        repo-token: ${{ secrets.GITHUB_TOKEN }}
    - name: Check formatting
      run: |
        cargo fmt -- --check --config unstable_features=true --config imports_granularity=Crate
    - name: Check for unused dependencies
      run: |
        cargo machete
    - name: Run WASM application lints
      run: |
        cd linera-examples
        cargo fmt -- --check --config unstable_features=true --config imports_granularity=Crate
        cargo clippy --all-targets --all-features --target wasm32-unknown-unknown --locked
    - name: Run clippy
      run: |
        cargo clippy --all-targets --all-features --tests --locked
    - name: Run cargo doc
      run: |
        RUSTDOCFLAGS='-D warnings' cargo doc --all-features
    - name: Run cargo check-all-features
      run: |
        cargo check-all-features --all-targets
