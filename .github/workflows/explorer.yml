name: Explorer tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches:
      - "**"
  workflow_dispatch:

# This allows a subsequently queued workflow run to interrupt previous runs on pull requests
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.run_id }}'
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUST_BACKTRACE: short
  RUSTFLAGS: "-D warnings"
  RUSTUP_MAX_RETRIES: 10

permissions:
  contents: read

jobs:
  # paths-ignore within a pull_request doesn't work well with merge_group, so we need to use a custom filter.
  changed-files:
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.files-changed.outputs.paths }}
    steps:
      - uses: actions/checkout@v4
      - name: Filter paths
        uses: dorny/paths-filter@v3
        id: files-changed
        with:
          predicate-quantifier: 'every'
          filters: |
            paths:
              - '!docker/**'
              - '!kubernetes/**'
              - '!CONTRIBUTING.md'
              - '!INSTALL.md'

  test:
    needs: changed-files
    if: needs.changed-files.outputs.should-run == 'true'
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
    - uses: actions-rust-lang/setup-rust-toolchain@v1
    - name: Check toolchain symlinks
      run: |
        cd linera-explorer
        cat rust-toolchain.toml
    - name: Build
      run: |
        cd linera-explorer
        npm cache clean --force
        npm ci
        npm run full
    - name: Test
      run: |
        cd linera-explorer
        npm run test -- --run
