searchState.loadedDescShard("pkcs8", 0, "RustCrypto: PKCS#8 (Private Keys)\n<code>AlgorithmIdentifier</code> reference which has <code>AnyRef</code> parameters.\nASN.1 DER-related errors.\nA trait which associates an OID with a type.\nCarriage return: <code>\\r</code> (Pre-OS X Macintosh)\nCarriage return + line feed: <code>\\r\\n</code> (Windows)\nParse a private key object from a PKCS#8 encoded document.\nParse a public key object from an encoded SPKI document.\nASN.1 DER-encoded document.\nSerialize a private key object to a PKCS#8 encoded …\nSerialize a public key object to a SPKI-encoded document.\nContains the error value\nError type\nMalformed cryptographic key contained in a PKCS#8 document.\nLine feed: <code>\\n</code> (Unix OSes)\nLine endings: variants of newline characters that can be …\nMaximum size of a BER/DER-encoded OID in bytes.\nThe OID associated with this type.\nObject identifier (OID).\nContains the success value\n<code>AlgorithmIdentifier::parameters</code> is malformed or otherwise …\nPKCS#8 <code>PrivateKeyInfo</code>.\nPublic key errors propagated from the <code>spki::Error</code> type.\nResult type\nSecret <code>Document</code> type.\nX.509 <code>SubjectPublicKeyInfo</code> (SPKI) as defined in RFC 5280 …\n<code>SubjectPublicKeyInfo</code> with <code>AnyRef</code> algorithm parameters, and …\nDenotes PKCS#8 v1: no public key field.\nDenotes PKCS#8 v2: <code>OneAsymmetricKey</code> with public key field.\nVersion identifier for PKCS#8 documents.\nX.509 <code>AlgorithmIdentifier</code> for the public key type\nX.509 <code>AlgorithmIdentifier</code> for the private key type.\nX.509 <code>AlgorithmIdentifier</code> for the public key type\nReturn the arc with the given index, if it exists.\nIterate over the arcs (a.k.a. nodes) of an <code>ObjectIdentifier</code>…\nGet the BER/DER serialization of this OID as bytes.\nGet the byte serialization of this <code>LineEnding</code>.\nGet the ASN.1 DER-encoded bytes of this document.\nBorrow the inner serialized bytes of this document.\nTry to decode the inner ASN.1 DER message contained in this\nTry to decode the inner ASN.1 DER message as the given …\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode the provided type as ASN.1 DER, storing the …\nEncode the provided type as ASN.1 DER.\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse an OID from a slice of <code>Arc</code> values (i.e. integers).\nParse an OID from from its BER/DER encoding.\nCreate a <code>SubjectPublicKeyInfoOwned</code> from any object that …\nDecode ASN.1 DER document from PEM.\nDecode ASN.1 DER document from PEM.\nDeserialize PKCS#8 private key from ASN.1 DER-encoded data …\nDeserialize PKCS#8-encoded private key from PEM.\nDeserialize PKCS#8-encoded private key from PEM.\nDeserialize object from ASN.1 DER-encoded […\nDeserialize PEM-encoded [<code>SubjectPublicKeyInfo</code>].\nIs this version expected to have a public key?\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert to a <code>SecretDocument</code>.\nConvert to an ASN.1 DER-encoded byte vector.\nGet the length of this <code>ObjectIdentifier</code> in arcs.\nGet the encoded length of this <code>LineEnding</code>.\nGet the length of the encoded ASN.1 DER in bytes.\nGet the length of the encoded ASN.1 DER in bytes.\nParse an <code>ObjectIdentifier</code> from the dot-delimited string …\nCreate a new PKCS#8 <code>PrivateKeyInfo</code> message.\nParse an <code>ObjectIdentifier</code> from the dot-delimited string …\nAlgorithm OID, i.e. the <code>algorithm</code> field in the …\nAlgorithm <code>parameters</code>.\nGet the parent OID of this one (if applicable).\nPrivate key data.\nPublic key data, optionally available if version is V2.\nPush an additional arc onto this OID, returning the child …\nRead ASN.1 DER document from a file.\nRead ASN.1 DER document from a file.\nRead PEM-encoded ASN.1 DER document from a file.\nRead PEM-encoded ASN.1 DER document from a file.\nLoad PKCS#8 private key from an ASN.1 DER-encoded file on …\nLoad PKCS#8 private key from an ASN.1 DER-encoded file on …\nLoad PKCS#8 private key from a PEM-encoded file on the …\nLoad PKCS#8 private key from a PEM-encoded file on the …\nLoad public key object from an ASN.1 DER-encoded file on …\nLoad public key object from a PEM-encoded file on the …\nPublic key data\nPublic key data\nReturn an allocated ASN.1 DER serialization as a byte …\nEncode ASN.1 DER document as a PEM string with …\nEncode ASN.1 DER document as a PEM string.\nSerialize a <code>SecretDocument</code> containing a PKCS#8-encoded …\nSerialize this private key as PEM-encoded PKCS#8 with the …\nSerialize this private key as PEM-encoded PKCS#8 with the …\nSerialize a <code>Document</code> containing a SPKI-encoded public key.\nSerialize this public key as PEM-encoded SPKI with the …\nReturn an ASN.1 DER-encoded byte vector.\nGet the PKCS#8 <code>Version</code> for this structure.\nWrite ASN.1 DER document to a file.\nWrite ASN.1 DER document to a file.\nWrite PEM-encoded ASN.1 DER document to a file.\nWrite PEM-encoded ASN.1 DER document to a file.\nWrite ASN.1 DER-encoded PKCS#8 private key to the given …\nWrite ASN.1 DER-encoded PKCS#8 private key to the given …\nWrite ASN.1 DER-encoded PKCS#8 private key to the given …\nWrite ASN.1 DER-encoded PKCS#8 private key to the given …\nWrite ASN.1 DER-encoded public key to the given path\nWrite ASN.1 DER-encoded public key to the given path")