searchState.loadedDescShard("hyper_rustls", 0, "hyper-rustls\nMethods for configuring roots\nThe default server name resolver, which uses the hostname …\nA server name resolver which always returns the same fixed …\nA stream over plain text.\nA stream protected with TLS.\nA Connector for the <code>https</code> scheme.\nA builder for an <code>HttpsConnector</code>\nA stream that might be protected with TLS.\nA trait implemented by types that can resolve a <code>ServerName</code> …\nThis builds an <code>HttpsConnector</code> built on hyper’s default …\nCreates a <code>crate::HttpsConnectorBuilder</code> to configure a …\nThe various states of the <code>HttpsConnectorBuilder</code>\nEnable HTTP1\nForce the use of HTTPS when connecting.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEnforce the use of HTTPS when connecting\nAllow both HTTPS and HTTP when connecting\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>ConnectorBuilder</code>\nCreates a new resolver returning the specified name.\nMaps a <code>Uri</code> into a <code>ServerName</code>.\nThis configures the platform’s trusted certs, as …\nShorthand for using rustls’ default crypto provider and …\nShorthand for using a custom <code>CryptoProvider</code> and native …\nOverride server name for the TLS stack\nOverride server name for the TLS stack\nPasses a rustls <code>ClientConfig</code> to configure the TLS …\nThis wraps an arbitrary low-level connector into an …\nState of a builder that needs to have some protocols …\nState of a builder with HTTP1 enabled, that may have some …\nState of a builder that needs schemes (https:// and …\nState of a builder that needs a TLS client config next\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")