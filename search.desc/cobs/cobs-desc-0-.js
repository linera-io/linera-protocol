searchState.loadedDescShard("cobs", 0, "<code>cobs</code>\nThe returned byte should be placed at the current end of …\nThe <code>CobsDecoder</code> type is used to decode a stream of bytes …\nThe <code>CobsEncoder</code> type is used to encode a stream of bytes …\nWe have received a complete and well-encoded COBS message. …\nThe following byte should be appended to the current end …\nA report of the source and destination bytes used during …\n<code>DecodeResult</code> represents the possible non-error outcomes of …\nThe <code>DecoderState</code> is used to track the current state of a …\nThe <code>EncoderState</code> is used to track the current state of a …\n1-254 bytes, can be header or 00\n255 bytes, will be a header next\nState machine has not received any non-zero bytes\nThe byte at the given index should be replaced with the …\nThe byte at the given index should be replaced with the …\nThe given input byte did not prompt an output byte, either …\n<code>PushResult</code> is used to represent the changes to an (encoded)\nDecodes the <code>source</code> buffer into the <code>dest</code> buffer.\nDecodes a message in-place.\nDecodes a message in-place.\nDecodes a message in-place using an arbitrary sentinel …\nDecodes the <code>source</code> buffer into the <code>dest</code> buffer using an …\nCreate a default initial state representation for a COBS …\nEncodes the <code>source</code> buffer into the <code>dest</code> buffer.\nEncodes the <code>source</code> buffer into the <code>dest</code> buffer using an …\nPush a single byte into the streaming CobsDecoder. Return …\nPush a single encoded byte into the state machine. If the …\nComplete encoding of the output message. Does NOT terminate\nFinalize the encoding process for a single message. The …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalculates the maximum possible size of an encoded message …\nCalculates the maximum overhead when encoding a message …\nCreate a new streaming Cobs Decoder. Provide the output …\nCreate a new streaming Cobs Encoder\nPush a slice of bytes into the streaming CobsDecoder. …\nPush a slice of data to be encoded\nPush a single unencoded byte into the encoder state machine\nAttempts to encode the <code>source</code> buffer into the <code>dest</code> buffer.\nNumber of bytes written to the decoded buffer.")