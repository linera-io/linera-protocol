searchState.loadedDescShard("glob", 0, "Support for matching file paths against Unix shell style …\nContains the error value\nA glob iteration error.\nAn alias for a glob iteration result.\nConfiguration options to modify the behaviour of …\nContains the success value\nAn iterator that yields <code>Path</code>s from the filesystem that …\nA compiled Unix shell style pattern.\nA pattern parsing error.\nAccess the original glob pattern.\nWhether or not patterns should be matched in a …\nThe error in question.\nEscape metacharacters within the given string by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn an iterator that produces all the <code>Path</code>s that match …\nReturn an iterator that produces all the <code>Path</code>s that match …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes self, returning the <em>raw</em> underlying <code>io::Error</code>\nReturn if the given <code>str</code> matches this <code>Pattern</code> using the …\nReturn if the given <code>Path</code>, when converted to a <code>str</code>, matches …\nReturn if the given <code>Path</code>, when converted to a <code>str</code>, matches …\nReturn if the given <code>str</code> matches this <code>Pattern</code> using the …\nA message describing the error.\nThis function compiles Unix shell style patterns.\nConstructs a new <code>MatchOptions</code> with default field values. …\nThe Path that the error corresponds to.\nThe approximate character index of where the error …\nWhether or not paths that contain components that start …\nWhether or not path-component separator characters (e.g. <code>/</code> …")