searchState.loadedDescShard("linera_ethereum", 0, "This module provides functionalities for accessing an …\nHelper types for tests and similar purposes.\nThe basic Ethereum queries that can be used from a smart …\nA basic RPC client for making JSON queries\nReturns the argument unchanged.\nLists all the accounts of the Ethereum node.\nGets the balance of the specified address at the specified …\nGets the latest block number of the Ethereum node.\nGets a new ID for the next message.\nCalls <code>U::from(self)</code>.\nThe operation done with <code>eth_call</code> on Ethereum returns a …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads the events of the smart contract.\nThe function doing the parsing of the input and output.\nThe inner function that has to be implemented and access …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nAlloy Reqwest error\nA single primitive data type. This is used for example for …\nThe data type for an Ethereum event emitted by a smart …\nEthereum parsing error\nThe database is not coherent\nHex parsing error\nThe ID should be matching\n<code>serde_json</code> error\nParse big int error\nParse bool error\nParsing error\nRPC error\nURL parsing error\nwrong JSON-RPC version\nConverts an entry named <code>Event(type1 indexed,type2 indexed)</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nThe Ethereum endpoint and its provider used for accessing …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConnects to an existing Ethereum node and creates an …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nGenerated by the following Solidity interface…\nGenerated by the following Solidity interface…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConnects to an existing Ethereum node and creates an …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nThe creation / init bytecode of the contract.\nThe runtime bytecode of the contract, as deployed on the …\nContainer for all the <code>EventNumericsContract</code> events.\nA <code>EventNumericsContract</code> instance.\nAll the selectors of this enum.\nEvent with signature …\nCreates a new event filter for the <code>Types</code> event.\nReturns a reference to the address.\nSets the address and returns <code>self</code>.\nCreates a new call builder using this contract instance’…\nConstructor`.\nDeploys this contract using the given <code>provider</code> and …\nDeploys this contract using the given <code>provider</code> and …\nCreates a <code>RawCallBuilder</code> for deploying this contract using …\nCreates a <code>RawCallBuilder</code> for deploying this contract using …\nCreates a new event filter using this contract instance’…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new wrapper around an on-chain …\nCreates a new wrapper around an on-chain …\nReturns a reference to the provider.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nSets the address.\nClones the provider and returns a new instance with the …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nThe creation / init bytecode of the contract.\nThe runtime bytecode of the contract, as deployed on the …\nEvent with signature <code>Initial(address,uint256)</code> and selector …\nCreates a new event filter for the <code>Initial</code> event.\nAll the selectors of this enum.\nAll the selectors of this enum.\nContainer for all the <code>SimpleTokenContract</code> function calls.\nContainer for all the <code>SimpleTokenContract</code> events.\nA <code>SimpleTokenContract</code> instance.\nEvent with signature <code>Transfer(address,address,uint256)</code> and …\nCreates a new event filter for the <code>Transfer</code> event.\nReturns a reference to the address.\nSets the address and returns <code>self</code>.\nCreates a new call builder for the [<code>balanceOf</code>] function.\nFunction with signature <code>balanceOf(address)</code> and selector …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>balances</code>] function.\nFunction with signature <code>balances(address)</code> and selector …\nContainer type for the return parameters of the …\nCreates a new call builder using this contract instance’…\nConstructor`.\nDeploys this contract using the given <code>provider</code> and …\nDeploys this contract using the given <code>provider</code> and …\nCreates a <code>RawCallBuilder</code> for deploying this contract using …\nCreates a <code>RawCallBuilder</code> for deploying this contract using …\nCreates a new event filter using this contract instance’…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new wrapper around an on-chain …\nCreates a new wrapper around an on-chain …\nReturns a reference to the provider.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nSets the address.\nCreates a new call builder for the [<code>totalSupply</code>] function.\nFunction with signature <code>totalSupply()</code> and selector …\nContainer type for the return parameters of the …\nCreates a new call builder for the [<code>transfer</code>] function.\nFunction with signature <code>transfer(address,uint256)</code> and …\nContainer type for the return parameters of the …\nClones the provider and returns a new instance with the …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.")