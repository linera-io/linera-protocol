searchState.loadedDescShard("semver", 0, "github crates-io docs-rs\nOptional build metadata identifier. This comes after <code>+</code> in …\nA pair of comparison operator and partial version, such as …\nError parsing a SemVer version or version requirement.\nSemVer comparison operator: <code>=</code>, <code>&gt;</code>, <code>&gt;=</code>, <code>&lt;</code>, <code>&lt;=</code>, <code>~</code>, <code>^</code>, <code>*</code>.\nOptional pre-release identifier on a version string. This …\nA <code>VersionReq</code> with no constraint on the version numbers it …\n<strong>SemVer version</strong> as defined by https://semver.org.\n<strong>SemVer version requirement</strong> describing the intersection of …\nCompare the major, minor, patch, and pre-release value of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEvaluate whether the given <code>Version</code> satisfies the version …\nCreate <code>Version</code> with an empty pre-release and build …\nCreate <code>Version</code> by parsing from string representation.\nCreate <code>VersionReq</code> by parsing from string representation.\nPatch is only allowed if minor is Some.\nNon-empty pre-release is only allowed if patch is Some.")