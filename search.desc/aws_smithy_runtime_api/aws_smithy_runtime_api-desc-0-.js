searchState.loadedDescShard("aws_smithy_runtime_api", 0, "APIs needed to configure and customize the Smithy …\nA boxed error that is <code>Send</code> and <code>Sync</code>.\nAPIs for client orchestration.\nHTTP request and response types\nImplements <code>FromUnshared</code> for a shared type.\nConversion traits for converting an unshared type into a …\nA boxed error that is <code>Send</code> and <code>Sync</code>.\nAPIs for request authentication.\nBehavior version of the client\nTypes related to connection monitoring and management.\nNew-type for a configurable app name.\nInterfaces for resolving DNS\nAPIs needed to configure endpoint resolution for clients.\nHTTP clients and connectors\nSmithy identity used by auth and signing.\nInterceptors for clients.\nClient request orchestration.\nTypes for error responses.\nRetry handling and token bucket.\nRuntime components used to make a request and handle a …\nRuntime plugin type definitions.\nSerialization/deserialization for the orchestrator.\nStalled stream protection.\nSmithy support-code for code generated waiters.\nAn auth scheme.\nEndpoint configuration for the selected auth scheme.\nNew type around an auth scheme ID.\nThe output type from the …\nBuilder struct for <code>AuthSchemeOption</code>\nThe error type returned when failing to build …\nParameters needed to resolve auth scheme options.\nFuture for …\nAn ordered list of AuthSchemeIds\nResolver for auth scheme options.\nContainer for a shared auth scheme implementation.\nA shared auth scheme option resolver.\nSigning implementation for an auth scheme.\nReturns the endpoint configuration as a <code>Document</code>.\nReturns the string equivalent of this auth scheme ID.\nBuilds an <code>AuthSchemeOption</code>, otherwise returns an …\nBuilder struct for <code>AuthSchemeOption</code>\nCreates an empty <code>AuthSchemeEndpointConfig</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the underlying parameters as the type <code>T</code> if they …\nAuth schemes for the HTTP <code>Authorization</code> header.\nReturns the identity resolver that can resolve an identity …\nReturns the string equivalent of this auth scheme ID.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new auth scheme ID.\nCreates a new <code>AuthSchemeOptionResolverParams</code>.\nCreate a new <code>AuthSchemeOptionsFuture</code> with the given future.\nCreates a new <code>SharedAuthSchemeOptionResolver</code>.\nCreates a new <code>SharedAuthScheme</code> from the given auth scheme.\nCreate a new <code>AuthSchemeOptionsFuture</code> with the given boxed …\nReturns optional properties for identity resolution or …\nSets the properties for the builder\nCreate a <code>AuthSchemeOptionsFuture</code> that is immediately ready …\nReturns a list of available auth scheme options to choose …\nReturns a list of available auth scheme options to choose …\nReturns the unique identifier associated with this auth …\nReturns <code>AuthSchemeId</code>, the ID of the scheme\nSets <code>AuthSchemeId</code> for the builder\nSets the properties for the builder\nSets <code>AuthSchemeId</code> for the builder\nSign the given request with the given identity, …\nReturns the signing implementation for this auth scheme.\nStatic auth scheme option resolver.\nAuth scheme ID for HTTP API key based authentication.\nAuth scheme ID for HTTP Basic Auth.\nAuth scheme ID for HTTP Bearer Auth.\nAuth scheme ID for HTTP Digest Auth.\nNew-type around a <code>Vec&lt;AuthSchemeId&gt;</code> that implements …\nEmpty params to be used with <code>StaticAuthSchemeOptionResolver</code>…\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new instance of <code>StaticAuthSchemeOptionResolver</code>.\nCreates a new <code>StaticAuthSchemeOptionResolverParams</code>.\nBehavior version of the client\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTrue if this version is newer or equal to the given <code>other</code> …\nThis method will always return the latest major version.\nBehavior version for November 9th, 2023.\nBehavior version for March 28th, 2024.\nBehavior version for January 17th, 2025\nState for a middleware that will monitor and manage …\nMetadata that tracks the state of an active connection.\nBuilder type that is used to construct a <code>ConnectionMetadata</code>…\nBuild a <code>ConnectionMetadata</code> value.\nBuilder for this connection metadata\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the associated connection metadata.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the local address for this connection, if one is set.\nSet the local address of the connection used.\nCreate a new <code>ConnectionMetadata</code>.\nCreates a new builder.\nCreate a new connection monitor.\nPoison this connection, ensuring that it won’t be reused.\nSet a closure which will poison the associated connection.\nSet whether or not the associated connection is to an HTTP …\nGet the remote address for this connection, if one is set.\nSet the remote address of the connection used.\nSet the retriever that will capture the <code>hyper</code> connection.\nSet the local address of the connection used.\nSet a closure which will poison the associated connection.\nSet whether or not the associated connection is to an HTTP …\nSet the remote address of the connection used.\nThe name of the crate that provides the HTTP connectors …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn the name of the crate backing a connector.\nCreate a new <code>ConnectorMetadata</code>.\nReturn the version of the crate backing a connector.\nNew-type for the future returned by the <code>ResolveDns</code> trait.\nTrait for resolving domain names\nError that occurs when failing to perform a DNS lookup.\nShared instance of <code>ResolveDns</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>DnsLookupFailed</code> error.\nCreate a new <code>DnsFuture</code> with the given future.\nCreate a new <code>SharedDnsResolver</code>.\nCreate a new <code>DnsFuture</code> with the given boxed future.\nCreate a <code>DnsFuture</code> that is immediately ready with the …\nAsynchronously resolve the given domain name\nFuture for <code>ResolveEndpoint::resolve_endpoint</code>.\nA special type that adds support for services that have …\nParameters originating from the Smithy endpoint ruleset …\nConfigurable endpoint resolver implementation.\nShared endpoint resolver.\nGet the <code>str</code> representation of this <code>EndpointPrefix</code>.\nErrors related to endpoint resolution and validation\nFinalize the service-specific concrete parameters in …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempts to downcast the underlying concrete parameters to …\nAttempts to downcast the underlying concrete parameters to …\nAttempts to retrieve a reference to property of a given …\nAttempts to retrieve a mutable reference to property of a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>EndpointFuture</code> with the given future.\nCreates a new <code>EndpointResolverParams</code> from a concrete …\nCreates a new <code>SharedEndpointResolver</code>.\nCreate a new endpoint prefix from an <code>impl Into&lt;String&gt;</code>. If …\nCreate a new <code>EndpointFuture</code> with the given boxed future.\nCreate a <code>EndpointFuture</code> that is immediately ready with the …\nAsynchronously resolves an endpoint to use from the given …\nSets property of an arbitrary type <code>T</code> for the endpoint …\nAn error that occurs when an endpoint is found to be …\nEndpoint resolution failed\nConstruct a build error for a missing scheme\nConstruct a build error for an invalid authority\nConstruct a build error for an invalid URI\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>ResolveEndpointError</code> from a message and a source\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate an <code>ResolveEndpointError</code> with a message\nAdd a source to the error\nHTTP client abstraction.\nTrait with a <code>call</code> function that asynchronously converts a …\nFuture for <code>HttpConnector::call</code>.\nSettings for HTTP Connectors\nBuilder for <code>HttpConnectorSettings</code>.\nShared HTTP client for use across multiple clients and …\nA shared <code>HttpConnector</code> implementation.\nBuilds the <code>HttpConnectorSettings</code>.\nReturns a builder for <code>HttpConnectorSettings</code>.\nAsynchronously converts a request into a response.\nSets the connect timeout that should be used.\nReturns the connect timeout that should be used.\nProvide metadata about the crate that this HttpClient uses …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a <code>SharedHttpClient</code> that calls the given <code>connector</code> …\nReturns a HTTP connector based on the requested connector …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>HttpConnectorFuture</code> with the given future.\nReturns a new <code>SharedHttpConnector</code>.\nCreates a new <code>SharedHttpClient</code>\nCreates a new builder.\nCreate a new <code>HttpConnectorFuture</code> with the given boxed …\nSets the read timeout that should be used.\nReturns the read timeout that should be used.\nCreate a <code>HttpConnectorFuture</code> that is immediately ready …\nSets the connect timeout that should be used.\nSets the read timeout that should be used.\nValidate the base client configuration.\nValidate the final client configuration.\nError constructing <code>Identity</code>.\nBuilder for <code>Identity</code>\nAn identity that can be used for authentication.\nCache location for identity caching.\nCache partition key for identity caching.\nFuture for [<code>IdentityResolver::resolve_identity</code>].\nIndicates the identity cache is internally managed by the …\nCaching resolver for identities.\nResolver for identities.\nIndicates the identity cache is owned by <code>RuntimeComponents</code>.\nShared identity cache.\nContainer for a shared identity resolver.\nBuild <code>Identity</code>.\nReturns <code>Builder</code> for <code>Identity</code>.\nReturns the location of an identity cache associated with …\nReturns the identity cache partition associated with this …\nReturns the globally unique cache partition key for this …\nReturns the raw identity data.\nSet raw identity data for the builder.\nReturns the expiration time for this identity, if any.\nSet expiration for the builder.\nReturns a fallback identity.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIdentity types for HTTP auth\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>IdentityFuture</code> with the given future.\nCreate a new globally unique cache partition key.\nCreates a new <code>SharedIdentityCache</code> from the given cache …\nCreates a new <code>SharedIdentityResolver</code> from the given …\nCreates a new identity with the given data and expiration …\nCreate a new <code>IdentityFuture</code> with the given boxed future.\nHelper for unit tests to create an identity cache …\nReturns arbitrary property associated with this <code>Identity</code>.\nSet arbitrary property for the builder.\nCreate a <code>IdentityFuture</code> that is immediately ready with the …\nReturns a cached identity, or resolves an identity and …\nAsynchronously resolves an identity for a request using …\nSet raw identity data for the builder.\nSet expiration for the builder.\nSet arbitrary property for the builder.\nValidate the base client configuration.\nValidate the final client configuration.\nIdentity type required to sign requests using Smithy’s …\nIdentity type required to sign requests using Smithy’s …\nReturns the expiration time (if any) for this token.\nReturns the expiration time of this login (if any)\nCreates a <code>Token</code> for tests.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstructs a new identity token for HTTP auth.\nConstructs a new identity login for HTTP auth.\nReturns the login password.\nReturns the underlying identity token.\nReturns the login user.\nGeneralized interceptor disabling interface\nAn interceptor allows injecting code into the SDK ’s …\nInterceptor wrapper that may be shared\nInterceptor context.\nDisable an interceptor with a given cause\nChecks if this interceptor is enabled in the given config.\nErrors related to Smithy interceptors\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA hook called when an attempt is completed. This method …\nA hook called when an execution is completed. This method …\nA hook called before the transport response message is …\nA hook called before the retry loop is entered. This method\nA hook called before the input message is marshalled into a\nA hook called before the transport request message is …\nA hook called before the transport request message is sent …\nThe name of this interceptor, used in error messages for …\nCreate a new <code>SharedInterceptor</code> from <code>Interceptor</code>.\nA hook called when an attempt is completed.\nA hook called after the transport response message is …\nA hook called when an execution is completed.\nA hook called after the input message is marshalled into a …\nA hook called after the transport request message is …\nA hook called after the transport request message is sent …\nA hook called before each attempt at sending the …\nA hook called before the transport response message is …\nA hook called at the start of an execution, before the SDK …\nA hook called before the input message is marshalled into …\nA hook called before the transport request message is …\nA hook called before the transport request message is sent …\nInterceptor context for hooks after deserializing the …\nInterceptor context for hooks before deserializing the …\nInterceptor context for hooks before deserializing the …\nInterceptor context for the <code>modify_before_serialization</code> …\nInterceptor context for the <code>read_before_execution</code> and …\nInterceptor context for several hooks in between …\nInterceptor context for several hooks in between …\nContains the error value\nType-erased operation error.\nInterceptor context for finalization hooks.\nInterceptor context for finalization hooks.\nThe request couldn’t be rewound because it wasn’t …\nType-erased operation input.\nA container for the data currently available to an …\nThe request was rewound successfully.\nContains the success value\nType-erased operation output.\nType-erased result for an operation.\nThe result of attempting to rewind a request.\nThe request wasn’t rewound because it was unnecessary.\nReturns a <code>Input</code> with a fake/test value with the …\nReturns a <code>Output</code> with a fake/test value with the …\nReturns a <code>Error</code> with a fake/test value with the …\nDowncasts to the concrete input value.\nDowncasts to the concrete input value.\nDowncasts to the concrete input value.\nDowncasts to the concrete input value.\nDowncasts to the concrete input value.\nDowncasts to the concrete input value.\nDowncasts to the concrete input value.\nDowncasts to the concrete input value.\nDowncasts to the concrete input value.\nAdvance to the AfterDeserialization phase.\nAdvance to the BeforeDeserialization phase.\nAdvance to the BeforeTransmit phase.\nAdvance to the Deserialization phase.\nAdvance to the Serialization phase.\nAdvance to the Transmit phase.\nCreates a new <code>Input</code> with the provided concrete input value.\nCreates a new <code>Output</code> with the provided concrete input …\nCreates a new <code>Error</code> with the provided concrete input value.\nMark this context as failed due to errors during the …\nConvert this context into the final operation result that …\nConvert the given output/error into a final operation …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDowngrade this wrapper struct, returning the underlying …\nDowngrade this wrapper struct, returning the underlying …\nDowngrade this wrapper struct, returning the underlying …\nDowngrade this wrapper struct, returning the underlying …\nDowngrade this wrapper struct, returning the underlying …\nDowngrade this wrapper struct, returning the underlying …\nDowngrade this wrapper struct, returning the underlying …\nDowngrade this wrapper struct, returning the underlying …\nDowngrade this wrapper struct, returning the underlying …\nDowngrade this wrapper struct, returning the underlying …\nDowngrade this wrapper struct, returning the underlying …\nDowngrade this wrapper struct, returning the underlying …\nDowngrade this wrapper struct, returning the underlying …\nReturns the operation input.\nReturns the operation input.\nReturns a reference to the input.\nReturns a reference to the input.\nRetrieve the input for the operation being invoked.\nMutably returns the operation input.\nReturns a mutable reference to the input.\nRetrieve the input for the operation being invoked.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecomposes the context into its constituent parts.\nReturn <code>true</code> if this context’s <code>output_or_error</code> is an …\nCreates a new interceptor context in the “before …\nReturns a reference to the deserialized output or error.\nReturns the deserialized operation output or error.\nReturns the deserialized operation output or error.\nReturns the deserialized output or error.\nMutably returns the deserialized operation output or error.\nReturns the mutable reference to the deserialized output …\nReturns the serialized request.\nReturns the serialized request.\nReturns a reference to the transmittable request for the …\nReturns a reference to the transmittable request for the …\nRetrieve the transmittable request for the operation being …\nMutably returns the serialized request.\nReturns a mutable reference to the transmittable request …\nRetrieve the transmittable request for the operation being …\nReturns a reference to the response.\nReturns a reference to the response.\nReturns the raw response.\nReturns the raw response.\nReturns a reference to the response.\nReturns the response.\nReturns a mutable reference to the response.\nMutably returns the raw response.\nReturns a mutable reference to the response.\nReturns false if rewinding isn’t possible\nSet the request checkpoint. This should only be called …\nSet the output or error for the operation being invoked.\nSet the request for the operation being invoked.\nSet the response for the operation being invoked.\nTakes ownership of the input.\nGrants ownership of the deserialized output/error.\nTakes ownership of the request.\nA convenience error that allows for adding additional …\nAn error related to Smithy interceptors.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new error indicating that an interceptor tried to …\nCreate a new error indicating that an interceptor tried to …\nCreate a new error indicating that an interceptor tried to …\nCreate a new error indicating that an interceptor tried to …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreates a new <code>ContextAttachedError</code> with the given <code>context</code> …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nCreate a new error indicating a failure with a …\nType alias for the HTTP request type that the orchestrator …\nType alias for the HTTP response type that the …\nThe request body is already loaded.\nInforms the orchestrator on whether or not the request …\nMetadata added to the <code>ConfigBag</code> that identifies the API …\nDon’t attempt to load the request body into memory.\nErrors that can occur while running the orchestrator.\nAttempt to load the request body into memory.\nMarker type stored in the config bag to indicate that a …\nReturn this orchestrator error as a connector error if …\nReturn this orchestrator error as an operation error if …\nCreate a connector error with the given source.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate an interceptor error with the given source.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if the underlying error is a <code>ConnectorError</code>.\nTrue if the underlying error is an interceptor error.\nTrue if the underlying error is an operation error.\nTrue if the underlying error is a response error.\nTrue if the underlying error is a timeout error.\nMaps the error type in <code>ErrorKind::Operation</code>\nReturns the operation name.\nCreates <code>Metadata</code>.\nCreate an operation error.\nCreate a new <code>OrchestratorError</code> from the given source.\nCreate a response error with the given source.\nReturns the service name.\nCreate a timeout error with the given source.\nError from the underlying Connector\nError context for <code>SdkError::ConstructionFailure</code>\nThe request failed during construction. It was not …\nConstructs the unhandled variant of a code generated error.\nError context for <code>SdkError::DispatchFailure</code>\nThe request failed during dispatch. An HTTP response was …\nError context for <code>SdkError::ResponseError</code>\nA response was received but it was not parseable according …\nFailed SDK Result\nError context for <code>SdkError::ServiceError</code>\nAn error response was received from the service\nError context for <code>SdkError::TimeoutError</code>\nThe request failed due to a timeout. The request MAY have …\nReturns the inner error if it is a connector error\nReturns the optional error kind associated with an …\nReturns the optional error kind associated with an …\nReturns a reference underlying service error <code>E</code> if there is …\nCreates a builder for this error context type.\nCreates a builder for this error context type.\nCreates a builder for this error context type.\nCreates a builder for this error context type.\nCreates a builder for this error context type.\nBuilders for <code>SdkError</code> variant context.\nReturns metadata about the connection\nConstruct a <code>SdkError</code> for a construction failure\nCreates an unhandled error variant with the given <code>source</code> …\nConstruct a <code>SdkError</code> for a dispatch failure with a …\nReturns the underlying error of type <code>E</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this error context into the underlying error <code>E</code>\nConverts this error context into the raw response\nConverts this error context into the raw response\nReturns the underlying service error <code>E</code> if there is one\nConverts this error into its error source.\nGrants ownership of this error’s source.\nConstruct a <code>ConnectorError</code> from an IO related error (e.g. …\nReturns true if the error is an IO error\nReturns true if the error is an IO error\nReturns true if the error is an unclassified error.\nReturns true if the error is an unclassified error.\nReturns true if the error is an timeout error\nReturns true if the error is an timeout error\nReturns true if the error is a user-caused error (e.g., …\nReturns true if the error is a user-caused error (e.g., …\nMaps the service error type in <code>SdkError::ServiceError</code>\nSet the connection status on this error to report that a …\nConstruct a <code>ConnectorError</code> from an different unclassified …\nReturns a reference to the raw response\nReturns a reference to the raw response\nReturn a reference to this error’s raw response, if it …\nConstruct a <code>SdkError</code> for a response error\nConstruct a <code>SdkError</code> for a service failure\nConstruct a <code>ConnectorError</code> from an error caused by a …\nConstruct a <code>SdkError</code> for a timeout\nConstruct a <code>ConnectorError</code> from an error caused by the …\nInclude connection information along with this error\nBuilder for <code>ConstructionFailure</code>.\nBuilder for <code>DispatchFailure</code>.\nBuilder for <code>ResponseError</code>.\nBuilder for <code>ServiceError</code>.\nBuilder for <code>TimeoutError</code>.\nBuilds the error context.\nBuilds the error context.\nBuilds the error context.\nBuilds the error context.\nBuilds the error context.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new builder.\nCreates a new builder.\nCreates a new builder.\nCreates a new builder.\nCreates a new builder.\nSets the raw response.\nSets the raw response.\nSets the raw response.\nSets the raw response.\nSets the error source.\nSets the error source.\nSets the error source.\nSets the error source.\nSets the error source.\nSets the error source.\nSets the error source.\nSets the error source.\nSets the error source.\nSets the error source.\nA retry classifier for testing purposes. This classifier …\nDoesn’t count against any budgets. This could be …\nType of error that occurred when making a request.\nNo, no attempt should be made\nA type to track the number of requests sent by the …\nDecider for whether or not to attempt a request, and when.\nServer error that isn’t explicitly throttling but is …\nA shared retry strategy.\nAn answer to the question “should I make a request …\nAn error where the server explicitly told the client to …\nA connection-level error.\nYes, an attempt should be made\nYes, an attempt should be made, but only after the given …\nReturns the number of attempts.\nClassifiers for determining if a retry is necessary and …\nReturns the delay duration if this is a <code>YesAfterDelay</code> …\nIf this isn’t a <code>No</code> variant, panic.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>SharedRetryStrategy</code> from a retry strategy.\nCreates a new <code>RequestAttempts</code> with the given number of …\nDecides if the initial attempt should be made.\nDecides if a retry should be done.\nClassifies what kind of retry is needed for a given …\nWhen a classifier can’t run or has no opinion, this …\nThe result of running a <code>ClassifyRetry</code> on a …\nThe priority of a retry classifier. Classifiers with a …\nWhen a classifier runs and decides a response must not be …\nWhen a classifier runs and thinks a response should be …\nThe reason for a retry.\nWhen an error is received that should be retried, this …\nRetry classifier used by the retry strategy to classify …\nRun this classifier on the <code>InterceptorContext</code> to determine …\nCreate a new <code>RetryAction</code> indicating that a retry is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a new <code>RetryClassifierPriority</code> with the default …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>RetryClassifierPriority</code> with the default …\nThe name of this retry classifier.\nGiven a <code>ClassifyRetry</code> trait object, create a new …\nThe priority of this retry classifier.\nCreate a new <code>RetryAction</code> indicating that a retry is …\nCreate a new <code>RetryAction</code> indicating that a retry is …\nCreate a new <code>RetryClassifierPriority</code> that can override the …\nCreate a new <code>RetryClassifierPriority</code> that can be …\nCreate a new <code>RetryAction</code> indicating that a retry is …\nCheck if a retry is indicated.\nCreate a new <code>RetryAction</code> indicating that a retry is …\nCreate a new <code>RetryAction</code> indicating that a retry is …\nCreate a new <code>RetryClassifierPriority</code> with the default …\nCreate a new <code>RetryClassifierPriority</code> with higher priority …\nCreate a new <code>RetryClassifierPriority</code> with lower priority …\nThe kind of error.\nA server may tell us to retry only after a specific time …\nAn error that occurs when building runtime components.\nA trait for retrieving a shared identity resolver.\nComponents that can only be set in runtime plugins that …\nBuilder for <code>RuntimeComponents</code>.\nA client config validator.\nTime-related subset of components that can be extracted …\nReturns the requested auth scheme if it is set.\nReturns the auth scheme option resolver.\nReturns the auth scheme option resolver.\nReturns the auth schemes.\nCreates a base client validator from a function.\nBuilds <code>RuntimeComponents</code> from this builder.\nReturns a builder for runtime components.\nReturns the config validators.\nReturns the config validators.\nReturns the endpoint resolver.\nReturns the endpoint resolver.\nAdds all the given config validators.\nAdds all the given interceptors.\nAdds all the given retry classifiers.\nCreates a runtime components builder with all the required …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>RuntimeComponentsBuilder</code>, inheriting all …\nReturns the HTTP client.\nReturns the HTTP client.\nReturns the identity cache.\nReturns the identity cache.\nReturns the requested identity resolver if it is set.\nReturns <code>SharedIdentityResolver</code> configured in the builder …\nReturns an iterator over the interceptors.\nReturns the interceptors.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this builder into <code>TimeComponents</code>.\nMerge in components from another builder.\nCreates a new builder.\nAdds an auth scheme, replacing the existing one.\nAdds a config validator.\nThis method is broken since it does not replace an …\nAdds an interceptor.\nAdds a retry_classifier.\nReturns an iterator over the retry classifiers.\nReturns the retry classifiers.\nReturns the retry strategy.\nReturns the retry strategy.\nSets the auth scheme option resolver.\nSets the endpoint resolver.\nSets the HTTP client.\nSets the identity cache.\nSets the identity resolver for a given <code>scheme_id</code>.\nDirectly sets the interceptors and clears out any that …\nDirectly sets the retry_classifiers and clears out any …\nSets the retry strategy.\nSets the async sleep implementation.\nSets the time source.\nReturns the async sleep implementation.\nReturns the async sleep implementation.\nReturns the async sleep implementation if one is available.\nReturns the time source.\nReturns the time source.\nReturns the time source if one is available.\nClones and converts this <code>RuntimeComponents</code> into a …\nValidate the base client configuration.\nValidate the final client configuration.\nAdds an auth scheme.\nSets the auth scheme option resolver.\nAdds a config validator.\nSets the endpoint resolver.\nSets the HTTP client.\nSets the identity cache.\nAdds an identity resolver.\nAdds an interceptor.\nDirectly sets the interceptors and clears out any that …\nAdds a retry_classifier.\nSets the retry strategy.\nSets the async sleep implementation.\nSets the time source.\nRuntime plugins with <code>Defaults</code> order are executed first …\nRuntime plugins with <code>NestedComponents</code> order are executed …\nRuntime plugin ordering.\nRuntime plugins with <code>Overrides</code> order are executed after …\nRuntime plugin trait\nUsed internally in the orchestrator implementation and in …\nShared runtime plugin\nRuntime plugin that simply returns the config and …\nApply the client-level runtime plugins’ config to the …\nApply the operation-level runtime plugins’ config to the …\nOptionally returns additional config that should be added …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>SharedRuntimePlugin</code>.\nReturns a new <code>StaticRuntimePlugin</code>.\nCreate a new empty set of runtime plugins.\nRuntime plugin ordering.\nReturns a <code>RuntimeComponentsBuilder</code> to incorporate into the …\nAdds a client-level runtime plugin.\nAdd several client-level runtime plugins from an iterator.\nChanges the config.\nAdds an operation-level runtime plugin.\nAdd several operation-level runtime plugins from an …\nChanges the order of this runtime plugin.\nChanges the runtime components.\nDeserialization implementation that converts an …\nSerialization implementation that converts an <code>Input</code> into …\nA shared request serializer.\nShared response deserializer.\nDeserialize the entire response including its body into an …\nFor streaming requests, deserializes the response headers.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new shared request serializer.\nCreates a new <code>SharedResponseDeserializer</code>.\nSerializes the input into an HTTP request.\nThe default grace period for stalled stream protection.\nConfiguration for stalled stream protection.\nBuild the config.\nCreate a new config that disables stalled stream …\nTrue if stalled stream protection is enabled for download …\nSet whether stalled stream protection is enabled for …\nCreate a new config that enables stalled stream protection …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn the grace period for stalled stream protection.\nSet the grace period for stalled stream protection.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn whether stalled stream protection is enabled for …\nSet whether stalled stream protection is enabled for both …\nSet whether stalled stream protection is enabled for …\nSet the grace period for stalled stream protection.\nSet whether stalled stream protection is enabled for both …\nSet whether stalled stream protection is enabled for …\nTrue if stalled stream protection is enabled for upload …\nSet whether stalled stream protection is enabled for …\nResult of the final polling attempt made by a waiter.\nReturns the underlying result.\nError types for waiters.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGrants ownership of the underlying result.\nMaps the operation type with a function.\nMaps the error type with a function.\nCreates a new <code>FinalPoll</code> from a result.\nAn error occurred during waiter initialization.\nError context for <code>WaiterError::ExceededMaxWait</code>.\nThe maximum wait time was exceeded without completion.\nError context for <code>WaiterError::FailureState</code>.\nWaiting ended in a failure state.\nError context for <code>WaiterError::OperationFailed</code>.\nA polling operation failed while waiting.\nAn error occurred while waiting.\nConstruct a waiter construction failure with the given …\nHow much time actually elapsed before max wait was …\nReturns the underlying source <code>SdkError</code>.\nReturns the result of the final polling attempt.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGrants ownership of the underlying source <code>SdkError</code>.\nGrants ownership of the result of the final polling …\nReturns the configured max wait time that was exceeded.\nCreates new error context.\nCreates new error context given a final poll result.\nCreates new error context given a source <code>SdkError</code>.\nReturns the number of polling operations that were made …\nHeaderValue type\nAn immutable view of headers\nAn Iterator over headers\nAn error occurred constructing an Http Request.\nAn HTTP Request Type\nParts struct useful for structural decomposition that the …\nAn HTTP Response Type\nHTTP response status code\nAdds an extension to the request extensions\nAdds an extension to the response extensions\nAppends a value to a given key\nReturns the string representation of this header value\nReturn the value of this status code as a <code>u16</code>.\nReturns the body associated with the request\nReturns the body associated with the request\nRequest body.\nReturns a mutable reference to the body\nReturns a mutable reference to the body\nReturns true if this header is present\nCreate a GET request to <code>/</code> with an empty body\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value for a given key\nCreates a GET request to <code>uri</code> with an empty body\nReturns all values for a given key\nReturns a reference to the header map\nReturns a reference to the header map\nRequest headers.\nReturns a mutable reference to the header map\nReturns a mutable reference to the header map\nInsert a value into the headers structure.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this request into the request body.\nConverts this response into the response body.\nConvert this request into its parts.\nTrue if this response code is a client error (4xx)\nReturns true if there are no headers\nTrue if this response code is a server error (5xx)\nTrue if this is a successful response code (200, 201, etc)\nReturns an iterator over the headers\nReturns the total number of <strong>values</strong> stored in the map\nUpdate the body of this request to be a new body.\nUpdate the body of this response to be a new body.\nReturns the method associated with this request\nCreate an empty header map\nReturns a GET request with no URI\nReturns a response with the given status and body\nRemoves all headers with a given key\nSets the URI of this request\nReturns the status code\nReturns a mutable reference to the status code\nReplaces this request’s body with <code>SdkBody::taken()</code>\nReplaces this response’s body with <code>SdkBody::taken()</code>\nAppends a value to a given key\nAttempts to clone this request\nInsert a value into the headers structure.\nConverts this request into an http 0.x request.\nConverts this response into an http 0.x response.\nConverts this request into an http 1.x request.\nConverts this response into an http 1.x response.\nReturns the URI associated with this request\nRequest URI.\nReturns a mutable reference the the URI of this …\nLike the <code>From</code> trait, but for converting to a shared type.\nLike the <code>Into</code> trait, but for (efficiently) converting into …\nCreates a shared type from an unshared type.\nCreates a shared type from an unshared type.\nGiven a <code>value</code>, determine if that value is already shared. …")