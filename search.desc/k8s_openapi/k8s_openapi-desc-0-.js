searchState.loadedDescShard("k8s_openapi", 0, "Bindings for the Kubernetes client API, generated from the …\nThe API version of the resource. This is a composite of …\nA wrapper around a list of bytes.\nIndicates that a <code>Resource</code> is cluster-scoped.\nA trait applies to types that support deep merging.\nThe group of the resource, or the empty string if the …\nThe kind of the resource.\nThe kind of the list type of the resource.\nList is a list of resources.\nA trait applied to all Kubernetes resources that can be …\nA trait applied to all Kubernetes resources that have …\nIndicates that a <code>Resource</code> is namespace-scoped.\nA trait applied to all Kubernetes resources.\nThe scope of a <code>Resource</code>.\nIndicates whether the resource is namespace-scoped or …\nIndicates that a <code>Resource</code> is neither cluster-scoped nor …\nThe type of the metadata object.\nThe URL path segment used to construct URLs related to …\nThe version of the resource.\nExtracts the API version of the given resource value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nExtracts the group of the given resource value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nList of objects.\nThis macro evaluates to its contents if the <code>v1_24</code> feature …\nThis macro evaluates to its contents if the <code>v1_25</code> feature …\nThis macro evaluates to its contents if the <code>v1_26</code> feature …\nThis macro evaluates to its contents if the <code>v1_27</code> feature …\nThis macro evaluates to its contents if the <code>v1_28</code> feature …\nThis macro evaluates to its contents if the <code>v1_29</code> feature …\nThis macro evaluates to its contents if the <code>v1_24</code> or …\nThis macro evaluates to its contents if the <code>v1_25</code> or …\nThis macro evaluates to its contents if the <code>v1_26</code> or …\nThis macro evaluates to its contents if the <code>v1_27</code> or …\nThis macro evaluates to its contents if the <code>v1_28</code> or …\nThis macro evaluates to its contents if the <code>v1_29</code> or …\nThis macro evaluates to its contents if the <code>v1_24</code> or lower …\nThis macro evaluates to its contents if the <code>v1_25</code> or lower …\nThis macro evaluates to its contents if the <code>v1_26</code> or lower …\nThis macro evaluates to its contents if the <code>v1_27</code> or lower …\nThis macro evaluates to its contents if the <code>v1_28</code> or lower …\nThis macro evaluates to its contents if the <code>v1_29</code> or lower …\nA macro that emits a <code>match</code> expr with the given test …\nExtracts the kind of the given resource value.\nMerge <code>other</code> into <code>self</code>.\nStrategies for merging collections.\nGets a reference to the metadata of this resource value.\nStandard list metadata. More info: …\nGets a mutable reference to the metadata of this resource …\nExtracts the version of the given resource value.\nMatchCondition represents a condition which must by …\nMutatingWebhook describes an admission webhook and the …\nMutatingWebhookConfiguration describes the configuration …\nRuleWithOperations is a tuple of Operations and Resources. …\nServiceReference holds a reference to Service.legacy.k8s.io\nValidatingWebhook describes an admission webhook and the …\nValidatingWebhookConfiguration describes the configuration …\nWebhookClientConfig contains the information to make a TLS …\nAdmissionReviewVersions is an ordered list of preferred …\nAdmissionReviewVersions is an ordered list of preferred …\nAPIGroups is the API groups the resources belong to. ‘<em>’</em>…\nAPIVersions is the API versions the resources belong to. …\n<code>caBundle</code> is a PEM encoded CA bundle which will be used to …\nClientConfig defines how to communicate with the hook. …\nClientConfig defines how to communicate with the hook. …\nExpression represents the expression which will be …\nFailurePolicy defines how unrecognized errors from the …\nFailurePolicy defines how unrecognized errors from the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMatchConditions is a list of conditions that must be met …\nMatchConditions is a list of conditions that must be met …\nmatchPolicy defines how the “rules” list is used to …\nmatchPolicy defines how the “rules” list is used to …\nStandard object metadata; More info: …\nStandard object metadata; More info: …\nName is an identifier for this match condition, used for …\nThe name of the admission webhook. Name should be fully …\n<code>name</code> is the name of the service. Required\nThe name of the admission webhook. Name should be fully …\n<code>namespace</code> is the namespace of the service. Required\nNamespaceSelector decides whether to run the webhook on an …\nNamespaceSelector decides whether to run the webhook on an …\nObjectSelector decides whether to run the webhook based on …\nObjectSelector decides whether to run the webhook based on …\nOperations is the operations the admission hook cares …\n<code>path</code> is an optional URL path which will be sent in any …\nIf specified, the port on the service that hosting …\nreinvocationPolicy indicates whether this webhook should …\nResources is a list of resources this rule applies to.\nRules describes what operations on what …\nRules describes what operations on what …\nscope specifies the scope of this rule. Valid values are …\n<code>service</code> is a reference to the service for this webhook. …\nSideEffects states whether this webhook has side effects. …\nSideEffects states whether this webhook has side effects. …\nTimeoutSeconds specifies the timeout for this webhook. …\nTimeoutSeconds specifies the timeout for this webhook. …\n<code>url</code> gives the location of the webhook, in standard URL …\nWebhooks is a list of webhooks and the affected resources …\nWebhooks is a list of webhooks and the affected resources …\nAuditAnnotation describes how to produce an audit …\nExpressionWarning is a warning information that targets a …\nMatchResources decides whether to run the admission …\nNamedRuleWithOperations is a tuple of Operations and …\nParamKind is a tuple of Group Kind and Version.\nParamRef describes how to locate the params to be used as …\nTypeChecking contains results of type checking the …\nValidatingAdmissionPolicy describes the definition of an …\nValidatingAdmissionPolicyBinding binds the …\nValidatingAdmissionPolicyBindingSpec is the specification …\nValidatingAdmissionPolicySpec is the specification of the …\nValidatingAdmissionPolicyStatus represents the status of a …\nValidation specifies the CEL expression which is used to …\nVariable is the definition of a variable that is used for …\nAPIGroups is the API groups the resources belong to. ‘<em>’</em>…\nAPIVersion is the API group version the resources belong …\nAPIVersions is the API versions the resources belong to. …\nauditAnnotations contains CEL expressions which are used …\nThe conditions represent the latest available observations …\nExcludeResourceRules describes what operations on what …\nExpression represents the expression which will be …\nExpression represents the expression which will be …\nExpression is the expression that will be evaluated as the …\nThe type checking warnings for each expression.\nfailurePolicy defines how to handle failures for the …\nThe path to the field that refers the expression. For …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nkey specifies the audit annotation key. The audit …\nKind is the API kind the resources belong to. Required.\nMatchConditions is a list of conditions that must be met …\nMatchConstraints specifies what resources this policy is …\nmatchPolicy defines how the “MatchResources” list is …\nMatchResources declares what resources match this binding …\nMessage represents the message displayed when validation …\nmessageExpression declares a CEL expression that evaluates …\nStandard object metadata; More info: …\nStandard object metadata; More info: …\nName is an identifier for this match condition, used for …\n<code>name</code> is the name of the resource being referenced.\nName is the name of the variable. The name must be a valid …\nnamespace is the namespace of the referenced resource. …\nNamespaceSelector decides whether to run the admission …\nObjectSelector decides whether to run the validation based …\nThe generation observed by the controller.\nOperations is the operations the admission hook cares …\nParamKind specifies the kind of resources used to …\nparamRef specifies the parameter resource used to …\n<code>parameterNotFoundAction</code> controls the behavior of the …\nPolicyName references a ValidatingAdmissionPolicy name …\nReason represents a machine-readable description of why …\nResourceNames is an optional white list of names that the …\nResourceRules describes what operations on what …\nResources is a list of resources this rule applies to.\nscope specifies the scope of this rule. Valid values are …\nselector can be used to match multiple param objects based …\nSpecification of the desired behavior of the …\nSpecification of the desired behavior of the …\nThe status of the ValidatingAdmissionPolicy, including …\nThe results of type checking for each expression. Presence …\nvalidationActions declares how Validations of the …\nValidations contain CEL expressions which is used to apply …\nvalueExpression represents the expression which is …\nVariables contain definitions of variables that can be …\nThe content of type checking information in a …\nAuditAnnotation describes how to produce an audit …\nExpressionWarning is a warning information that targets a …\nMatchCondition represents a condition which must be …\nMatchResources decides whether to run the admission …\nNamedRuleWithOperations is a tuple of Operations and …\nParamKind is a tuple of Group Kind and Version.\nParamRef describes how to locate the params to be used as …\nTypeChecking contains results of type checking the …\nValidatingAdmissionPolicy describes the definition of an …\nValidatingAdmissionPolicyBinding binds the …\nValidatingAdmissionPolicyBindingSpec is the specification …\nValidatingAdmissionPolicySpec is the specification of the …\nValidatingAdmissionPolicyStatus represents the status of …\nValidation specifies the CEL expression which is used to …\nVariable is the definition of a variable that is used for …\nAPIGroups is the API groups the resources belong to. ‘<em>’</em>…\nAPIVersion is the API group version the resources belong …\nAPIVersions is the API versions the resources belong to. …\nauditAnnotations contains CEL expressions which are used …\nThe conditions represent the latest available observations …\nExcludeResourceRules describes what operations on what …\nExpression represents the expression which will be …\nExpression represents the expression which will be …\nExpression is the expression that will be evaluated as the …\nThe type checking warnings for each expression.\nfailurePolicy defines how to handle failures for the …\nThe path to the field that refers the expression. For …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nkey specifies the audit annotation key. The audit …\nKind is the API kind the resources belong to. Required.\nMatchConditions is a list of conditions that must be met …\nMatchConstraints specifies what resources this policy is …\nmatchPolicy defines how the “MatchResources” list is …\nMatchResources declares what resources match this binding …\nMessage represents the message displayed when validation …\nmessageExpression declares a CEL expression that evaluates …\nStandard object metadata; More info: …\nStandard object metadata; More info: …\nName is an identifier for this match condition, used for …\nname is the name of the resource being referenced.\nName is the name of the variable. The name must be a valid …\nnamespace is the namespace of the referenced resource. …\nNamespaceSelector decides whether to run the admission …\nObjectSelector decides whether to run the validation based …\nThe generation observed by the controller.\nOperations is the operations the admission hook cares …\nParamKind specifies the kind of resources used to …\nparamRef specifies the parameter resource used to …\n<code>parameterNotFoundAction</code> controls the behavior of the …\nPolicyName references a ValidatingAdmissionPolicy name …\nReason represents a machine-readable description of why …\nResourceNames is an optional white list of names that the …\nResourceRules describes what operations on what …\nResources is a list of resources this rule applies to.\nscope specifies the scope of this rule. Valid values are …\nselector can be used to match multiple param objects based …\nSpecification of the desired behavior of the …\nSpecification of the desired behavior of the …\nThe status of the ValidatingAdmissionPolicy, including …\nThe results of type checking for each expression. Presence …\nvalidationActions declares how Validations of the …\nValidations contain CEL expressions which is used to apply …\nvalueExpression represents the expression which is …\nVariables contain definitions of variables that can be …\nThe content of type checking information in a …\nAn API server instance reports the version it can decode …\nStorage version of a specific resource.\nDescribes the state of the storageVersion at a certain …\nStorageVersionSpec is an empty spec.\nAPI server instances report the versions they can decode …\nThe ID of the reporting API server.\nIf all API server instances agree on the same encoding …\nThe latest available observations of the storageVersion’…\nThe API server can decode objects encoded in these …\nThe API server encodes the object to this version when …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast time the condition transitioned from one status to …\nA human readable message indicating details about the …\nThe name is &lt;group&gt;.&lt;resource&gt;.\nIf set, this represents the .metadata.generation that the …\nThe reason for the condition’s last transition.\nThe API server can serve these versions. DecodableVersions …\nSpec is an empty spec. It is here to comply with …\nAPI server instances report the version they can decode …\nStatus of the condition, one of True, False, Unknown.\nThe reported versions per API server instance.\nType of the condition.\nControllerRevision implements an immutable snapshot of …\nDaemonSet represents the configuration of a daemon set.\nDaemonSetCondition describes the state of a DaemonSet at a …\nDaemonSetSpec is the specification of a daemon set.\nDaemonSetStatus represents the current status of a daemon …\nDaemonSetUpdateStrategy is a struct used to control the …\nDeployment enables declarative updates for Pods and …\nDeploymentCondition describes the state of a deployment at …\nDeploymentSpec is the specification of the desired …\nDeploymentStatus is the most recently observed status of …\nDeploymentStrategy describes how to replace existing pods …\nReplicaSet ensures that a specified number of pod replicas …\nReplicaSetCondition describes the state of a replica set …\nReplicaSetSpec is the specification of a ReplicaSet.\nReplicaSetStatus represents the current status of a …\nSpec to control the desired behavior of daemon set rolling …\nSpec to control the desired behavior of rolling update.\nRollingUpdateStatefulSetStrategy is used to communicate …\nStatefulSet represents a set of pods with consistent …\nStatefulSetCondition describes the state of a statefulset …\nStatefulSetOrdinals describes the policy used for replica …\nStatefulSetPersistentVolumeClaimRetentionPolicy describes …\nA StatefulSetSpec is the specification of a StatefulSet.\nStatefulSetStatus represents the current state of a …\nStatefulSetUpdateStrategy indicates the strategy that the …\nTotal number of available pods (ready for at least …\nThe number of available replicas (ready for at least …\nTotal number of available pods (ready for at least …\nCount of hash collisions for the DaemonSet. The DaemonSet …\nCount of hash collisions for the Deployment. The …\ncollisionCount is the count of hash collisions for the …\nRepresents the latest available observations of a DaemonSet…\nRepresents the latest available observations of a …\nRepresents the latest available observations of a replica …\nRepresents the latest available observations of a …\nThe number of nodes that are running at least 1 daemon pod …\ncurrentReplicas is the number of Pods created by the …\ncurrentRevision, if not empty, indicates the version of …\nData is the serialized representation of the state.\nThe total number of nodes that should be running the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe number of pods that have labels matching the labels of …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast time the condition transitioned from one status to …\nLast time the condition transitioned from one status to …\nThe last time the condition transitioned from one status …\nLast time the condition transitioned from one status to …\nThe last time this condition was updated.\nThe maximum number of nodes with an existing available …\nThe maximum number of pods that can be scheduled above the …\nThe maximum number of DaemonSet pods that can be …\nThe maximum number of pods that can be unavailable during …\nThe maximum number of pods that can be unavailable during …\nA human readable message indicating details about the …\nA human readable message indicating details about the …\nA human readable message indicating details about the …\nA human readable message indicating details about the …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nIf the Labels of a ReplicaSet are empty, they are …\nStandard object’s metadata. More info: …\nThe minimum number of seconds for which a newly created …\nMinimum number of seconds for which a newly created pod …\nMinimum number of seconds for which a newly created pod …\nMinimum number of seconds for which a newly created pod …\nThe number of nodes that should be running the daemon pod …\nThe number of nodes that are running the daemon pod, but …\nnumberReady is the number of nodes that should be running …\nThe number of nodes that should be running the daemon pod …\nThe most recent generation observed by the daemon set …\nThe generation observed by the deployment controller.\nObservedGeneration reflects the generation of the most …\nobservedGeneration is the most recent generation observed …\nordinals controls the numbering of replica indices in a …\nPartition indicates the ordinal at which the StatefulSet …\nIndicates that the deployment is paused.\npersistentVolumeClaimRetentionPolicy describes the …\npodManagementPolicy controls how pods are created during …\nThe maximum time in seconds for a deployment to make …\nreadyReplicas is the number of pods targeted by this …\nreadyReplicas is the number of pods targeted by this …\nreadyReplicas is the number of pods created for this …\nThe reason for the condition’s last transition.\nThe reason for the condition’s last transition.\nThe reason for the condition’s last transition.\nThe reason for the condition’s last transition.\nNumber of desired pods. This is a pointer to distinguish …\nTotal number of non-terminated pods targeted by this …\nReplicas is the number of desired replicas. This is a …\nReplicas is the most recently observed number of replicas. …\nreplicas is the desired number of replicas of the given …\nreplicas is the number of Pods created by the StatefulSet …\nRevision indicates the revision of the state represented …\nThe number of old history to retain to allow rollback. …\nThe number of old ReplicaSets to retain to allow rollback. …\nrevisionHistoryLimit is the maximum number of revisions …\nRolling update config params. Present only if type = “…\nRolling update config params. Present only if …\nRollingUpdate is used to communicate parameters when Type …\nA label query over pods that are managed by the daemon …\nLabel selector for pods. Existing ReplicaSets whose pods …\nSelector is a label query over pods that should match the …\nselector is a label query over pods that should match the …\nserviceName is the name of the service that governs this …\nThe desired behavior of this daemon set. More info: …\nSpecification of the desired behavior of the Deployment.\nSpec defines the specification of the desired behavior of …\nSpec defines the desired identities of pods in this set.\nstart is the number representing the first replica’s …\nThe current status of this daemon set. This data may be …\nStatus of the condition, one of True, False, Unknown.\nMost recently observed status of the Deployment.\nStatus of the condition, one of True, False, Unknown.\nStatus is the most recently observed status of the …\nStatus of the condition, one of True, False, Unknown.\nStatus is the current status of Pods in this StatefulSet. …\nStatus of the condition, one of True, False, Unknown.\nThe deployment strategy to use to replace existing pods …\nAn object that describes the pod that will be created. The …\nTemplate describes the pods that will be created. The only …\nTemplate is the object that describes the pod that will be …\ntemplate is the object that describes the pod that will be …\nType of DaemonSet condition.\nType of daemon set update. Can be “RollingUpdate” or …\nType of deployment condition.\nType of deployment. Can be “Recreate” or “…\nType of replica set condition.\nType of statefulset condition.\nType indicates the type of the StatefulSetUpdateStrategy. …\nTotal number of unavailable pods targeted by this …\nupdateRevision, if not empty, indicates the version of the …\nAn update strategy to replace existing DaemonSet pods with …\nupdateStrategy indicates the StatefulSetUpdateStrategy …\nThe total number of nodes that are running updated daemon …\nTotal number of non-terminated pods targeted by this …\nupdatedReplicas is the number of Pods created by the …\nvolumeClaimTemplates is a list of claims that pods are …\nWhenDeleted specifies what happens to PVCs created from …\nWhenScaled specifies what happens to PVCs created from …\nBoundObjectReference is a reference to an object that a …\nSelfSubjectReview contains the user information that the …\nSelfSubjectReviewStatus is filled by the kube-apiserver …\nTokenRequest requests a token for a given service account.\nTokenRequestSpec contains client provided parameters of a …\nTokenRequestStatus is the result of a token request.\nTokenReview attempts to authenticate a token to a known …\nTokenReviewSpec is a description of the token …\nTokenReviewStatus is the result of the token …\nUserInfo holds the information about the user needed to …\nAPI version of the referent.\nAudiences are the intendend audiences of the token. A …\nAudiences is a list of the identifiers that the resource …\nAudiences are audience identifiers chosen by the …\nAuthenticated indicates that the token was associated with …\nBoundObjectRef is a reference to an object that the token …\nError indicates that the token couldn’t be checked\nExpirationSeconds is the requested duration of validity of …\nExpirationTimestamp is the time of expiration of the …\nAny additional information provided by the authenticator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe names of groups this user is a part of.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKind of the referent. Valid kinds are ‘Pod’ and ‘…\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nName of the referent.\nSpec holds information about the request being evaluated\nSpec holds information about the request being evaluated\nStatus is filled in by the server with the user attributes.\nStatus is filled in by the server and indicates whether …\nStatus is filled in by the server and indicates whether …\nToken is the opaque bearer token.\nToken is the opaque bearer token.\nUID of the referent.\nA unique value that identifies this user across time. If …\nUser is the UserInfo associated with the provided token.\nUser attributes of the user making this request.\nThe name that uniquely identifies this user among all …\nSelfSubjectReview contains the user information that the …\nSelfSubjectReviewStatus is filled by the kube-apiserver …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStandard object’s metadata. More info: …\nStatus is filled in by the server with the user attributes.\nUser attributes of the user making this request.\nSelfSubjectReview contains the user information that the …\nSelfSubjectReviewStatus is filled by the kube-apiserver …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStandard object’s metadata. More info: …\nStatus is filled in by the server with the user attributes.\nUser attributes of the user making this request.\nLocalSubjectAccessReview checks whether or not a user or …\nNonResourceAttributes includes the authorization …\nNonResourceRule holds information that describes a rule …\nResourceAttributes includes the authorization attributes …\nResourceRule is the list of actions the subject is allowed …\nSelfSubjectAccessReview checks whether or the current user …\nSelfSubjectAccessReviewSpec is a description of the access …\nSelfSubjectRulesReview enumerates the set of actions the …\nSelfSubjectRulesReviewSpec defines the specification for …\nSubjectAccessReview checks whether or not a user or group …\nSubjectAccessReviewSpec is a description of the access …\nSubjectAccessReviewStatus\nSubjectRulesReviewStatus contains the result of a rules …\nAllowed is required. True if the action would be allowed, …\nAPIGroups is the name of the APIGroup that contains the …\nDenied is optional. True if the action would be denied, …\nEvaluationError is an indication that some error occurred …\nEvaluationError can appear in combination with Rules. It …\nExtra corresponds to the user.Info.GetExtra() method from …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGroup is the API Group of the Resource.  “*” means all.\nGroups is the groups you’re testing for.\nIncomplete is true when the rules returned by this call …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStandard list metadata. More info: …\nStandard list metadata. More info: …\nStandard list metadata. More info: …\nStandard list metadata. More info: …\nName is the name of the resource being requested for a “…\nNamespace is the namespace of the action being requested.  …\nNamespace to evaluate rules for. Required.\nNonResourceAttributes describes information for a …\nNonResourceAttributes describes information for a …\nNonResourceRules is the list of actions the subject is …\nNonResourceURLs is a set of partial urls that a user …\nPath is the URL path of the request\nReason is optional.  It indicates why a request was …\nResource is one of the existing resource types.  “*” …\nResourceAuthorizationAttributes describes information for …\nResourceAuthorizationAttributes describes information for …\nResourceNames is an optional white list of names that the …\nResourceRules is the list of actions the subject is …\nResources is a list of resources this rule applies to.  “…\nSpec holds information about the request being evaluated.  …\nSpec holds information about the request being evaluated.  …\nSpec holds information about the request being evaluated.\nSpec holds information about the request being evaluated\nStatus is filled in by the server and indicates whether …\nStatus is filled in by the server and indicates whether …\nStatus is filled in by the server and indicates the set of …\nStatus is filled in by the server and indicates whether …\nSubresource is one of the existing resource types.  “” …\nUID information about the requesting user.\nUser is the user you’re testing for. If you specify “…\nVerb is the standard HTTP verb\nVerb is a kubernetes resource API verb, like: get, list, …\nVerb is a list of kubernetes non-resource API verbs, like: …\nVerb is a list of kubernetes resource API verbs, like: …\nVersion is the API Version of the Resource.  “*” means …\nCrossVersionObjectReference contains enough information to …\nconfiguration of a horizontal pod autoscaler.\nspecification of a horizontal pod autoscaler.\ncurrent status of a horizontal pod autoscaler\nScale represents a scaling request for a resource.\nScaleSpec describes the attributes of a scale subresource.\nScaleStatus represents the current status of a scale …\napiVersion is the API version of the referent\ncurrentCPUUtilizationPercentage is the current average CPU …\ncurrentReplicas is the current number of replicas of pods …\ndesiredReplicas is the  desired number of replicas of pods …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nkind is the kind of the referent; More info: …\nlastScaleTime is the last time the HorizontalPodAutoscaler …\nmaxReplicas is the upper limit for the number of pods that …\nStandard object metadata. More info: …\nStandard object metadata; More info: …\nminReplicas is the lower limit for the number of replicas …\nname is the name of the referent; More info: …\nobservedGeneration is the most recent generation observed …\nreplicas is the desired number of instances for the scaled …\nreplicas is the actual number of observed instances of the …\nreference to scaled resource; horizontal pod autoscaler …\nselector is the label query over pods that should match …\nspec defines the behaviour of autoscaler. More info: …\nspec defines the behavior of the scale. More info: …\nstatus is the current information about the autoscaler.\nstatus is the current status of the scale. More info: …\ntargetCPUUtilizationPercentage is the target average CPU …\nContainerResourceMetricSource indicates how to scale on a …\nContainerResourceMetricStatus indicates the current value …\nCrossVersionObjectReference contains enough information to …\nExternalMetricSource indicates how to scale on a metric …\nExternalMetricStatus indicates the current value of a …\nHPAScalingPolicy is a single policy which must hold true …\nHPAScalingRules configures the scaling behavior for one …\nHorizontalPodAutoscaler is the configuration for a …\nHorizontalPodAutoscalerBehavior configures the scaling …\nHorizontalPodAutoscalerCondition describes the state of a …\nHorizontalPodAutoscalerSpec describes the desired …\nHorizontalPodAutoscalerStatus describes the current status …\nMetricIdentifier defines the name and optionally selector …\nMetricSpec specifies how to scale based on a single metric …\nMetricStatus describes the last-read state of a single …\nMetricTarget defines the target value, average value, or …\nMetricValueStatus holds the current value for a metric\nObjectMetricSource indicates how to scale on a metric …\nObjectMetricStatus indicates the current value of a metric …\nPodsMetricSource indicates how to scale on a metric …\nPodsMetricStatus indicates the current value of a metric …\nResourceMetricSource indicates how to scale on a resource …\nResourceMetricStatus indicates the current value of a …\napiVersion is the API version of the referent\naverageUtilization is the target value of the average of …\ncurrentAverageUtilization is the current value of the …\naverageValue is the target value of the average of the …\naverageValue is the current value of the average of the …\nbehavior configures the scaling behavior of the target in …\nconditions is the set of conditions required for this …\ncontainer is the name of the container in the pods of the …\ncontainer is the name of the container in the pods of the …\ncontainerResource refers to a resource metric (such as …\ncontainer resource refers to a resource metric (such as …\ncurrent contains the current value for the given metric\ncurrent contains the current value for the given metric\ncurrent contains the current value for the given metric\ncurrent contains the current value for the given metric\ncurrent contains the current value for the given metric\ncurrentMetrics is the last read state of the metrics used …\ncurrentReplicas is current number of replicas of pods …\ndescribedObject specifies the descriptions of a …\nDescribedObject specifies the descriptions of a …\ndesiredReplicas is the desired number of replicas of pods …\nexternal refers to a global metric that is not associated …\nexternal refers to a global metric that is not associated …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nkind is the kind of the referent; More info: …\nlastScaleTime is the last time the HorizontalPodAutoscaler …\nlastTransitionTime is the last time the condition …\nmaxReplicas is the upper limit for the number of replicas …\nmessage is a human-readable explanation containing details …\nmetadata is the standard object metadata. More info: …\nmetric identifies the target metric by name and selector\nmetric identifies the target metric by name and selector\nmetric identifies the target metric by name and selector\nmetric identifies the target metric by name and selector\nmetric identifies the target metric by name and selector\nmetric identifies the target metric by name and selector\nmetrics contains the specifications for which to use to …\nminReplicas is the lower limit for the number of replicas …\nname is the name of the resource in question.\nname is the name of the resource in question.\nname is the name of the referent; More info: …\nname is the name of the given metric\nname is the name of the resource in question.\nname is the name of the resource in question.\nobject refers to a metric describing a single kubernetes …\nobject refers to a metric describing a single kubernetes …\nobservedGeneration is the most recent generation observed …\nperiodSeconds specifies the window of time for which the …\npods refers to a metric describing each pod in the current …\npods refers to a metric describing each pod in the current …\npolicies is a list of potential scaling polices which can …\nreason is the reason for the condition’s last transition.\nresource refers to a resource metric (such as those …\nresource refers to a resource metric (such as those …\nscaleDown is scaling policy for scaling Down. If not set, …\nscaleTargetRef points to the target resource to scale, and …\nscaleUp is scaling policy for scaling Up. If not set, the …\nselectPolicy is used to specify which policy should be …\nselector is the string-encoded form of a standard …\nspec is the specification for the behaviour of the …\nstabilizationWindowSeconds is the number of seconds for …\nstatus is the current information about the autoscaler.\nstatus is the status of the condition (True, False, …\ntarget specifies the target value for the given metric\ntarget specifies the target value for the given metric\ntarget specifies the target value for the given metric\ntarget specifies the target value for the given metric\ntarget specifies the target value for the given metric\ntype is used to specify the scaling policy.\ntype describes the current condition\ntype is the type of metric source.  It should be one of “…\ntype is the type of metric source.  It will be one of “…\ntype represents whether the metric type is Utilization, …\nvalue contains the amount of change which is permitted by …\nvalue is the target value of the metric (as a quantity).\nvalue is the current value of the metric (as a quantity).\nCronJob represents the configuration of a single cron job.\nCronJobSpec describes how the job execution will look like …\nCronJobStatus represents the current state of a cron job.\nJob represents the configuration of a single job.\nJobCondition describes current state of a job.\nJobSpec describes how the job execution will look like.\nJobStatus represents the current state of a Job.\nJobTemplateSpec describes the data a Job should have when …\nPodFailurePolicy describes how failed pods influence the …\nPodFailurePolicyOnExitCodesRequirement describes the …\nPodFailurePolicyOnPodConditionsPattern describes a pattern …\nPodFailurePolicyRule describes how a pod failure is …\nUncountedTerminatedPods holds UIDs of Pods that have …\nSpecifies the action taken on a pod failure when the …\nA list of pointers to currently running jobs.\nThe number of pending and running pods.\nSpecifies the duration in seconds relative to the …\nSpecifies the number of retries before marking this job …\nSpecifies the limit for the number of retries within an …\ncompletedIndexes holds the completed indexes when …\ncompletionMode specifies how Pod completions are tracked. …\nRepresents time when the job was completed. It is not …\nSpecifies the desired number of successfully finished pods …\nSpecifies how to treat concurrent executions of a Job. …\nThe latest available observations of an object’s current …\nRestricts the check for exit codes to the container with …\nThe number of pods which reached phase Failed.\nfailed holds UIDs of failed Pods.\nFailedIndexes holds the failed indexes when …\nThe number of failed finished jobs to retain. Value must …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSpecifies the job that will be created when executing a …\nLast time the condition was checked.\nInformation when was the last time the job was …\nInformation when was the last time the job successfully …\nLast time the condition transit from one status to another.\nmanualSelector controls generation of pod labels and pod …\nSpecifies the maximal number of failed indexes before …\nHuman readable message indicating details about last …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata of the jobs created from this …\nRepresents the requirement on the container exit codes.\nRepresents the requirement on the pod conditions. The …\nRepresents the relationship between the container exit …\nSpecifies the maximum desired number of pods the job …\nSpecifies the policy of handling failed pods. In …\npodReplacementPolicy specifies when to create replacement …\nThe number of pods which have a Ready condition.\n(brief) reason for the condition’s last transition.\nA list of pod failure policy rules. The rules are …\nThe schedule in Cron format, see …\nA label query over pods that should match the pod count. …\nSpecification of the desired behavior of a cron job, …\nSpecification of the desired behavior of a job. More info: …\nSpecification of the desired behavior of the job. More …\nRepresents time when the job controller started processing …\nOptional deadline in seconds for starting the job if it …\nCurrent status of a cron job. More info: …\nCurrent status of a job. More info: …\nStatus of the condition, one of True, False, Unknown.\nSpecifies the required Pod condition status. To match a …\nThe number of pods which reached phase Succeeded.\nsucceeded holds UIDs of succeeded Pods.\nThe number of successful finished jobs to retain. Value …\nThis flag tells the controller to suspend subsequent …\nsuspend specifies whether the Job controller should create …\nDescribes the pod that will be created when executing a …\nThe number of pods which are terminating (in phase Pending …\nThe time zone name for the given schedule, see …\nttlSecondsAfterFinished limits the lifetime of a Job that …\nType of job condition, Complete or Failed.\nSpecifies the required Pod condition type. To match a pod …\nuncountedTerminatedPods holds the UIDs of Pods that have …\nSpecifies the set of values. Each returned container exit …\nCertificateSigningRequest objects provide a mechanism to …\nCertificateSigningRequestCondition describes a condition …\nCertificateSigningRequestSpec contains the certificate …\nCertificateSigningRequestStatus contains conditions used …\ncertificate is populated with an issued certificate by the …\nconditions applied to the request. Known conditions are “…\nexpirationSeconds is the requested duration of validity of …\nextra contains extra attributes of the user that created …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ngroups contains group membership of the user that created …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nlastTransitionTime is the time the condition last …\nlastUpdateTime is the time of the last update to this …\nmessage contains a human readable message with details …\nreason indicates a brief reason for the request state\nrequest contains an x509 certificate signing request …\nsignerName indicates the requested signer, and is a …\nspec contains the certificate request, and is immutable …\nstatus contains information about whether the request is …\nstatus of the condition, one of True, False, Unknown. …\ntype of the condition. Known conditions are “Approved”…\nuid contains the uid of the user that created the …\nusages specifies a set of key usages requested in the …\nusername contains the name of the user that created the …\nClusterTrustBundle is a cluster-scoped container for X.509 …\nClusterTrustBundleSpec contains the signer and trust …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmetadata contains the object metadata.\nsignerName indicates the associated signer, if any.\nspec contains the signer (if any) and trust anchors.\ntrustBundle contains the individual X.509 trust anchors …\nLease defines a lease concept.\nLeaseSpec is a specification of a Lease.\nacquireTime is a time when the current lease was acquired.\nReturns the argument unchanged.\nReturns the argument unchanged.\nholderIdentity contains the identity of the holder of a …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nleaseDurationSeconds is a duration that candidates for a …\nleaseTransitions is the number of transitions of a lease …\nMore info: …\nrenewTime is a time when the current holder of a lease has …\nspec contains the specification of the Lease. More info: …\nRepresents a Persistent Disk resource in AWS.\nAffinity is a group of affinity scheduling rules.\nAttachedVolume describes a volume attached to a node\nAzureDisk represents an Azure Data Disk mount on the host …\nAzureFile represents an Azure File Service mount on the …\nAzureFile represents an Azure File Service mount on the …\nBinding ties one object to another; for example, a pod is …\nRepresents storage that is managed by an external CSI …\nRepresents a source location of a volume to mount, managed …\nAdds and removes POSIX capabilities from running …\nRepresents a Ceph Filesystem mount that lasts the lifetime …\nRepresents a Ceph Filesystem mount that lasts the lifetime …\nRepresents a cinder volume resource in Openstack. A Cinder …\nRepresents a cinder volume resource in Openstack. A Cinder …\nClaimSource describes a reference to a ResourceClaim.\nClientIPConfig represents the configurations of Client IP …\nInformation about the condition of a component.\nComponentStatus (and ComponentStatusList) holds the …\nConfigMap holds configuration data for pods to consume.\nConfigMapEnvSource selects a ConfigMap to populate the …\nSelects a key from a ConfigMap.\nConfigMapNodeConfigSource contains the information to …\nAdapts a ConfigMap into a projected volume.\nAdapts a ConfigMap into a volume.\nA single application container that you want to run within …\nDescribe a container image\nContainerPort represents a network port in a single …\nContainerResizePolicy represents resource resize policy …\nContainerState holds a possible state of container. Only …\nContainerStateRunning is a running state of a container.\nContainerStateTerminated is a terminated state of a …\nContainerStateWaiting is a waiting state of a container.\nContainerStatus contains details for the current status of …\nDaemonEndpoint contains information about a single Daemon …\nRepresents downward API info for projecting into a …\nDownwardAPIVolumeFile represents information to create the …\nDownwardAPIVolumeSource represents a volume containing …\nRepresents an empty directory for a pod. Empty directory …\nEndpointAddress is a tuple that describes single IP …\nEndpointPort is a tuple that describes a single port.\nEndpointSubset is a group of addresses with a common set …\nEndpoints is a collection of endpoints that implement the …\nEnvFromSource represents the source of a set of ConfigMaps\nEnvVar represents an environment variable present in a …\nEnvVarSource represents a source for the value of an …\nAn EphemeralContainer is a temporary container that you …\nRepresents an ephemeral volume that is handled by a normal …\nEvent is a report of an event somewhere in the cluster.  …\nEventSeries contain information on series of events, i.e. …\nEventSource contains information for an event.\nExecAction describes a “run in container” action.\nRepresents a Fibre Channel volume. Fibre Channel volumes …\nFlexPersistentVolumeSource represents a generic persistent …\nFlexVolume represents a generic volume resource that is …\nRepresents a Flocker volume mounted by the Flocker agent. …\nRepresents a Persistent Disk resource in Google Compute …\nRepresents a volume that is populated with the contents of …\nRepresents a Glusterfs mount that lasts the lifetime of a …\nRepresents a Glusterfs mount that lasts the lifetime of a …\nHTTPGetAction describes an action based on HTTP Get …\nHTTPHeader describes a custom header to be used in HTTP …\nHostAlias holds the mapping between IP and hostnames that …\nHostIP represents a single IP address allocated to the …\nRepresents a host path mapped into a pod. Host path …\nISCSIPersistentVolumeSource represents an ISCSI disk. …\nRepresents an ISCSI disk. ISCSI volumes can only be …\nMaps a string key to a path within a volume.\nLifecycle describes actions that the management system …\nLifecycleHandler defines a specific action that should be …\nLimitRange sets resource usage limits for each kind of …\nLimitRangeItem defines a min/max usage limit for any …\nLimitRangeSpec defines a min/max usage limit for resources …\nLoadBalancerIngress represents the status of a …\nLoadBalancerStatus represents the status of a …\nLocalObjectReference contains enough information to let …\nLocal represents directly-attached storage with node …\nRepresents an NFS mount that lasts the lifetime of a pod. …\nNamespace provides a scope for Names. Use of multiple …\nNamespaceCondition contains details about state of …\nNamespaceSpec describes the attributes on a Namespace.\nNamespaceStatus is information about the current status of …\nNode is a worker node in Kubernetes. Each node will have a …\nNodeAddress contains information for the node’s address.\nNode affinity is a group of node affinity scheduling rules.\nNodeCondition contains condition information for a node.\nNodeConfigSource specifies a source of node configuration. …\nNodeConfigStatus describes the status of the config …\nNodeDaemonEndpoints lists ports opened by daemons running …\nA node selector represents the union of the results of one …\nA node selector requirement is a selector that contains …\nA null or empty node selector term matches no objects. The …\nNodeSpec describes the attributes that a node is created …\nNodeStatus is information about the current status of a …\nNodeSystemInfo is a set of ids/uuids to uniquely identify …\nObjectFieldSelector selects an APIVersioned field of an …\nObjectReference contains enough information to let you …\nPersistentVolume (PV) is a storage resource provisioned by …\nPersistentVolumeClaim is a user’s request for and claim …\nPersistentVolumeClaimCondition contains details about …\nPersistentVolumeClaimSpec describes the common attributes …\nPersistentVolumeClaimStatus is the current status of a …\nPersistentVolumeClaimTemplate is used to produce …\nPersistentVolumeClaimVolumeSource references the user’s …\nPersistentVolumeSpec is the specification of a persistent …\nPersistentVolumeStatus is the current status of a …\nRepresents a Photon Controller persistent disk resource.\nPod is a collection of containers that can run on a host. …\nPod affinity is a group of inter pod affinity scheduling …\nDefines a set of pods (namely those matching the …\nPod anti affinity is a group of inter pod anti affinity …\nPodCondition contains details for the current condition of …\nPodDNSConfig defines the DNS parameters of a pod in …\nPodDNSConfigOption defines DNS resolver options of a pod.\nPodIP represents a single IP address allocated to the pod.\nPodOS defines the OS parameters of a pod.\nPodReadinessGate contains the reference to a pod condition\nPodResourceClaim references exactly one ResourceClaim …\nPodResourceClaimStatus is stored in the PodStatus for each …\nPodSchedulingGate is associated to a Pod to guard its …\nPodSecurityContext holds pod-level security attributes and …\nPodSpec is a description of a pod.\nPodStatus represents information about the status of a …\nPodTemplate describes a template for creating copies of a …\nPodTemplateSpec describes the data a pod should have when …\nPortworxVolumeSource represents a Portworx volume resource.\nAn empty preferred scheduling term matches all objects …\nProbe describes a health check to be performed against a …\nRepresents a projected volume source\nRepresents a Quobyte mount that lasts the lifetime of a …\nRepresents a Rados Block Device mount that lasts the …\nRepresents a Rados Block Device mount that lasts the …\nReplicationController represents the configuration of a …\nReplicationControllerCondition describes the state of a …\nReplicationControllerSpec is the specification of a …\nReplicationControllerStatus represents the current status …\nResourceClaim references one entry in …\nResourceFieldSelector represents container resources (cpu, …\nResourceQuota sets aggregate quota restrictions enforced …\nResourceQuotaSpec defines the desired hard limits to …\nResourceQuotaStatus defines the enforced hard limits and …\nResourceRequirements describes the compute resource …\nSELinuxOptions are the labels to be applied to the …\nScaleIOPersistentVolumeSource represents a persistent …\nScaleIOVolumeSource represents a persistent ScaleIO volume\nA scope selector represents the AND of the selectors …\nA scoped-resource selector requirement is a selector that …\nSeccompProfile defines a pod/container’s seccomp profile …\nSecret holds secret data of a certain type. The total …\nSecretEnvSource selects a Secret to populate the …\nSecretKeySelector selects a key of a Secret.\nAdapts a secret into a projected volume.\nSecretReference represents a Secret Reference. It has …\nAdapts a Secret into a volume.\nSecurityContext holds security configuration that will be …\nService is a named abstraction of software service (for …\nServiceAccount binds together: * a name, understood by …\nServiceAccountTokenProjection represents a projected …\nServicePort contains information on service’s port.\nServiceSpec describes the attributes that a user creates …\nServiceStatus represents the current status of a service.\nSessionAffinityConfig represents the configurations of …\nRepresents a StorageOS persistent volume resource.\nRepresents a StorageOS persistent volume resource.\nSysctl defines a kernel parameter to be set\nTCPSocketAction describes an action based on opening a …\nThe node this Taint is attached to has the “effect” on …\nThe pod this Toleration is attached to tolerates any taint …\nA topology selector requirement is a selector that matches …\nA topology selector term represents the result of label …\nTopologySpreadConstraint specifies how to spread matching …\nTypedLocalObjectReference contains enough information to …\nVolume represents a named volume in a pod that may be …\nvolumeDevice describes a mapping of a raw block device …\nVolumeMount describes a mounting of a Volume within a …\nVolumeNodeAffinity defines constraints that limit what …\nProjection that may be projected along with other …\nRepresents a vSphere volume resource.\nThe weights of all of the matched WeightedPodAffinityTerm …\nWindowsSecurityContextOptions contain Windows-specific …\naccessModes contains the desired access modes the volume …\naccessModes contains the actual access modes the volume …\naccessModes contains all ways the volume can be mounted. …\nWhat action was taken/failed regarding to the Regarding …\nActive reports the checkpointed config the node is …\nOptional duration in seconds the pod may be active on the …\nAdded capabilities\nThe node address.\nIP addresses which offer the related ports that are marked …\nList of addresses reachable to the node. Queried from …\nIf specified, the pod’s scheduling constraints\nAllocatable represents the resources of a node that are …\nallocateLoadBalancerNodePorts defines if NodePorts will be …\nallocatedResourceStatuses stores status of resource being …\nAllocatedResources represents the compute resources …\nallocatedResources tracks the resources allocated to a PVC …\nAllowPrivilegeEscalation controls whether a process can …\nAPIGroup is the group for the resource being referenced. …\nAPIGroup is the group for the resource being referenced. …\nVersion of the schema the FieldPath is written in terms …\nAPI version of the referent.\nThe application protocol for this port. This is used as a …\nThe application protocol for this port. This is used as a …\nThe Architecture reported by the node\nArguments to the entrypoint. The container image’s CMD …\nArguments to the entrypoint. The image’s CMD is used if …\nAssigned reports the checkpointed config the node will try …\naudience is the intended audience of the token. A …\nAutomountServiceAccountToken indicates whether a service …\nAutomountServiceAccountToken indicates whether pods …\nThe number of available replicas (ready for at least …\nawsElasticBlockStore represents an AWS Disk resource that …\nawsElasticBlockStore represents an AWS Disk resource that …\nazureDisk represents an Azure Data Disk mount on the host …\nazureDisk represents an Azure Data Disk mount on the host …\nazureFile represents an Azure File Service mount on the …\nazureFile represents an Azure File Service mount on the …\nBinaryData contains the binary data. Each key must consist …\nBoot ID reported by the node.\ncachingMode is the Host Caching mode: None, Read Only, …\nThe capabilities to add/drop when running containers. …\nCapacity represents the total resources of a node. More …\ncapacity represents the actual resources of the underlying …\ncapacity is the description of the persistent volume’s …\ncephFS represents a Ceph FS mount on the host that shares …\ncephFS represents a Ceph FS mount on the host that shares …\nchapAuthDiscovery defines whether support iSCSI Discovery …\nchapAuthDiscovery defines whether support iSCSI Discovery …\nchapAuthSession defines whether support iSCSI Session CHAP …\nchapAuthSession defines whether support iSCSI Session CHAP …\ncinder represents a cinder volume attached and mounted on …\ncinder represents a cinder volume attached and mounted on …\nclaimName is the name of a PersistentVolumeClaim in the …\nclaimRef is part of a bi-directional binding between …\nClaims lists the names of resources, defined in …\nclientIP contains the configurations of Client IP based …\nclusterIP is the IP address of the service and is usually …\nClusterIPs is a list of IP addresses assigned to this …\nEntrypoint array. Not executed within a shell. The …\nEntrypoint array. Not executed within a shell. The image’…\nCommand is the command line to execute inside the …\nComponent from which the event is generated.\nConditionType refers to a condition in the pod’s …\nList of component conditions observed\nRepresents the latest available observations of a namespace…\nConditions is an array of current observed node …\nconditions is the current Condition of persistent volume …\nCurrent service state of pod. More info: …\nRepresents the latest available observations of a …\nCurrent service state\nStatus of the config assigned to the node via the dynamic …\nConfigMap is a reference to a Node’s ConfigMap\nconfigMap represents a configMap that should populate this …\nconfigMap information about the configMap data to project\nSelects a key of a ConfigMap.\nThe ConfigMap to select from\nDeprecated: Previously used to specify the source of the …\nContainer’s ID in the format ‘&lt;type&gt;://&lt;container_id&gt;…\nContainerID is the ID of the container in the format ‘…\nContainer name: required for volumes, optional for env vars\nNumber of port to expose on the pod’s IP address. This …\nContainerRuntime Version reported by the node through …\nThe list has one entry per container in the manifest. More …\nList of containers belonging to the pod. Containers cannot …\ncontrollerExpandSecretRef is a reference to the secret …\ncontrollerPublishSecretRef is a reference to the secret …\nThe number of times this event has occurred.\nNumber of occurrences in this series up to the last …\ncsi represents storage that is handled by an external CSI …\ncsi (Container Storage Interface) represents ephemeral …\nEndpoints of daemons running on the Node.\nData contains the configuration data. Each key must …\nData contains the secret data. Each key must consist of …\ndataSource field can be used to specify either: * An …\ndataSourceRef specifies the object from which to populate …\ndatasetName is Name of the dataset stored as metadata -&gt; …\ndatasetUUID is the UUID of the dataset. This is unique …\nDefault resource requirement limit value by resource name …\ndefaultMode is optional: mode bits used to set permissions …\nOptional: mode bits to use on created files by default. …\ndefaultMode are the mode bits used to set permissions on …\ndefaultMode is Optional: mode bits used to set permissions …\nDefaultRequest is the default resource requirement request …\nDevicePath represents the device path where the volume …\ndevicePath is the path inside of the container that the …\ndirectory is the target directory name. Must not contain …\ndiskName is the Name of the data disk in the blob storage\ndiskURI is the URI of data disk in the blob storage\nSpecifies the output format of the exposed resources, …\nSpecifies the DNS parameters of a pod. Parameters …\nSet DNS policy for the pod. Defaults to “ClusterFirst”…\ndownwardAPI represents downward API about the pod that …\ndownwardAPI information about the downwardAPI data to …\ndriver is the name of the driver to use for this volume. …\ndriver is the name of the CSI driver that handles this …\ndriver is the name of the driver to use for this volume.\ndriver is the name of the driver to use for this volume.\nRemoved capabilities\nRequired. The effect of the taint on pods that do not …\nEffect indicates the taint effect to match. Empty means …\nemptyDir represents a temporary directory that shares a pod…\nEnableServiceLinks indicates whether information about …\nendpoints is the endpoint name that details Glusterfs …\nendpoints is the endpoint name that details Glusterfs …\nendpointsNamespace is the namespace that contains …\nList of environment variables to set in the container. …\nList of environment variables to set in the container. …\nList of sources to populate environment variables in the …\nList of sources to populate environment variables in the …\nephemeral represents a volume that is handled by a cluster …\nStatus for any ephemeral containers that have run in this …\nList of ephemeral containers run in this pod. Ephemeral …\nCondition error code for a component. For example, a …\nError describes any problems reconciling the …\nError is to record the problem with the service port The …\nTime when this Event was first observed.\nExec specifies the action to take.\nExec specifies the action to take.\nExit status from the last termination of the container\nexpirationSeconds is the requested duration of validity of …\nDeprecated. Not all kubelets will set this field. Remove …\nexternalIPs is a list of IP addresses for which nodes in …\nexternalName is the external reference that discovery …\nexternalTrafficPolicy describes how nodes distribute …\nMinimum consecutive failures for the probe to be …\nfc represents a Fibre Channel resource that is attached to …\nfc represents a Fibre Channel resource that is attached to …\nPath of the field to select in the specified API version.\nIf referring to a piece of an object instead of an entire …\nRequired: Selects a field of the pod: only annotations, …\nSelects a field of the pod: supports metadata.name, …\nFinalizers is an opaque list of values that must be empty …\nTime at which the container last terminated\nThe time at which the event was first recorded. (Time of …\nflexVolume represents a generic volume resource that is …\nflexVolume represents a generic volume resource that is …\nflocker represents a Flocker volume attached to a kubelet…\nflocker represents a Flocker volume attached to a kubelet…\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nA special supplemental group that applies to all …\nfsGroupChangePolicy defines behavior of changing ownership …\nfsType is the filesystem type of the volume that you want …\nfsType is Filesystem type to mount. Must be a filesystem …\nfsType to mount. Must be a filesystem type supported by …\nfsType to mount. Ex. “ext4”, “xfs”, “ntfs”. If …\nfsType Filesystem type to mount. Must be a filesystem type …\nfsType is the filesystem type to mount. Must be a …\nfsType is the filesystem type to mount. Must be a …\nfsType is the Filesystem type to mount. Must be a …\nfsType is the filesystem type to mount. Must be a …\nfsType is filesystem type of the volume that you want to …\nfsType is the filesystem type of the volume that you want …\nfsType is the filesystem type of the volume that you want …\nfsType is the filesystem type to mount. It applies only …\nfsType is the filesystem type to mount. Must be a …\nfSType represents the filesystem type to mount Must be a …\nfsType is the filesystem type of the volume that you want …\nfsType is the filesystem type of the volume that you want …\nfsType is the filesystem type to mount. Must be a …\nfsType is the filesystem type to mount. Must be a …\nfsType is the filesystem type to mount. Must be a …\nfsType is the filesystem type to mount. Must be a …\nfsType is filesystem type to mount. Must be a filesystem …\nThe number of pods that have labels matching the labels of …\ngateway is the host address of the ScaleIO API Gateway.\ngateway is the host address of the ScaleIO API Gateway.\ngcePersistentDisk represents a GCE Disk resource that is …\ngcePersistentDisk represents a GCE Disk resource that is …\ngitRepo represents a git repository at a particular …\nglusterfs represents a Glusterfs volume that is attached …\nglusterfs represents a Glusterfs mount on the host that …\nGMSACredentialSpec is where the GMSA admission webhook …\nGMSACredentialSpecName is the name of the GMSA credential …\ngroup to map volume access to Default is no group\nGRPC specifies an action involving a GRPC port.\nhard is the set of desired hard limits for each named …\nHard is the set of enforced hard limits for each named …\nhealthCheckNodePort specifies the healthcheck nodePort for …\nNode name on which the event is generated.\nHost name to connect to, defaults to the pod IP. You …\nOptional: Host name to connect to, defaults to the pod IP.\nHostAliases is an optional list of hosts and IPs that will …\nWhat host IP to bind the external port to.\nhostIP holds the IP address of the host to which the pod …\nUse the host’s ipc namespace. Optional: Default to false.\nhostIPs holds the IP addresses allocated to the host. If …\nHost networking requested for this pod. Use the host’s …\nhostPath represents a directory on the host. Provisioned …\nhostPath represents a pre-existing file or directory on …\nUse the host’s pid namespace. Optional: Default to false.\nNumber of port to expose on the host. If specified, this …\nHostProcess determines if a container should be run as a …\nUse the host’s user namespace. Optional: Default to …\nThe Hostname of this endpoint\nHostname is set for load-balancer ingress points that are …\nSpecifies the hostname of the Pod If not specified, the pod…\nHostnames for the above IP address.\nHTTPGet specifies the http request to perform.\nHTTPGet specifies the http request to perform.\nCustom headers to set in the request. HTTP allows repeated …\nContainer image name. More info: …\nImage is the name of container image that the container is …\nContainer image name. More info: …\nimage is the rados image name. More info: …\nimage is the rados image name. More info: …\nImageID is the image ID of the container’s image. The …\nImage pull policy. One of Always, Never, IfNotPresent. …\nImage pull policy. One of Always, Never, IfNotPresent. …\nImagePullSecrets is an optional list of references to …\nImagePullSecrets is a list of references to secrets in the …\nList of container images on this node\nImmutable, if set to true, ensures that data stored in the …\nImmutable, if set to true, ensures that data stored in the …\nIngress is a list containing ingress points for the …\nThe list has one entry per init container in the manifest. …\nList of initialization containers belonging to the pod. …\nNumber of seconds after the container has started before …\ninitiatorName is the custom iSCSI Initiator Name. If …\ninitiatorName is the custom iSCSI Initiator Name. If …\nInternalTrafficPolicy describes how nodes distribute …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe object that this event is about.\nThe IP of this endpoint. May not be loopback (127.0.0.0/8 …\nIP address of the host file entry.\nIP is the IP address assigned to the host\nIP is set for load-balancer ingress points that are IP …\nIP is the IP address assigned to the pod\nIPFamilies is a list of IP families (e.g. IPv4, IPv6) …\nIPFamilyPolicy represents the dual-stack-ness requested or …\niqn is Target iSCSI Qualified Name.\niqn is the target iSCSI Qualified Name.\niscsi represents an ISCSI Disk resource that is attached …\niscsi represents an ISCSI Disk resource that is attached …\niscsiInterface is the interface Name that uses an iSCSI …\niscsiInterface is the interface Name that uses an iSCSI …\nitems if unspecified, each key-value pair in the Data …\nitems if unspecified, each key-value pair in the Data …\nItems is a list of DownwardAPIVolume file\nItems is a list of downward API volume file\nitems if unspecified, each key-value pair in the Data …\nitems If unspecified, each key-value pair in the Data …\nKernel Version reported by the node from ‘uname -r’ …\nThe key to select.\nkey is the key to project.\nThe label key that the selector applies to.\nThe key of the secret to select from.  Must be a valid …\nRequired. The taint key to be applied to a node.\nKey is the taint key that the toleration applies to. Empty …\nThe label key that the selector applies to.\nkeyring is the path to key ring for RBDUser. Default is …\nkeyring is the path to key ring for RBDUser. Default is …\nkind expected values are Shared: multiple blob disks per …\nKind of the referent. More info: …\nKind is the type of resource being referenced\nKind is the type of resource being referenced\nKubeProxy Version reported by the node.\nKubeletConfigKey declares which key of the referenced …\nEndpoint on which Kubelet is listening.\nKubelet Version reported by the node.\nA label query over a set of resources, in this case pods.\nLabelSelector is used to find matching pods. Pods that …\nLast time we got an update on a given condition.\nLastKnownGood reports the checkpointed config the node …\nTime of the last occurrence observed\nlastPhaseTransitionTime is the time the phase transitioned …\nlastProbeTime is the time we probed the condition.\nLast time we probed the condition.\nLastTerminationState holds the last termination state of …\nThe time at which the most recent occurrence of this event …\nLast time the condition transit from one status to another.\nlastTransitionTime is the time the condition transitioned …\nLast time the condition transitioned from one status to …\nThe last time the condition transitioned from one status …\nLevel is SELinux level label that applies to the container.\nActions that the management system should take in response …\nLifecycle is not allowed for ephemeral containers.\nLimits is the list of LimitRangeItem objects that are …\nLimits describes the maximum amount of compute resources …\nPeriodic probe of container liveness. Container will be …\nProbes are not allowed for ephemeral containers.\nLoadBalancer contains the current status of the …\nloadBalancerClass is the class of the load balancer …\nOnly applies to Service Type: LoadBalancer. This feature …\nIf specified and supported by the platform, this will …\nlocal represents directly-attached storage with node …\nlocalhostProfile indicates a profile defined in a file on …\nlun is Optional: FC target lun number\nlun is iSCSI Target Lun number.\nlun represents iSCSI Target Lun number.\nMachineID reported by the node. For unique machine …\nA list of node selector requirements by node’s labels.\nA list of scope selector requirements by scope of the …\nA list of node selector requirements by node’s fields.\nA list of topology selector requirements by labels.\nMatchLabelKeys is a set of pod label keys to select the …\nMax usage constraints on this kind by resource name.\nMaxLimitRequestRatio if specified, the named resource must …\nMaxSkew describes the degree to which pods may be unevenly …\nmedium represents what type of storage medium should back …\nMessage about the condition for a component. For example, …\nMessage regarding the last termination of the container\nMessage regarding why the container is not yet running.\nA human-readable description of the status of this …\nHuman readable message indicating details about last …\nmessage is the human-readable message indicating details …\nmessage is a human-readable message indicating details …\nHuman-readable message indicating details about last …\nA human readable message indicating details about why the …\nA human readable message indicating details about the …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nMay contain labels and annotations that will be copied …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nIf the Labels of a ReplicationController are empty, they …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nMin usage constraints on this kind by resource name.\nMinDomains indicates a minimum number of eligible domains. …\nMinimum number of seconds for which a newly created pod …\nOptional: mode bits used to set permissions on this file, …\nmode is Optional: mode bits used to set permissions on …\nmonitors is Required: Monitors is a collection of Ceph …\nmonitors is Required: Monitors is a collection of Ceph …\nmonitors is a collection of Ceph monitors. More info: …\nmonitors is a collection of Ceph monitors. More info: …\nmountOptions is the list of mount options, e.g. [“ro”, …\nPath within the container at which the volume should be …\nmountPropagation determines how mounts are propagated from …\nName of the attached volume\nName of the referent. More info: …\nName of the referent. More info: …\nName is the metadata.name of the referenced ConfigMap. …\nName of the referent. More info: …\nName of the referent. More info: …\nName of the container specified as a DNS_LABEL. Each …\nIf specified, this must be an IANA_SVC_NAME and unique …\nName is a DNS_LABEL representing the unique name of the …\nThe name of this port.  This must match the ‘name’ …\nName of the environment variable. Must be a C_IDENTIFIER.\nName of the ephemeral container specified as a DNS_LABEL. …\nThe header field name. This will be canonicalized upon …\nName of the referent. More info: …\nName of the referent. More info: …\nRequired.\nName is the name of the operating system. The currently …\nName uniquely identifies this resource claim inside the …\nName uniquely identifies this resource claim inside the …\nName of the scheduling gate. Each scheduling gate must …\nName must match the name of one entry in …\nName of the referent. More info: …\nName of the referent. More info: …\nName of the referent. More info: …\nname is unique within a namespace to reference a secret …\nThe name of this port within the service. This must be a …\nName of a property to set\nName is the name of resource being referenced\nName is the name of resource being referenced\nname of the volume. Must be a DNS_LABEL and unique within …\nname must match the name of a persistentVolumeClaim in the …\nThis must match the Name of a Volume.\nNames by which this image is known. e.g. [“…\nA list of DNS name server IP addresses. This will be …\nNamespace is the metadata.namespace of the referenced …\nNamespace of the referent. More info: …\nnamespace defines the space within which the secret name …\nNamespace is the namespace of resource being referenced …\nA label query over the set of namespaces that the term …\nnamespaces specifies a static list of namespace names that …\nnfs represents an NFS mount on the host. Provisioned by an …\nnfs represents an NFS mount on the host that shares a pod…\nDescribes node affinity scheduling rules for the pod.\nnodeAffinity defines constraints that limit what nodes …\nNodeAffinityPolicy indicates how we will treat Pod’s …\nnodeExpandSecretRef is a reference to the secret object …\nSet of ids/uuids to uniquely identify the node. More info: …\nOptional: Node hosting this endpoint. This can be used to …\nNodeName is a request to schedule this pod onto a specific …\nThe port on each node on which this service is exposed …\nnodePublishSecretRef is a reference to the secret object …\nnodePublishSecretRef is a reference to the secret object …\nNodeSelector is a selector which must be true for the pod …\nRequired. A list of node selector terms. The terms are …\nnodeStageSecretRef is a reference to the secret object …\nNodeTaintsPolicy indicates how we will treat node taints …\nnominatedNodeName is set only when this pod preempts other …\nIP addresses which offer the related ports but are not …\nObservedGeneration reflects the generation of the most …\nThe Operating System reported by the node\nRepresents a key’s relationship to a set of values. …\nRepresents a scope’s relationship to a set of values. …\nOperator represents a key’s relationship to the value. …\nSpecify whether the ConfigMap must be defined\nSpecify whether the ConfigMap or its key must be defined\noptional specify whether the ConfigMap or its keys must be …\noptional specify whether the ConfigMap or its keys must be …\nSpecify whether the Secret must be defined\nSpecify whether the Secret or its key must be defined\noptional field specify whether the Secret or its key must …\noptional field specify whether the Secret or its keys must …\noptions is Optional: this field holds extra command …\noptions is Optional: this field holds extra command …\nA list of DNS resolver options. This will be merged with …\nSpecifies the OS of the containers in the pod. Some pod …\nOS Image reported by the node from /etc/os-release (e.g. …\nOverhead represents the resource overhead associated with …\npartition is the partition in the volume that you want to …\npartition is the partition in the volume that you want to …\npath is Optional: Used as the mounted root, rather than …\npath is Optional: Used as the mounted root, rather than …\nRequired: Path is  the relative path name of the file to …\npath is the Glusterfs volume path. More info: …\npath is the Glusterfs volume path. More info: …\nPath to access on the HTTP server.\npath of the directory on the host. If the path is a …\npath is the relative path of the file to map the key to. …\npath of the full path to the volume on the node. It can be …\npath that is exported by the NFS server. More info: …\npath is the path relative to the mount point of the file …\npdID is the ID that identifies Photon Controller …\npdName is unique name of the PD resource in GCE. Used to …\nHow often (in seconds) to perform the probe. Default to 10 …\npersistentVolumeClaimVolumeSource represents a reference …\npersistentVolumeReclaimPolicy defines what happens to a …\nPhase is the current lifecycle phase of the namespace. …\nNodePhase is the recently observed lifecycle phase of the …\nphase represents the current phase of …\nphase indicates if a volume is available, bound to a …\nThe phase of a Pod is a simple, high-level summary of …\nphotonPersistentDisk represents a PhotonController …\nphotonPersistentDisk represents a PhotonController …\nDescribes pod affinity scheduling rules (e.g. co-locate …\nRequired. A pod affinity term, associated with the …\nDescribes pod anti-affinity scheduling rules (e.g. avoid …\nPodCIDR represents the pod IP range assigned to the node.\npodCIDRs represents the IP ranges assigned to the node for …\npodIP address allocated to the pod. Routable at least …\npodIPs holds the IP addresses allocated to the pod. If …\npool is the rados pool name. Default is rbd. More info: …\npool is the rados pool name. Default is rbd. More info: …\nPort number of the given endpoint.\nThe port number of the endpoint.\nPort number of the gRPC service. Number must be in the …\nName or number of the port to access on the container. …\nPort is the port number of the service port of which …\nThe port that will be exposed by this service.\nNumber or name of the port to access on the container. …\nportals is the iSCSI Target Portal List. The Portal is …\nportals is the iSCSI Target Portal List. The portal is …\nList of ports to expose from the container. Not specifying …\nPort numbers available on the related IP addresses.\nPorts are not allowed for ephemeral containers.\nPorts is a list of records of service ports If used, every …\nThe list of ports that are exposed by this service. More …\nportworxVolume represents a portworx volume attached and …\nportworxVolume represents a portworx volume attached and …\nPostStart is called immediately after a container is …\nPreStop is called immediately before a container is …\nPreemptionPolicy is the Policy for preempting pods with …\nA node selector term, associated with the corresponding …\nThe scheduler will prefer to schedule pods to nodes that …\nThe scheduler will prefer to schedule pods to nodes that …\nThe scheduler will prefer to schedule pods to nodes that …\nAn optional identifier to prepend to each key in the …\nThe priority value. Various system components use this …\nIf specified, indicates the pod’s priority. “…\nRun container in privileged mode. Processes in privileged …\nprocMount denotes the type of proc mount to use for the …\nprojected items for all in one resources secrets, …\nprotectionDomain is the name of the ScaleIO Protection …\nprotectionDomain is the name of the ScaleIO Protection …\nProtocol for port. Must be UDP, TCP, or SCTP. Defaults to …\nThe IP protocol for this port. Must be UDP, TCP, or SCTP. …\nProtocol is the protocol of the service port of which …\nThe IP protocol for this port. Supports “TCP”, “UDP…\nID of the node assigned by the cloud provider in the …\npublishNotReadyAddresses indicates that any agent which …\nThe Quality of Service (QOS) classification assigned to …\nquobyte represents a Quobyte mount on the host that shares …\nquobyte represents a Quobyte mount on the host that shares …\nrbd represents a Rados Block Device mount on the host that …\nrbd represents a Rados Block Device mount on the host that …\nreadOnly value true will force the readOnly setting in …\nreadOnly Defaults to false (read/write). ReadOnly here …\nreadOnly defaults to false (read/write). ReadOnly here …\nreadOnly defaults to false (read/write). ReadOnly here …\nreadOnly value to pass to ControllerPublishVolumeRequest. …\nreadOnly specifies a read-only configuration for the …\nreadOnly is Optional: Defaults to false (read/write). …\nreadOnly is Optional: Defaults to false (read/write). …\nreadOnly is Optional: Defaults to false (read/write). …\nreadOnly defaults to false (read/write). ReadOnly here …\nreadOnly is Optional: Defaults to false (read/write). …\nreadOnly is Optional: defaults to false (read/write). …\nreadOnly is Optional: defaults to false (read/write). …\nreadOnly here will force the ReadOnly setting in …\nreadOnly here will force the Glusterfs volume to be …\nreadOnly here will force the Glusterfs volume to be …\nreadOnly here will force the ReadOnly setting in …\nreadOnly here will force the ReadOnly setting in …\nreadOnly here will force the NFS export to be mounted with …\nreadOnly Will force the ReadOnly setting in VolumeMounts. …\nreadOnly defaults to false (read/write). ReadOnly here …\nreadOnly here will force the Quobyte volume to be mounted …\nreadOnly here will force the ReadOnly setting in …\nreadOnly here will force the ReadOnly setting in …\nreadOnly defaults to false (read/write). ReadOnly here …\nreadOnly Defaults to false (read/write). ReadOnly here …\nreadOnly defaults to false (read/write). ReadOnly here …\nreadOnly defaults to false (read/write). ReadOnly here …\nMounted read-only if true, read-write otherwise (false or …\nWhether this container has a read-only root filesystem. …\nIf specified, all readiness gates will be evaluated for …\nPeriodic probe of container service readiness. Container …\nProbes are not allowed for ephemeral containers.\nReady specifies whether the container is currently passing …\nThe number of ready replicas for this replication …\n(brief) reason from the last termination of the container\n(brief) reason the container is not yet running.\nThis should be a short, machine understandable string that …\n(brief) reason for the condition’s last transition.\nreason is a unique, this should be a short, machine …\nreason is a brief CamelCase string that describes any …\nUnique, one-word, CamelCase reason for the condition’s …\nA brief CamelCase message indicating details about why the …\nThe reason for the condition’s last transition.\nregistry represents a single or multiple Quobyte Registry …\nOptional secondary object for more complex actions.\nReplicas is the number of desired replicas. This is a …\nReplicas is the most recently observed number of replicas. …\nName of the controller that emitted this Event, e.g. …\nID of the controller instance, e.g. <code>kubelet-xyzf</code>.\nrepository is the URL\nRequests describes the minimum amount of compute resources …\nrequired specifies hard node constraints that must be met.\nIf the affinity requirements specified by this field are …\nIf the affinity requirements specified by this field are …\nIf the anti-affinity requirements specified by this field …\nStatus of resources resize desired for pod’s containers. …\nResources resize policy for the container.\nResources resize policy for the container.\nRequired: resource to select\nResourceClaimName is the name of a ResourceClaim object in …\nResourceClaimName is the name of the ResourceClaim that …\nStatus of resource claims.\nResourceClaimTemplateName is the name of a …\nResourceClaims defines which ResourceClaims must be …\nSelects a resource of the container: only resources limits …\nSelects a resource of the container: only resources limits …\nName of the resource to which this resource resize policy …\nResourceVersion is the metadata.ResourceVersion of the …\nSpecific resourceVersion to which this reference is made, …\nCompute Resources required by this container. Cannot be …\nResources represents the compute resource requests and …\nResources are not allowed for ephemeral containers. …\nresources represents the minimum resources the volume …\nRestartCount holds the number of times the container has …\nRestartPolicy defines the restart behavior of individual …\nRestart policy to apply when specified resource is …\nRestart policy for the container to manage the restart …\nRestart policy for all containers within the pod. One of …\nrevision is the commit hash for the specified revision.\nRole is a SELinux role label that applies to the container.\nThe GID to run the entrypoint of the container process. …\nThe GID to run the entrypoint of the container process. …\nIndicates that the container must run as a non-root user. …\nIndicates that the container must run as a non-root user. …\nThe UID to run the entrypoint of the container process. …\nThe UID to run the entrypoint of the container process. …\nThe UserName in Windows to run the entrypoint of the …\nDetails about a running container\nRuntimeClassName refers to a RuntimeClass object in the …\nscaleIO represents a ScaleIO persistent volume attached …\nscaleIO represents a ScaleIO persistent volume attached …\nIf specified, the pod will be dispatched by specified …\nSchedulingGates is an opaque list of values that if …\nScheme to use for connecting to the host. Defaults to HTTP.\nThe name of the scope that the selector applies to.\nscopeSelector is also a collection of filters like scopes …\nA collection of filters that must match each object …\nThe SELinux context to be applied to all containers. If …\nThe SELinux context to be applied to the container. If …\nA list of DNS search domains for host-name lookup. This …\nThe seccomp options to use by the containers in this pod. …\nThe seccomp options to use by this container. If seccomp …\nsecret represents a secret that should populate this …\nsecret information about the secret data to project\nsecretFile is Optional: SecretFile is the path to key ring …\nsecretFile is Optional: SecretFile is the path to key ring …\nSelects a key of a secret in the pod’s namespace\nsecretName is the name of secret that contains Azure …\nsecretName is the  name of secret that contains Azure …\nsecretName is the name of the secret in the pod’s …\nsecretNamespace is the namespace of the secret that …\nsecretRef is Optional: SecretRef is reference to the …\nsecretRef is Optional: SecretRef is reference to the …\nsecretRef is Optional: points to a secret object …\nsecretRef is optional: points to a secret object …\nThe Secret to select from\nsecretRef is Optional: SecretRef is reference to the …\nsecretRef is Optional: secretRef is reference to the …\nsecretRef is the CHAP Secret for iSCSI target and …\nsecretRef is the CHAP Secret for iSCSI target and …\nsecretRef is name of the authentication secret for …\nsecretRef is name of the authentication secret for …\nsecretRef references to the secret for ScaleIO user and …\nsecretRef references to the secret for ScaleIO user and …\nsecretRef specifies the secret to use for obtaining the …\nsecretRef specifies the secret to use for obtaining the …\nSecrets is a list of the secrets in the same namespace …\nSecurityContext defines the security options the container …\nOptional: SecurityContext defines the security options the …\nSecurityContext holds pod-level security attributes and …\nselector is a label query over volumes to consider for …\nSelector is a label query over pods that should match the …\nRoute service traffic to pods with label keys and values …\nData about the Event series this event represents or nil …\nserver is the hostname or IP address of the NFS server. …\nService is the name of the service to place in the gRPC …\nDeprecatedServiceAccount is a depreciated alias for …\nServiceAccountName is the name of the ServiceAccount to …\nserviceAccountToken is information about the …\nSupports “ClientIP” and “None”. Used to maintain …\nsessionAffinityConfig contains the configurations of …\nIf true the pod’s hostname will be configured as the pod…\nshareName is the azure Share Name\nshareName is the azure share Name\nShare a single process namespace between all of the …\nSignal from the last termination of the container\nThe size of the image in bytes.\nsizeLimit is the total amount of local storage required …\nThe component reporting this event. Should be a short …\nSource describes where to find the ResourceClaim.\nsources is the list of volume projections\nSpec defines the limits enforced. More info: …\nSpec defines the behavior of the Namespace. More info: …\nSpec defines the behavior of a node. …\nspec defines a specification of a persistent volume owned …\nspec defines the desired characteristics of a volume …\nThe specification for the PersistentVolumeClaim. The …\nSpecification of the desired behavior of the pod. More …\nSpecification of the desired behavior of the pod. More …\nSpec defines the specification of the desired behavior of …\nSpec defines the desired quota. …\nSpec defines the behavior of a service. …\nsslEnabled is the flag to enable/disable SSL communication …\nsslEnabled Flag enable/disable SSL communication with …\nRFC 3339 date and time at which the object was …\nStarted indicates whether the container has finished its …\nTime at which the container was last (re-)started\nTime at which previous execution of the container started\nStartupProbe indicates that the Pod has successfully …\nProbes are not allowed for ephemeral containers.\nState holds details about the container’s current …\nStatus of the condition for a component. Valid values for …\nStatus describes the current status of a Namespace. More …\nStatus of the condition, one of True, False, Unknown.\nMost recently observed status of the node. Populated by …\nStatus of the condition, one of True, False, Unknown.\nstatus represents the current information/status for the …\nstatus represents the current information/status of a …\nMost recently observed status of the pod. This data may …\nStatus is the status of the condition. Can be True, False, …\nStatus is the most recently observed status of the …\nStatus of the condition, one of True, False, Unknown.\nStatus defines the actual enforced quota and its current …\nMost recently observed status of the service. Populated by …\nWhether this container should allocate a buffer for stdin …\nWhether this container should allocate a buffer for stdin …\nWhether the container runtime should close the stdin …\nWhether the container runtime should close the stdin …\nstorageClassName is the name of the StorageClass required …\nstorageClassName is the name of StorageClass to which this …\nstorageMode indicates whether the storage for a volume …\nstorageMode indicates whether the storage for a volume …\nstoragePolicyID is the storage Policy Based Management …\nstoragePolicyName is the storage Policy Based Management …\nstoragePool is the ScaleIO Storage Pool associated with …\nstoragePool is the ScaleIO Storage Pool associated with …\nstorageOS represents a StorageOS volume that is attached …\nstorageOS represents a StorageOS volume attached and …\nstringData allows specifying non-binary secret data in …\nPath within the volume from which the container’s volume …\nExpanded path within the volume from which the container’…\nIf specified, the fully qualified Pod hostname will be “…\nThe set of all endpoints is the union of all subsets. …\nMinimum consecutive successes for the probe to be …\nA list of groups applied to the first process run in each …\nSysctls hold a list of namespaced sysctls used for the …\nsystem is the name of the storage system as configured in …\nsystem is the name of the storage system as configured in …\nSystemUUID reported by the node. For unique machine …\nIf specified, the node’s taints.\nThe target object that you want to bind to the standard …\nIf set, the name of the container from PodSpec that this …\nNumber or name of the port to access on the pods targeted …\ntargetPortal is iSCSI Target Portal. The Portal is either …\ntargetPortal is iSCSI Target Portal. The Portal is either …\nReference to object providing the endpoint.\ntargetWWNs is Optional: FC target worldwide names (WWNs)\nDeprecated. TCPSocket is NOT supported as a …\nTCPSocket specifies an action involving a TCP port.\nTemplate defines the pods that will be created from this …\nTemplate is the object that describes the pod that will be …\ntenant owning the given Quobyte volume in the Backend Used …\nDetails about a terminated container\nOptional duration in seconds the pod needs to terminate …\nOptional duration in seconds the pod needs to terminate …\nOptional: Path at which the file to which the container’…\nOptional: Path at which the file to which the container’…\nIndicate how the termination message should be populated. …\nIndicate how the termination message should be populated. …\nTimeAdded represents the time at which the taint was …\ntimeoutSeconds specifies the seconds of ClientIP type …\nNumber of seconds after which the probe times out. …\nTolerationSeconds represents the period of time the …\nIf specified, the pod’s tolerations.\nThis pod should be co-located (affinity) or not co-located …\nTopologyKey is the key of node labels. Nodes that have a …\nTopologySpreadConstraints describes how a group of pods …\nWhether this container should allocate a TTY for itself, …\nWhether this container should allocate a TTY for itself, …\nType of condition for a component. Valid value: “Healthy…\nType of this event (Normal, Warning), new types could be …\ntype for HostPath Volume Defaults to “” More info: …\nType of resource that this limit applies to.\nType of namespace controller condition.\nNode address type, one of Hostname, ExternalIP or …\nType of node condition.\nType is the type of the condition. More info: …\nType of replication controller condition.\nType is a SELinux type label that applies to the container.\ntype indicates which kind of seccomp profile will be …\nUsed to facilitate programmatic handling of secret data. …\ntype determines how the Service is exposed. Defaults to …\nUID is the metadata.UID of the referenced ConfigMap. This …\nUID of the referent. More info: …\nUnschedulable controls node schedulability of new pods. By …\nUsed is the current observed total usage of the resource …\nuser is Optional: User is the rados user name, default is …\nuser is optional: User is the rados user name, default is …\nuser to map volume access to Defaults to serivceaccount …\nuser is the rados user name. Default is admin. More info: …\nuser is the rados user name. Default is admin. More info: …\nUser is a SELinux user label that applies to the container.\nVariable references $(VAR_NAME) are expanded using the …\nThe header field value\nValue of a property to set\nThe taint value corresponding to the taint key.\nValue is the taint value the toleration matches to. If the …\nSource for the environment variable’s value. Cannot be …\nAn array of string values. If the operator is In or NotIn, …\nAn array of string values. If the operator is In or NotIn, …\nAn array of string values. One value must match the label …\nvolume is a string that references an already created …\nvolumeAttributes of the volume to publish.\nvolumeAttributes stores driver-specific properties that …\nWill be used to create a stand-alone PVC to provision the …\nvolumeDevices is the list of block devices to be used by …\nvolumeDevices is the list of block devices to be used by …\nvolumeHandle is the unique volume name returned by the CSI …\nvolumeID is unique ID of the persistent disk resource in …\nvolumeID used to identify the volume in cinder. More info: …\nvolumeID used to identify the volume in cinder. More info: …\nvolumeID uniquely identifies a Portworx volume\nvolumeMode defines what type of volume is required by the …\nvolumeMode defines if a volume is intended to be used with …\nPod volumes to mount into the container’s filesystem. …\nPod volumes to mount into the container’s filesystem. …\nvolumeName is the binding reference to the …\nvolumeName is the name of a volume already created in the …\nvolumeName is the name of a volume already created in the …\nvolumeName is the human-readable name of the StorageOS …\nvolumeName is the human-readable name of the StorageOS …\nvolumeNamespace specifies the scope of the volume within …\nvolumeNamespace specifies the scope of the volume within …\nvolumePath is the path that identifies vSphere volume vmdk\nList of volumes that can be mounted by containers …\nList of volumes that are attached to the node.\nList of attachable volumes in use (mounted) by the node.\nvsphereVolume represents a vSphere volume attached and …\nvsphereVolume represents a vSphere volume attached and …\nDetails about a waiting container\nWeight associated with matching the corresponding …\nweight associated with matching the corresponding …\nWhenUnsatisfiable indicates how to deal with a pod if it …\nThe Windows specific settings applied to all containers. …\nThe Windows specific settings applied to all containers. …\nContainer’s working directory. If not specified, the …\nContainer’s working directory. If not specified, the …\nwwids Optional: FC volume world wide identifiers (wwids) …\nEndpoint represents a single logical “backend” …\nEndpointConditions represents the current condition of an …\nEndpointHints provides hints describing how an endpoint …\nEndpointPort represents a Port used by an EndpointSlice\nEndpointSlice represents a subset of the endpoints that …\nForZone provides information about which zones should …\naddressType specifies the type of address carried by this …\naddresses of this endpoint. The contents of this field are …\nThe application protocol for this port. This is used as a …\nconditions contains information about the current status …\ndeprecatedTopology contains topology information part of …\nendpoints is a list of unique endpoints in this slice. …\nforZones indicates the zone(s) this endpoint should be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nhints contains information associated with how an endpoint …\nhostname of this endpoint. This field may be used by …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStandard object’s metadata.\nname represents the name of this port. All ports in an …\nname represents the name of the zone.\nnodeName represents the name of the Node hosting this …\nport represents the port number of the endpoint. If this …\nports specifies the list of network ports exposed by each …\nprotocol represents the IP protocol for this port. Must be …\nready indicates that this endpoint is prepared to receive …\nserving is identical to ready except that it is set …\ntargetRef is a reference to a Kubernetes object that …\nterminating indicates that this endpoint is terminating. A …\nzone is the name of the Zone this endpoint exists in.\nEvent is a report of an event somewhere in the cluster. It …\nEventSeries contain information on series of events, i.e. …\naction is what action was taken/failed regarding to the …\ncount is the number of occurrences in this series up to …\ndeprecatedCount is the deprecated field assuring backward …\ndeprecatedFirstTimestamp is the deprecated field assuring …\ndeprecatedLastTimestamp is the deprecated field assuring …\ndeprecatedSource is the deprecated field assuring backward …\neventTime is the time when this Event was first observed. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nlastObservedTime is the time when last Event from the …\nStandard object’s metadata. More info: …\nnote is a human-readable description of the status of this …\nreason is why the action was taken. It is human-readable. …\nregarding contains the object this Event is about. In most …\nrelated is the optional secondary object for more complex …\nreportingController is the name of the controller that …\nreportingInstance is the ID of the controller instance, …\nseries is data about the Event series this event …\ntype is the type of this event (Normal, Warning), new …\nExemptPriorityLevelConfiguration describes the …\nFlowDistinguisherMethod specifies the method of a flow …\nFlowSchema defines the schema of a group of flows. Note …\nFlowSchemaCondition describes conditions for a FlowSchema.\nFlowSchemaSpec describes how the FlowSchema’s …\nFlowSchemaStatus represents the current state of a …\nGroupSubject holds detailed information for group-kind …\nLimitResponse defines how to handle requests that can not …\nLimitedPriorityLevelConfiguration specifies how to handle …\nNonResourcePolicyRule is a predicate that matches …\nPolicyRulesWithSubjects prescribes a test that applies to …\nPriorityLevelConfiguration represents the configuration of …\nPriorityLevelConfigurationCondition defines the condition …\nPriorityLevelConfigurationReference contains information …\nPriorityLevelConfigurationSpec specifies the configuration …\nPriorityLevelConfigurationStatus represents the current …\nQueuingConfiguration holds the configuration parameters …\nResourcePolicyRule is a predicate that matches some …\nServiceAccountSubject holds detailed information for …\nSubject matches the originator of a request, as identified …\nUserSubject holds detailed information for user-kind …\n<code>apiGroups</code> is a list of matching API groups and may not be …\n<code>assuredConcurrencyShares</code> (ACS) configures the execution …\n<code>borrowingLimitPercent</code>, if present, configures a limit on …\n<code>clusterScope</code> indicates whether to match requests that do …\n<code>conditions</code> is a list of the current states of FlowSchema.\n<code>conditions</code> is the current state of “request-priority”.\n<code>distinguisherMethod</code> defines how to compute the flow …\n<code>exempt</code> specifies how requests are handled for an exempt …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n<code>group</code> matches based on user group name.\n<code>handSize</code> is a small positive number that configures the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>kind</code> indicates which one of the other fields is non-empty. …\n<code>lastTransitionTime</code> is the last time the condition …\n<code>lastTransitionTime</code> is the last time the condition …\n<code>lendablePercent</code> prescribes the fraction of the level’s …\n<code>lendablePercent</code> prescribes the fraction of the level’s …\n<code>limitResponse</code> indicates what to do with requests that can …\n<code>limited</code> specifies how requests are handled for a Limited …\n<code>matchingPrecedence</code> is used to choose among the FlowSchemas …\n<code>message</code> is a human-readable message indicating details …\n<code>message</code> is a human-readable message indicating details …\n<code>metadata</code> is the standard object’s metadata. More info: …\n<code>metadata</code> is the standard object’s metadata. More info: …\nname is the user group that matches, or “*” to match …\n<code>name</code> is the name of the priority level configuration being …\n<code>name</code> is the name of matching ServiceAccount objects, or “…\n<code>name</code> is the username that matches, or “*” to match all …\n<code>namespace</code> is the namespace of matching ServiceAccount …\n<code>namespaces</code> is a list of target namespaces that restricts …\n<code>nominalConcurrencyShares</code> (NCS) contributes to the …\n<code>nonResourceRules</code> is a list of NonResourcePolicyRules that …\n<code>nonResourceURLs</code> is a set of url prefixes that a user …\n<code>priorityLevelConfiguration</code> should reference a …\n<code>queueLengthLimit</code> is the maximum number of requests allowed …\n<code>queues</code> is the number of queues for this priority level. …\n<code>queuing</code> holds the configuration parameters for queuing. …\n<code>reason</code> is a unique, one-word, CamelCase reason for the …\n<code>reason</code> is a unique, one-word, CamelCase reason for the …\n<code>resourceRules</code> is a slice of ResourcePolicyRules that …\n<code>resources</code> is a list of matching resources (i.e., lowercase …\n<code>rules</code> describes which requests will match this flow …\n<code>serviceAccount</code> matches ServiceAccounts.\n<code>spec</code> is the specification of the desired behavior of a …\n<code>spec</code> is the specification of the desired behavior of a “…\n<code>status</code> is the current status of a FlowSchema. More info: …\n<code>status</code> is the status of the condition. Can be True, False, …\n<code>status</code> is the current status of a “request-priority”. …\n<code>status</code> is the status of the condition. Can be True, False, …\nsubjects is the list of normal user, serviceaccount, or …\n<code>type</code> is the type of flow distinguisher method The …\n<code>type</code> is the type of the condition. Required.\n<code>type</code> is “Queue” or “Reject”. “Queue” means …\n<code>type</code> is the type of the condition. Required.\n<code>type</code> indicates whether this priority level is subject to …\n<code>user</code> matches based on username.\n<code>verbs</code> is a list of matching verbs and may not be empty. “…\n<code>verbs</code> is a list of matching verbs and may not be empty. “…\nExemptPriorityLevelConfiguration describes the …\nFlowDistinguisherMethod specifies the method of a flow …\nFlowSchema defines the schema of a group of flows. Note …\nFlowSchemaCondition describes conditions for a FlowSchema.\nFlowSchemaSpec describes how the FlowSchema’s …\nFlowSchemaStatus represents the current state of a …\nGroupSubject holds detailed information for group-kind …\nLimitResponse defines how to handle requests that can not …\nLimitedPriorityLevelConfiguration specifies how to handle …\nNonResourcePolicyRule is a predicate that matches …\nPolicyRulesWithSubjects prescribes a test that applies to …\nPriorityLevelConfiguration represents the configuration of …\nPriorityLevelConfigurationCondition defines the condition …\nPriorityLevelConfigurationReference contains information …\nPriorityLevelConfigurationSpec specifies the configuration …\nPriorityLevelConfigurationStatus represents the current …\nQueuingConfiguration holds the configuration parameters …\nResourcePolicyRule is a predicate that matches some …\nServiceAccountSubject holds detailed information for …\nSubject matches the originator of a request, as identified …\nUserSubject holds detailed information for user-kind …\n<code>apiGroups</code> is a list of matching API groups and may not be …\n<code>borrowingLimitPercent</code>, if present, configures a limit on …\n<code>clusterScope</code> indicates whether to match requests that do …\n<code>conditions</code> is a list of the current states of FlowSchema.\n<code>conditions</code> is the current state of “request-priority”.\n<code>distinguisherMethod</code> defines how to compute the flow …\n<code>exempt</code> specifies how requests are handled for an exempt …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.")