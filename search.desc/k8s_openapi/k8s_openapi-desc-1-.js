searchState.loadedDescShard("k8s_openapi", 1, "Returns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\n<code>group</code> matches based on user group name.\n<code>handSize</code> is a small positive number that configures the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>kind</code> indicates which one of the other fields is non-empty. …\n<code>lastTransitionTime</code> is the last time the condition …\n<code>lastTransitionTime</code> is the last time the condition …\n<code>lendablePercent</code> prescribes the fraction of the level’s …\n<code>lendablePercent</code> prescribes the fraction of the level’s …\n<code>limitResponse</code> indicates what to do with requests that can …\n<code>limited</code> specifies how requests are handled for a Limited …\n<code>matchingPrecedence</code> is used to choose among the FlowSchemas …\n<code>message</code> is a human-readable message indicating details …\n<code>message</code> is a human-readable message indicating details …\n<code>metadata</code> is the standard object’s metadata. More info: …\n<code>metadata</code> is the standard object’s metadata. More info: …\nname is the user group that matches, or “*” to match …\n<code>name</code> is the name of the priority level configuration being …\n<code>name</code> is the name of matching ServiceAccount objects, or “…\n<code>name</code> is the username that matches, or “*” to match all …\n<code>namespace</code> is the namespace of matching ServiceAccount …\n<code>namespaces</code> is a list of target namespaces that restricts …\n<code>nominalConcurrencyShares</code> (NCS) contributes to the …\n<code>nominalConcurrencyShares</code> (NCS) contributes to the …\n<code>nonResourceRules</code> is a list of NonResourcePolicyRules that …\n<code>nonResourceURLs</code> is a set of url prefixes that a user …\n<code>priorityLevelConfiguration</code> should reference a …\n<code>queueLengthLimit</code> is the maximum number of requests allowed …\n<code>queues</code> is the number of queues for this priority level. …\n<code>queuing</code> holds the configuration parameters for queuing. …\n<code>reason</code> is a unique, one-word, CamelCase reason for the …\n<code>reason</code> is a unique, one-word, CamelCase reason for the …\n<code>resourceRules</code> is a slice of ResourcePolicyRules that …\n<code>resources</code> is a list of matching resources (i.e., lowercase …\n<code>rules</code> describes which requests will match this flow …\n<code>serviceAccount</code> matches ServiceAccounts.\n<code>spec</code> is the specification of the desired behavior of a …\n<code>spec</code> is the specification of the desired behavior of a “…\n<code>status</code> is the current status of a FlowSchema. More info: …\n<code>status</code> is the status of the condition. Can be True, False, …\n<code>status</code> is the current status of a “request-priority”. …\n<code>status</code> is the status of the condition. Can be True, False, …\nsubjects is the list of normal user, serviceaccount, or …\n<code>type</code> is the type of flow distinguisher method The …\n<code>type</code> is the type of the condition. Required.\n<code>type</code> is “Queue” or “Reject”. “Queue” means …\n<code>type</code> is the type of the condition. Required.\n<code>type</code> indicates whether this priority level is subject to …\n<code>user</code> matches based on username.\n<code>verbs</code> is a list of matching verbs and may not be empty. “…\n<code>verbs</code> is a list of matching verbs and may not be empty. “…\nHTTPIngressPath associates a path with a backend. Incoming …\nHTTPIngressRuleValue is a list of http selectors pointing …\nIPBlock describes a particular CIDR (Ex. “192.168.1.0/24…\nIngress is a collection of rules that allow inbound …\nIngressBackend describes all endpoints for a given service …\nIngressClass represents the class of the Ingress, …\nIngressClassParametersReference identifies an API object. …\nIngressClassSpec provides information about the class of …\nIngressLoadBalancerIngress represents the status of a …\nIngressLoadBalancerStatus represents the status of a …\nIngressPortStatus represents the error condition of a …\nIngressRule represents the rules mapping the paths under a …\nIngressServiceBackend references a Kubernetes Service as a …\nIngressSpec describes the Ingress the user wishes to exist.\nIngressStatus describe the current state of the Ingress.\nIngressTLS describes the transport layer security …\nNetworkPolicy describes what network traffic is allowed …\nNetworkPolicyEgressRule describes a particular set of …\nNetworkPolicyIngressRule describes a particular set of …\nNetworkPolicyPeer describes a peer to allow traffic …\nNetworkPolicyPort describes a port to allow traffic on\nNetworkPolicySpec provides the specification of a …\nServiceBackendPort is the service port being referenced.\napiGroup is the group for the resource being referenced. …\nbackend defines the referenced service endpoint to which …\ncidr is a string representing the IPBlock Valid examples …\ncontroller refers to the name of the controller that …\ndefaultBackend is the backend that should handle requests …\negress is a list of egress rules to be applied to the …\nendPort indicates that the range of ports from port to …\nerror is to record the problem with the service port The …\nexcept is a slice of CIDRs that should not be included …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nfrom is a list of sources which should be able to access …\nhost is the fully qualified domain name of a network host, …\nhostname is set for load-balancer ingress points that are …\nhosts is a list of hosts included in the TLS certificate. …\ningress is a list containing ingress points for the …\ningress is a list of ingress rules to be applied to the …\ningressClassName is the name of an IngressClass cluster …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nip is set for load-balancer ingress points that are IP …\nipBlock defines policy on a particular IPBlock. If this …\nkind is the type of resource being referenced.\nloadBalancer contains the current status of the …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nname is the name of resource being referenced.\nname is the referenced service. The service must exist in …\nname is the name of the port on the Service. This is a …\nnamespace is the namespace of the resource being …\nnamespaceSelector selects namespaces using cluster-scoped …\nnumber is the numerical port number (e.g. 80) on the …\nparameters is a link to a custom resource containing …\npath is matched against the path of an incoming request. …\npathType determines the interpretation of the path …\npaths is a collection of paths that map requests to …\npodSelector is a label selector which selects pods. This …\npodSelector selects the pods to which this NetworkPolicy …\npolicyTypes is a list of rule types that the NetworkPolicy …\nport is the port number of the ingress port.\nport of the referenced service. A port name or port number …\nport represents the port on the given protocol. This can …\nports provides information about the ports exposed by this …\nports is a list of destination ports for outgoing traffic. …\nports is a list of ports which should be made accessible …\nprotocol is the protocol of the ingress port. The …\nprotocol represents the protocol (TCP, UDP, or SCTP) which …\nresource is an ObjectRef to another Kubernetes resource in …\nrules is a list of host rules used to configure the …\nscope represents if this refers to a cluster or namespace …\nsecretName is the name of the secret used to terminate TLS …\nservice references a service as a backend. This is a …\nspec is the desired state of the Ingress. More info: …\nspec is the desired state of the IngressClass. More info: …\nspec represents the specification of the desired behavior …\nstatus is the current state of the Ingress. More info: …\ntls represents the TLS configuration. Currently the …\nto is a list of destinations for outgoing traffic of pods …\nClusterCIDR represents a single configuration for per-Node …\nClusterCIDRSpec defines the desired state of ClusterCIDR.\nIPAddress represents a single IP of a single IP Family. …\nIPAddressSpec describe the attributes in an IP Address.\nParentReference describes a reference to a parent object.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGroup is the group of the object being referenced.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nipv4 defines an IPv4 IP block in CIDR notation(e.g. “…\nipv6 defines an IPv6 IP block in CIDR notation(e.g. “…\nStandard object’s metadata. More info: …\nStandard object’s metadata. More info: …\nName is the name of the object being referenced.\nNamespace is the namespace of the object being referenced.\nnodeSelector defines which nodes the config is applicable …\nParentRef references the resource that an IPAddress is …\nperNodeHostBits defines the number of host bits to be …\nResource is the resource of the object being referenced.\nspec is the desired state of the ClusterCIDR. More info: …\nspec is the desired state of the IPAddress. More info: …\nUID is the uid of the object being referenced.\nOverhead structure represents the resource overhead …\nRuntimeClass defines a class of container runtime …\nScheduling specifies the scheduling constraints for nodes …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nhandler specifies the underlying runtime and configuration …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMore info: …\nnodeSelector lists labels that must be present on nodes …\noverhead represents the resource overhead associated with …\npodFixed represents the fixed resource overhead associated …\nscheduling holds the scheduling constraints to ensure that …\ntolerations are appended (excluding duplicates) to pods …\nEviction evicts a pod from its node subject to certain …\nPodDisruptionBudget is an object to define the max …\nPodDisruptionBudgetSpec is a description of a …\nPodDisruptionBudgetStatus represents information about the …\nConditions contain conditions for PDB. The disruption …\ncurrent number of healthy pods\nDeleteOptions may be provided\nminimum desired number of healthy pods\nDisruptedPods contains information about pods whose …\nNumber of pod disruptions that are currently allowed.\ntotal number of pods counted by this disruption budget\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAn eviction is allowed if at most “maxUnavailable” …\nObjectMeta describes the pod that is being evicted.\nStandard object’s metadata. More info: …\nAn eviction is allowed if at least “minAvailable” pods …\nMost recent generation observed when updating this PDB …\nLabel query over pods whose evictions are managed by the …\nSpecification of the desired behavior of the …\nMost recently observed status of the PodDisruptionBudget.\nUnhealthyPodEvictionPolicy defines the criteria for when …\nAggregationRule describes how to locate ClusterRoles to …\nClusterRole is a cluster level, logical grouping of …\nClusterRoleBinding references a ClusterRole, but not …\nPolicyRule holds information that describes a policy rule, …\nRole is a namespaced, logical grouping of PolicyRules that …\nRoleBinding references a role, but does not contain it.  …\nRoleRef contains information that points to the role being …\nSubject contains a reference to the object or user …\nAggregationRule is an optional field that describes how to …\nAPIGroup is the group for the resource being referenced\nAPIGroup holds the API group of the referenced subject. …\nAPIGroups is the name of the APIGroup that contains the …\nClusterRoleSelectors holds a list of selectors which will …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKind is the type of resource being referenced\nKind of object being referenced. Values defined by this …\nStandard object’s metadata.\nStandard object’s metadata.\nStandard object’s metadata.\nStandard object’s metadata.\nName is the name of resource being referenced\nName of the object being referenced.\nNamespace of the referenced object.  If the object kind is …\nNonResourceURLs is a set of partial urls that a user …\nResourceNames is an optional white list of names that the …\nResources is a list of resources this rule applies to. ‘*…\nRoleRef can only reference a ClusterRole in the global …\nRoleRef can reference a Role in the current namespace or a …\nRules holds all the PolicyRules for this ClusterRole\nRules holds all the PolicyRules for this Role\nSubjects holds references to the objects the role applies …\nSubjects holds references to the objects the role applies …\nVerbs is a list of Verbs that apply to ALL the …\nAllocationResult contains attributes of an allocated …\nPodSchedulingContext objects hold information that is …\nPodSchedulingContextSpec describes where resources for the …\nPodSchedulingContextStatus describes where resources for …\nResourceClaim describes which resources are needed by a …\nResourceClaimConsumerReference contains enough information …\nResourceClaimParametersReference contains enough …\nResourceClaimSchedulingStatus contains information about …\nResourceClaimSpec defines how a resource is to be …\nResourceClaimStatus tracks whether the resource has been …\nResourceClaimTemplate is used to produce ResourceClaim …\nResourceClaimTemplateSpec contains the metadata and fields …\nResourceClass is used by administrators to influence how …\nResourceClassParametersReference contains enough …\nResourceHandle holds opaque resource data for processing …\nAllocation is set by the resource driver once a resource …\nAllocation can start immediately or when a Pod wants to …\nAPIGroup is the group for the resource being referenced. …\nAPIGroup is the group for the resource being referenced. …\nAPIGroup is the group for the resource being referenced. …\nThis field will get set by the resource driver after it …\nData contains the opaque data associated with this …\nDeallocationRequested indicates that a ResourceClaim is to …\nDriverName is a copy of the driver name from the …\nDriverName defines the name of the dynamic resource driver …\nDriverName specifies the name of the resource driver whose …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nKind is the type of resource being referenced. This is the …\nKind is the type of resource being referenced. This is the …\nStandard object metadata\nStandard object metadata\nStandard object metadata\nObjectMeta may contain labels and annotations that will be …\nStandard object metadata\nName is the name of resource being referenced.\nName is the name of resource being referenced.\nName matches the pod.spec.resourceClaims[*].Name field.\nName is the name of resource being referenced.\nNamespace that contains the referenced resource. Must be …\nParametersRef references a separate object with arbitrary …\nParametersRef references an arbitrary separate object that …\nPotentialNodes lists nodes where the Pod might be able to …\nReservedFor indicates which entities are currently allowed …\nResource is the type of resource being referenced, for …\nResourceClaims describes resource availability for each …\nResourceClassName references the driver and additional …\nResourceHandles contain the state associated with an …\nSelectedNode is the node for which allocation of …\nShareable determines whether the resource supports more …\nSpec describes where resources for the Pod are needed.\nSpec describes the desired attributes of a resource that …\nDescribes the ResourceClaim that is to be generated.\nSpec for the ResourceClaim. The entire content is copied …\nStatus describes where resources for the Pod can be …\nStatus describes whether the resource is available and …\nOnly nodes matching the selector will be considered by the …\nUID identifies exactly one incarnation of the resource.\nUnsuitableNodes lists nodes that the ResourceClaim cannot …\nPriorityClass defines mapping from a priority class name …\ndescription is an arbitrary string that usually provides …\nReturns the argument unchanged.\nglobalDefault specifies whether this PriorityClass should …\nCalls <code>U::from(self)</code>.\nStandard object’s metadata. More info: …\npreemptionPolicy is the Policy for preempting pods with …\nvalue represents the integer value of this priority class. …\nCSIDriver captures information about a Container Storage …\nCSIDriverSpec is the specification of a CSIDriver.\nCSINode holds information about all CSI drivers installed …\nCSINodeDriver holds information about the specification of …\nCSINodeSpec holds information about the specification of …\nCSIStorageCapacity stores the result of one CSI …\nStorageClass describes the parameters for a class of …\nTokenRequest contains parameters of a service account …\nVolumeAttachment captures the intent to attach or detach …\nVolumeAttachmentSource represents a volume that should be …\nVolumeAttachmentSpec is the specification of a …\nVolumeAttachmentStatus is the status of a VolumeAttachment …\nVolumeError captures an error encountered during a volume …\nVolumeNodeResources is a set of resource limits for …\nallocatable represents the volume resources of a node that …\nallowVolumeExpansion shows whether the storage class allow …\nallowedTopologies restrict the node topologies where …\nattachError represents the last error encountered during …\nattachRequired indicates this CSI volume driver requires …\nattached indicates the volume is successfully attached. …\nattacher indicates the name of the volume driver that MUST …\nattachmentMetadata is populated with any information …\naudience is the intended audience of the token in “…\ncapacity is the value reported by the CSI driver in its …\ncount indicates the maximum number of unique volumes …\ndetachError represents the last error encountered during …\ndrivers is a list of information of all CSI Drivers …\nexpirationSeconds is the duration of validity of the token …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nfsGroupPolicy defines if the underlying volume supports …\ninlineVolumeSpec contains all the information necessary to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nmaximumVolumeSize is the value reported by the CSI driver …\nmessage represents the error encountered during Attach or …\nStandard object metadata. metadata.Name indicates the name …\nStandard object’s metadata. metadata.name must be the …\nStandard object’s metadata. The name has no particular …\nStandard object’s metadata. More info: …\nStandard object metadata. More info: …\nmountOptions controls the mountOptions for dynamically …\nname represents the name of the CSI driver that this …\nnodeID of the node from the driver point of view. This …\nnodeName represents the node that the volume should be …\nnodeTopology defines which nodes have access to the …\nparameters holds the parameters for the provisioner that …\npersistentVolumeName represents the name of the persistent …\npodInfoOnMount indicates this CSI volume driver requires …\nprovisioner indicates the type of the provisioner.\nreclaimPolicy controls the reclaimPolicy for dynamically …\nrequiresRepublish indicates the CSI driver wants …\nseLinuxMount specifies if the CSI driver supports “-o …\nsource represents the volume that should be attached.\nspec represents the specification of the CSI Driver.\nspec is the specification of CSINode\nspec represents specification of the desired attach/detach …\nstatus represents status of the VolumeAttachment request. …\nstorageCapacity indicates that the CSI volume driver wants …\nstorageClassName represents the name of the StorageClass …\ntime represents the time the error was encountered.\ntokenRequests indicates the CSI driver needs pods’ …\ntopologyKeys is the list of keys supported by the driver. …\nvolumeBindingMode indicates how PersistentVolumeClaims …\nvolumeLifecycleModes defines what kind of volumes this CSI …\nCustomResourceColumnDefinition specifies a column for …\nCustomResourceConversion describes how to convert …\nCustomResourceDefinition represents a resource that should …\nCustomResourceDefinitionCondition contains details for the …\nCustomResourceDefinitionNames indicates the names to serve …\nCustomResourceDefinitionSpec describes how a user wants …\nCustomResourceDefinitionStatus indicates the state of the …\nCustomResourceDefinitionVersion describes a version for …\nCustomResourceSubresourceScale defines how to serve the …\nCustomResourceSubresourceStatus defines how to serve the …\nCustomResourceSubresources defines the status and scale …\nCustomResourceValidation is a list of validation methods …\nExternalDocumentation allows referencing an external …\nJSON represents any valid JSON value. These types are …\nJSONSchemaProps is a JSON-Schema following Specification …\nJSONSchemaPropsOrArray represents a value that can either …\nJSONSchemaPropsOrBool represents JSONSchemaProps or a …\nJSONSchemaPropsOrStringArray represents a JSONSchemaProps …\nServiceReference holds a reference to Service.legacy.k8s.io\nValidationRule describes a validation rule written in the …\nWebhookClientConfig contains the information to make a TLS …\nWebhookConversion describes how to call a conversion …\nacceptedNames are the names that are actually being used …\nadditionalPrinterColumns specifies additional columns …\ncaBundle is a PEM encoded CA bundle which will be used to …\ncategories is a list of grouped resources this custom …\nclientConfig is the instructions for how to call the …\nconditions indicate state for particular aspects of a …\nconversion defines conversion settings for the CRD.\nconversionReviewVersions is an ordered list of preferred …\ndefault is a default value for undefined object fields. …\ndeprecated indicates this version of the custom resource …\ndeprecationWarning overrides the default warning returned …\ndescription is a human readable description of this column.\nfieldPath represents the field path returned when the …\nformat is an optional OpenAPI type definition for this …\nformat is an OpenAPI v3 format string. Unknown formats are …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\ngroup is the API group of the defined custom resource. The …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\njsonPath is a simple JSON path (i.e. with array notation) …\nkind is the serialized kind of the resource. It is …\nlabelSelectorPath defines the JSON path inside of a custom …\nlastTransitionTime last time the condition transitioned …\nlistKind is the serialized kind of the list for this …\nmessage is a human-readable message indicating details …\nMessage represents the message displayed when validation …\nMessageExpression declares a CEL expression that evaluates …\nStandard object’s metadata More info: …\nname is a human readable name for the column.\nname is the version name, e.g. “v1”, “v2beta1”, …\nname is the name of the service. Required\nnames specify the resource and kind names for the custom …\nnamespace is the namespace of the service. Required\nopenAPIV3Schema is the OpenAPI v3 schema to use for …\npath is an optional URL path at which the webhook will be …\nplural is the plural name of the resource to serve. The …\nport is an optional service port at which the webhook will …\npreserveUnknownFields indicates that object fields which …\npriority is an integer defining the relative importance of …\nreason is a unique, one-word, CamelCase reason for the …\nreason provides a machine-readable validation failure …\nRule represents the expression which will be evaluated by …\nscale indicates the custom resource should serve a <code>/scale</code> …\nschema describes the schema used for validation, pruning, …\nscope indicates whether the defined custom resource is …\nserved is a flag enabling/disabling this version from …\nservice is a reference to the service for this webhook. …\nshortNames are short names for the resource, exposed in …\nsingular is the singular name of the resource. It must be …\nspec describes how the user wants the resources to appear\nspecReplicasPath defines the JSON path inside of a custom …\nstatus indicates the actual state of the …\nstatus is the status of the condition. Can be True, False, …\nstatus indicates the custom resource should serve a <code>/status</code>…\nstatusReplicasPath defines the JSON path inside of a …\nstorage indicates this version should be used when …\nstoredVersions lists all versions of CustomResources that …\nstrategy specifies how custom resources are converted …\nsubresources specify what subresources this version of the …\ntype is an OpenAPI type definition for this column. See …\ntype is the type of the condition. Types include …\nurl gives the location of the webhook, in standard URL …\nversions is the list of all API versions of the defined …\nwebhook describes how to call the conversion webhook. …\nx-kubernetes-embedded-resource defines that the value is …\nx-kubernetes-int-or-string specifies that this value is …\nx-kubernetes-list-map-keys annotates an array with the …\nx-kubernetes-list-type annotates an array to further …\nx-kubernetes-map-type annotates an object to further …\nx-kubernetes-preserve-unknown-fields stops the API server …\nx-kubernetes-validations describes a list of validation …\nQuantity is a fixed-point representation of a number. It …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAPIGroup contains the name, the supported versions, and …\nAPIGroupList is a list of APIGroup, to allow clients to …\nAPIResource specifies the name of a resource and whether …\nAPIResourceList is a list of APIResource, it is used to …\nAPIVersions lists the versions that are available, to …\nCondition contains details for one aspect of the current …\nDeleteOptions may be provided when deleting an API object.\nFieldsV1 stores a set of fields in a data structure like a …\nGroupVersion contains the “group/version” and “…\nA label selector is a label query over a set of resources. …\nA label selector requirement is a selector that contains …\nListMeta describes metadata that synthetic resources must …\nManagedFieldsEntry is a workflow-id, a FieldSet and the …\nMicroTime is version of Time with microsecond level …\nObjectMeta is metadata that all persisted resources must …\nOwnerReference contains enough information to let you …\nPatch is provided to give a concrete name and type to the …\nPreconditions must be fulfilled before an operation …\nServerAddressByClientCIDR helps the client to determine …\nStatus is a return value for calls that don’t return …\nStatusCause provides more information about an api.Status …\nStatusDetails is a set of additional properties that MAY …\nTime is a wrapper around time.Time which supports correct …\nEvent represents a single event to a watched resource.\nAnnotations is an unstructured key value map stored with a …\nAPIVersion defines the versioned schema of this …\nAPIVersion defines the version of this resource that this …\nAPI version of the referent.\nIf true, AND if the owner has the “foregroundDeletion” …\ncategories is a list of the grouped resources this …\nThe Causes array includes more details associated with the …\nThe CIDR with which clients can match their IP to figure …\nSuggested HTTP return code for this status, 0 if not set.\ncontinue may be set if the user set a limit on the number …\nIf true, this reference points to the managing controller.\nCreationTimestamp is a timestamp representing the server …\nNumber of seconds allowed for this object to gracefully …\nDeletionTimestamp is RFC 3339 date and time at which this …\nExtended data associated with the reason.  Each reason may …\nWhen present, indicates that modifications should not be …\nThe field of the resource that has caused this error, as …\nFieldsType is the discriminator for the different fields …\nFieldsV1 holds the first JSON version format as described …\nMust be empty before the object is deleted from the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerateName is an optional prefix, used by the server, to …\nA sequence number representing a specific generation of …\nThe duration in seconds before the object should be …\ngroup is the preferred group of the resource.  Empty …\nThe group attribute of the resource associated with the …\ngroupVersion is the group and version this APIResourceList …\ngroupVersion specifies the API group and version in the …\ngroups is a list of APIGroup.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nkey is the label key that the selector applies to.\nkind is the kind for the resource (e.g. ‘Foo’ is the …\nKind is a string value representing the REST resource this …\nKind of the referent. More info: …\nThe kind attribute of the resource associated with the …\nMap of string keys and values that can be used to organize …\nlastTransitionTime is the last time the condition …\nManagedFields maps workflow-id and version to the set of …\nManager is an identifier of the workflow managing these …\nmatchExpressions is a list of label selector requirements. …\nmatchLabels is a map of {key,value} pairs. A single …\nmessage is a human readable message indicating details …\nA human-readable description of the status of this …\nA human-readable description of the cause of the error.  …\nStandard list metadata. More info: …\nname is the name of the group.\nname is the plural name of the resource.\nName must be unique within a namespace. Is required when …\nName of the referent. More info: …\nThe name attribute of the resource associated with the …\nNamespace defines the space within which each name must be …\nnamespaced indicates if a resource is namespaced or not.\nobservedGeneration represents the .metadata.generation …\nOperation is the type of operation which lead to this …\noperator represents a key’s relationship to a set of …\nDeprecated: please use the PropagationPolicy, this field …\nList of objects depended by this object. If ALL objects in …\nMust be fulfilled before a deletion is carried out. If not …\npreferredVersion is the version preferred by the API …\nWhether and how garbage collection will be performed. …\nreason contains a programmatic identifier indicating the …\nA machine-readable description of why this operation is in …\nA machine-readable description of the cause of the error. …\nremainingItemCount is the number of subsequent items in …\nString that identifies the server’s internal version of …\nAn opaque value that represents the internal version of …\nSpecifies the target ResourceVersion\nresources contains the name of the resources and if they …\nIf specified, the time in seconds before the operation …\nDeprecated: selfLink is a legacy read-only field that is …\nDeprecated: selfLink is a legacy read-only field that is …\nAddress of this server, suitable for a client that matches …\na map of client CIDR to server address that is serving …\na map of client CIDR to server address that is serving …\nshortNames is a list of suggested short names of the …\nsingularName is the singular name of the resource.  This …\nstatus of the condition, one of True, False, Unknown.\nStatus of the operation. One of: “Success” or “…\nThe hash value of the storage version, the version this …\nSubresource is the name of the subresource used to update …\nTime is the timestamp of when the ManagedFields entry was …\ntype of condition in CamelCase or in …\nUID is the unique in time and space value for this object. …\nUID of the referent. More info: …\nSpecifies the target UID.\nUID of the resource. (when there is a single resource …\nvalues is an array of string values. If the operator is In …\nverbs is a list of supported kube verbs (this includes …\nversion is the preferred version of the resource.  Empty …\nversion specifies the version in the form of “version”…\nversions are the versions supported in this group.\nversions are the api versions that are available.\nRawExtension is used to hold extensions in external …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIntOrString is a type that can hold an int32 or a string.  …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInfo contains versioning information. how we’ll want to …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nAPIService represents a server for a particular …\nAPIServiceCondition describes the state of an APIService …\nAPIServiceSpec contains information for locating and …\nAPIServiceStatus contains derived information about an API …\nServiceReference holds a reference to Service.legacy.k8s.io\nCABundle is a PEM encoded CA bundle which will be used to …\nCurrent service state of apiService.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGroup is the API group name this server hosts\nGroupPriorityMininum is the priority this group should …\nInsecureSkipTLSVerify disables TLS certificate …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLast time the condition transitioned from one status to …\nHuman-readable message indicating details about last …\nStandard object’s metadata. More info: …\nName is the name of the service\nNamespace is the namespace of the service\nIf specified, the port on the service that hosting …\nUnique, one-word, CamelCase reason for the condition’s …\nService is a reference to the service for this API server. …\nSpec contains information for locating and communicating …\nStatus contains derived information about an API server\nStatus is the status of the condition. Can be True, False, …\nType is the type of the condition.\nVersion is the API version this server hosts.  For …\nVersionPriority controls the ordering of this API version …\nStrategies for merging <code>Vec</code>s.\nStrategies for merging <code>BTreeMap</code>s.\nThe whole list is treated as one scalar value, and will be …\nThe list is treated as a map.\nThe list is treated as a set.\nThe whole map is treated as one scalar value, and will be …\nEach value will be merged separately.")