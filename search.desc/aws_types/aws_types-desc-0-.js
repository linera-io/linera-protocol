searchState.loadedDescShard("aws_types", 0, "Cross-service types for the AWS SDK.\nThe name of the service used to sign this request\nNew-type for a configurable app name.\nMetadata type used by all service SDKs to provide …\nA macro that generates docs for selected fields of …\nNewtypes for endpoint-related parameters\nReturns the argument unchanged.\nCreates a <code>SigningName</code> from a static str.\nCalls <code>U::from(self)</code>.\nTypes for tracking the origin of config values.\nAbstractions for testing code that interacts with the …\nRegion type for determining the endpoint to send requests …\nAWS-specific request ID support\nAWS Shared Config\nCode for extracting service config from the user’s …\nApp name that can be configured with an AWS SDK client to …\nError for when an app name doesn’t meet character …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new app name.\nGoogle Android\nConstant build metadata for this crate.\nMetadata about the environment the SDK was compiled for.\nApple iOS\nLinux\nApple MacOS\nOperating system family that the SDK can be compiled for\nA different family of operating system\nMicrosoft Windows\nThe version number of the <code>aws-types</code> crate compiled with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the OS family this crate was compiled for.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe OS the SDK was compiled for.\nWhich version of Rust was used to compile the SDK.\nSetting to control the account ID-based routing behavior.\nError encountered when failing to parse a string into …\nA resolved endpoint does not include account ID.\nNewtype for <code>endpoint_url</code>\nThe endpoint should include account ID if available.\nThe endpoint must include account ID. If the account ID isn…\nNewtype for <code>use_dual_stack</code>\nNewtype for <code>use_fips</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA type for tracking the origin of config values.\nReturns the argument unchanged.\nSet with IMDS.\nCalls <code>U::from(self)</code>.\nReturn true if the origin was set programmatically i.e. on …\nSet on a service config struct.\nSet by a service-specific environment variable.\nService-specific, set in a profile file.\nSet on a shared config struct.\nSet by an environment variable.\nSet in a profile file.\nThe origin is unknown.\nEnvironment variable abstraction\nFile system abstraction\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate <code>Fs</code> from a map of <code>String</code> to <code>Vec&lt;u8&gt;</code>.\nCreate <code>Fs</code> from a map of <code>OsString</code> to <code>Vec&lt;u8&gt;</code>.\nCreate a fake process environment from a slice of tuples.\nCreate a fake process environment from a slice of tuples.\nCreate a test filesystem rooted in real files\nRetrieve a value for the given <code>k</code> and return <code>VarError</code> is …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRead the entire contents of a file\nCreate <code>Fs</code> representing a real file system.\nCreate a process environment that uses the real process …\nWrite a slice as the entire contents of a file.\nThe region to send requests to.\nThe region to use when signing requests\nGenerally, user code will not need to interact with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConst function that creates a new <code>Region</code> from a static str.\nCreates a <code>SigningRegion</code> from a static str.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>Region</code> from the given string.\nImplementers add a function to return an AWS request ID\nApplies a request ID to a generic error builder\nReturns the request ID, or <code>None</code> if the service could not …\nBuilder for AWS Shared Configuration\nDetermines when a checksum will be calculated for request …\nDetermines when checksum validation will be performed on …\nRetry configuration for requests.\nAWS Shared Configuration\nWrapper type for sharable <code>AsyncSleep</code>\nCredentials Provider wrapper that may be shared\nShared HTTP client for use across multiple clients and …\nTime source structure used inside SDK\nConfiguration for stalled stream protection.\nTrait with a <code>now()</code> function returning the current time\nTop-level configuration for timeouts\nCaulculate request checksums only when they are required.\nValidate response checksums only when they are required.\nCalculate request checksums when they are supported.\nValidate response checksums when they are supported.\nConfigured account ID endpoint mode\nControls the account ID-based routing behavior.\nCreates a default <code>RetryConfig</code> with <code>RetryMode::Adaptive</code> and …\nConfigured app name\nSets the name of the app that is using the client.\nConfigured auth scheme preference\nSet the auth scheme preference for an auth scheme resolver …\nBehavior version configured for this client\nSets the <code>BehaviorVersion</code> for the <code>SdkConfig</code>\nBuild a <code>SdkConfig</code> from this builder.\nConfig builder\nReturns a builder to create a <code>TimeoutConfig</code>.\nReturns this config’s connect timeout.\nConfigured credentials provider\nSet the credentials provider for the builder\nWhen true, request compression is disabled.\nWhen <code>true</code>, disable request compression. Defaults to <code>false</code>.\nCreates a <code>RetryConfig</code> that has retries disabled.\nReturns a timeout config with all timeouts disabled.\nCreate a new config that disables stalled stream …\nTrue if stalled stream protection is enabled for download …\nCreate a new config that enables stalled stream protection …\nConfigured endpoint URL\nSet the endpoint URL to use when making requests.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the origin of a setting.\nReturn the grace period for stalled stream protection.\nReturns true if retry is enabled with this config\nReturns true if any of the possible timeouts are set.\nConfigured HTTP client\nSets the HTTP client to use when making requests.\nConfigured identity cache\nSet the identity cache for caching credentials and SSO …\nReturns the backoff multiplier duration.\nSet the origin of a setting.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this <code>SdkConfig</code> back to a builder to enable …\nConverts this <code>TimeoutConfig</code> into a builder.\nReturn whether stalled stream protection is enabled for …\nReturns the max attempts.\nReturns the max backoff duration.\nReturns the retry mode.\nCreate a new SharedCredentials provider from …\nCreate a new <code>SharedAsyncSleep</code> from <code>AsyncSleep</code>\nCreates a new shared time source\nCreates a new <code>SharedHttpClient</code>\nReturns the current time\nReturns the current time\nReturns this config’s operation attempt timeout.\nReturns this config’s operation timeout.\nReturns this config’s read timeout.\nReturns the <code>ReconnectMode</code>\nConfigured region\nSet the region for the builder\nConfigured checksum request behavior.\nSet the checksum calculation strategy to use when making …\nConfigured minimum request compression size.\nThe minimum size of request that should be compressed. …\nConfigured checksum response behavior.\nSet the checksum calculation strategy to use for responses.\nConfigured retry config\nSet the retry_config for the builder\nReturn an immutable reference to the service config …\nSets the service config provider for the <code>SdkConfig</code>.\nControls the account ID-based routing behavior.\nSets the name of the app that is using the client.\nSet the auth scheme preference for an auth scheme resolver …\nSets the <code>BehaviorVersion</code> for the <code>SdkConfig</code>\nSet the credentials provider for the builder\nWhen <code>true</code>, disable request compression. Defaults to <code>false</code>.\nSet the endpoint URL to use when making requests.\nSets the HTTP client to use when making requests.\nSet the identity cache for caching credentials and SSO …\nSet the region for the builder\nSet the checksum calculation strategy to use when making …\nThe minimum size of request that should be compressed. …\nSet the checksum calculation strategy to use for responses.\nSet the retry_config for the builder\nSets the service config provider for the <code>SdkConfig</code>.\nSet the sleep implementation for the builder. The sleep …\nSet the <code>StalledStreamProtectionConfig</code> to configure …\nThe time source use to use for this client.\nSet the <code>TimeoutConfig</code> for the builder\nSet the bearer auth token provider for the builder\nWhen true, send this request to the dual-stack endpoint.\nWhen true, send this request to the FIPS-compliant …\nConfigured sleep implementation\nSet the sleep implementation for the builder.\nConfigured stalled stream protection\nSet the <code>StalledStreamProtectionConfig</code> to configure …\nCreates a default <code>RetryConfig</code> with <code>RetryMode::Standard</code> and …\nFill any unfilled values in <code>self</code> from <code>other</code>.\nConfigured time source\nThe time source use to use for this client.\nConfigured timeout config\nSet the <code>TimeoutConfig</code> for the builder\nConvert this <code>SdkConfig</code> into a <code>Builder</code> by cloning it first\nReturns a builder equivalent of this <code>TimeoutConfig</code>.\nConfigured bearer auth token provider\nSet the bearer auth token provider for the builder\nUnified docstrings to keep crates in sync. Not intended …\nTrue if stalled stream protection is enabled for upload …\nUse dual-stack endpoint\nWhen true, send this request to the dual-stack endpoint.\nUse FIPS endpoints\nWhen true, send this request to the FIPS-compliant …\nReturns <code>true</code> if retry strategies should use a static …\nSet the multiplier used when calculating backoff times as …\nSet the maximum number of times a request should be tried, …\nSet the maximum backoff time.\nSet the <code>ReconnectMode</code> for the retry strategy\nSet this config’s retry mode.\nHint to the retry strategy whether to use a static …\nImplementers of this trait can provide service config …\nA struct used with the <code>LoadServiceConfig</code> trait to extract …\nBuilder for <code>ServiceConfigKey</code>.\nCreate a new <code>ServiceConfigKey</code> builder struct.\nGet the environment key.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGiven a <code>ServiceConfigKey</code>, return the value associated with …\nGet the profile key.\nGet the service ID.\nBuilder for <code>ServiceConfigKey</code>.\nError type for <code>ServiceConfigKey::builder</code>\nBuild the <code>ServiceConfigKey</code>.\nSet the environment key.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new “missing env key” error\nCreate a new “missing profile key” error\nCreate a new “missing service ID” error\nSet the profile key.\nSet the service ID.")