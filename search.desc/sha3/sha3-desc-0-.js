searchState.loadedDescShard("sha3", 0, "An implementation of the SHA-3 cryptographic hash …\nCSHAKE128 hasher state.\nCore CSHAKE128 hasher state.\nCSHAKE128 reader state.\nCore CSHAKE128 reader state.\nCSHAKE256 hasher state.\nCore CSHAKE256 hasher state.\nCSHAKE256 reader state.\nCore CSHAKE256 reader state.\nConvenience wrapper trait covering functionality of …\nKeccak-224 hasher state.\nCore Keccak-224 hasher state.\nKeccak-256 hasher state.\nCore Keccak-256 hasher state.\nSHA-3 CryptoNight variant hasher state.\nCore SHA-3 CryptoNight variant hasher state.\nKeccak-384 hasher state.\nCore Keccak-384 hasher state.\nKeccak-512 hasher state.\nCore Keccak-512 hasher state.\nSHA-3-224 hasher state.\nCore SHA-3-224 hasher state.\nSHA-3-256 hasher state.\nCore SHA-3-256 hasher state.\nSHA-3-384 hasher state.\nCore SHA-3-384 hasher state.\nSHA-3-512 hasher state.\nCore SHA-3-512 hasher state.\nSHAKE128 hasher state.\nCore SHAKE128 hasher state.\nSHAKE128 reader state.\nCore SHAKE128 reader state.\nSHAKE256 hasher state.\nCore SHAKE256 hasher state.\nSHAKE256 reader state.\nCore SHAKE256 reader state.\nTurboSHAKE128 hasher state.\nCore TurboSHAKE128 hasher state.\nTurboSHAKE128 reader state.\nCore TurboSHAKE128 reader state.\nTurboSHAKE256 hasher state.\nCore TurboSHAKE256 hasher state.\nTurboSHAKE256 reader state.\nCore TurboSHAKE256 reader state.\nProcess input data in a chained manner.\nCompute hash of <code>data</code>.\nRetrieve result and consume hasher instance.\nWrite result into provided array and consume the hasher …\nWrite result into provided array and reset the hasher …\nRetrieve result and reset hasher instance.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate new hasher instance.\nCreates a new TurboSHAKE instance with the given domain …\nCreates a new TurboSHAKE instance with the given domain …\nCreates a new CSHAKE instance with the given customization.\nCreates a new CSHAKE instance with the given customization.\nCreates a new CSHAKE instance with the given function name …\nCreates a new CSHAKE instance with the given function name …\nCreate new hasher instance which has processed the …\nGet output size of the hasher\nReset hasher instance to its initial state.\nProcess data, updating the internal state.")