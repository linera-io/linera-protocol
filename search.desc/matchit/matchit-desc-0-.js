searchState.loadedDescShard("matchit", 0, "A high performance, zero-copy URL router.\nAttempted to insert a path that conflicts with an existing …\nRepresents errors that can occur when inserting a new …\nCatch-all parameters are only allowed at the end of a path.\nParameters must be registered with a valid name and …\nOnly one parameter per route segment is allowed.\nA successful match consisting of the registered value and …\nA failed match attempt.\nNo matching route was found.\nA list of parameters returned by a route match.\nAn iterator over the keys and values of a route’s …\nA zero-copy URL router.\nTries to find a value in the router matching the given …\nTries to find a value in the router matching the given …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the value of the first parameter registered under …\nInsert a route into the router.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if there are no parameters in the list.\nReturns an iterator over the parameters in the list.\nReturns the number of parameters.\nConstruct a new router.\nThe route parameters. See parameters for more details.\nRemove a given route from the router.\nThe value stored under the matched node.\nThe existing route that the insertion is conflicting with.")