searchState.loadedDescShard("memfd", 0, "A pure-Rust library to work with Linux memfd and seals.\nCannot add new seals to the memfd\nCannot create the memfd\nEnumeration of errors possible in this library\nSeal that can be applied to a <code>Memfd</code>.\nCannot read the seals of a memfd\n16GB hugetlb page.\n16MB hugetlb page.\n1GB hugetlb page.\n1MB hugetlb page.\n256MB hugetlb page.\n2GB hugetlb page.\n2MB hugetlb page.\n64KB hugetlb page.\n64KB hugetlb page.\n8MB hugetlb page.\nPage size for a hugetlb anonymous file.\nAn anonymous volatile file, with sealing capabilities.\nA <code>Memfd</code> builder, providing advanced options and flags for …\nLike <code>F_SEAL_WRITE</code>, but may still be written to through …\nFile cannot be grown in size.\nFile sealing cannot be further manipulated.\nFile cannot be reduced in size.\nFile cannot be written.\nAn <code>HashSet</code> specialized on <code>FileSeal</code>.\nAdd a seal to the existing set of seals.\nAdd some seals to the existing set of seals.\nWhether to allow adding seals to the created <code>Memfd</code>.\nReturn a reference to the backing <code>File</code>.\nWhether to set the <code>FD_CLOEXEC</code> flag on the created <code>Memfd</code>.\nCreate a <code>Memfd</code> according to configuration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert a raw file-descriptor to a <code>Memfd</code>.\nOptional hugetlb support and page size for the created …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert <code>Memfd</code> to the backing <code>File</code>.\nDefault set of options for <code>Memfd</code> creation.\nObtain the current set of seals for the <code>Memfd</code>.\nTry to convert an object that owns a file descriptor into …\nTry to convert a <code>File</code> object into a <code>Memfd</code>.")