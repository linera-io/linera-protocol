searchState.loadedDescShard("cranelift_wasm", 1, "Gets the type of a global at the given global index.\nGets the type of a global at the given global index.\nGets the count of imported and defined globals.\nReturns the number of globals defined so far.\nGet the id of the validator that these types are …\nGet the id of the validator that these types are …\nUniversally quantified resources required to be provided …\nThe imports of the module type.\nThe imports of the component type.\nIf <code>any_changed</code> is true, push <code>ty</code>, update <code>map</code> to point <code>id</code> to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDetermines if component entity type <code>a</code> is a subtype of <code>b</code>.\nThe kind of module instance type.\nLooks up an import by its module and name.\nApply <code>map</code> to the keys of <code>tmp</code>, setting <code>*any_changed = true</code> …\nGets the type of a memory at the given memory index.\nGets the type of a memory at the given memory index.\nGets the count of imported and defined memories.\nReturns the number of memories defined so far.\nGets the type of a module at the given module index.\nGets the type of a module at the given module index.\nGets the count of imported, exported, or aliased modules.\nReturns the number of core wasm modules defined so far.\nTests whether <code>a</code> is a subtype of <code>b</code>.\nCreate a new instance with the specified type lists\nThe building block for subtyping checks when components are\nThe function parameters.\nAttempts to lookup the type id that <code>ty</code> is an alias of.\nPeel off one layer of aliasing from this type and return …\nPeel off one layer of aliasing from this type and return …\nAttempts to lookup the type id that <code>ty</code> is an alias of.\nPushes a new anonymous type within this object, returning …\nGet the types within a rec group.\nGet the id of the rec group that the given type id was …\nThe name of the variant case refined by this one.\nRecursively search for any resource types reachable from <code>id</code>…\nRecursively search for any resource types reachable from <code>id</code>…\nSame as <code>remap_type_id</code>, but works with <code>ComponentEntityType</code>.\nRecursively search for any resource types reachable from <code>id</code>…\nRecursively search for any resource types reachable from <code>id</code>…\nRecursively search for any resource types reachable from <code>id</code>…\nIf <code>map</code> indicates <code>id</code> should be remapped, update it and …\nSame as <code>remap_type_id</code>, but works with <code>ComponentValType</code>.\nClear the type cache while leaving the resource mappings …\nGet the underlying resource.\nThe function’s results.\nGet the super type of the given type id, if any.\nSwap the type lists\nGets the type of a table at the given table index.\nGets the type of a table at the given table index.\nGets the count of imported and defined tables.\nReturns the number of tables defined so far.\nGets the type of a tag at the given tag index.\nGets the type of a tag at the given tag index.\nGets the count of imported and defined tags.\nReturns the number of tags defined so far.\nThe variant case type.\nGets the count of core types.\nThe types of the tuple.\nUnwrap a <code>AliasableResourceId</code> or panic.\nUnwrap a <code>ComponentTypeId</code> or panic.\nUnwrap a <code>ComponentAnyTypeId</code> or panic.\nUnwrap a <code>ComponentCoreModuleTypeId</code> or panic.\nUnwrap a <code>ComponentCoreTypeId</code> or panic.\nUnwrap a <code>ComponentDefinedTypeId</code> or panic.\nUnwrap a <code>ComponentFuncTypeId</code> or panic.\nUnwrap a <code>ComponentInstanceTypeId</code> or panic.\nUnwrap a <code>ComponentTypeId</code> or panic.\nUnwrap a <code>CoreTypeId</code> or panic.\nUnwrap a <code>ComponentDefinedTypeId</code> or panic.\nGet the underlying <code>FuncType</code> within this <code>SubType</code> or panic.\nUnwrap a <code>ComponentFuncTypeId</code> or panic.\nUnwrap a <code>ComponentInstanceTypeId</code> or panic.\nGet the underlying <code>ModuleType</code> or panic.\nUnwrap a <code>ComponentCoreModuleTypeId</code> or panic.\nUnwrap a <code>AliasableResourceId</code> or panic.\nGet the underlying <code>SubType</code> or panic.\nUnwrap a <code>CoreTypeId</code> or panic.\nGets the type of a value at the given value index.\nGets the type of a value at the given value index.\nGets the count of imported, exported, or aliased values.\nCreate a new instance with the specified resource ID and …\nThe <code>error</code> type.\nThe <code>ok</code> type.\nThis is the identifier of the type that was created when …\nThis is the identifier of the type that was referenced …")