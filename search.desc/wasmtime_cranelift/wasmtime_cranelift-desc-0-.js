searchState.loadedDescShard("wasmtime_cranelift", 0, "Support for compiling with Cranelift.\nA custom code with <code>TrapCode::User</code> which is used by …\nA custom code with <code>TrapCode::User</code> corresponding to being …\nCompiled function: machine code body, jump table offsets, …\nThe metadata for the compiled function.\nMetadata to translate from binary offsets back to the …\nA helper structure used to assemble the final text section …\nNamespace for builtin function trampolines. The index is …\nNamespace corresponding to wasm functions, the index is …\nA record of a relocation to perform.\nThe addend to add to the relocation value.\nGet the function’s address map from the metadata.\nThe function address map to translate from binary back to …\nThe alignment for the compiled function.\nAppends the <code>func</code> specified named <code>name</code> to this object.\nAppends the specified amount of bytes of padding into the …\nGenerated function body length.\nGenerated function body offset if applicable, otherwise 0.\nThe machine code buffer for this function.\nCFA-based unwind information for DWARF debugging support.\nConverts cranelift_codegen settings to the …\nFunction’s end offset in the source file, specified in …\nEnd source location.\nIndicates that the text section has been written …\nForces “veneers” to be used for inter-function calls …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAn array of data for the instructions in this function, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts machine traps to trap information.\nGet a reference to the compiled function metadata.\nCreates a new builder for the text section of an …\nCreates a CompiledFunction from a …\nThe offset where to apply the relocation.\nThe relocation code.\nRelocation target.\nReturns an iterator to the function’s relocation …\nCreate and return the compiled function address map from …\nSet the CFA-based unwind info in the function’s metadata.\nSet the sized stack slots.\nSet the unwind info in the function’s metadata.\nSet the value labels ranges in the function’s metadata.\nAllocated stack slots.\nFunction’s initial offset in the source file, specified …\nStart source location.\nReturns an iterator to the function’s trap information.\nGet a reference to the unwind information from the function…\nThe unwind information.\nMapping of value labels and their locations.\nA helper to build an Isa for a compiler implementation. …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA callback to lookup a new ISA builder for a target.\nCreate a new ISA builder with the given lookup function.")