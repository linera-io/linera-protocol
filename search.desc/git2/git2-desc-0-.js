searchState.loadedDescShard("git2", 0, "libgit2 bindings for Rust\nControl whether one-level refname are accepted (i.e., …\nThe given merge input is a fast-forward from HEAD and no …\nNo merge is possible.\nA “normal” merge; both HEAD and the given merge input …\nThe HEAD of the current repository is “unborn” and …\nAll given merge inputs are reachable from HEAD, meaning the\nCompletely stop the traversal.\nOld has no LF at end, new does\nEntry does not exist in old version\nAdding objects to the pack\nAllow redirects at any stage in the fetch or push.\nNever dirty\nAsk for all the tags\nMore than one object matches\nThe stored index is being analyzed\nThe modified files are being analyzed\nThe untracked and ignored files are being analyzed\nA structure to represent an annotated commit, the input to …\nAny kind of git object\nApplication specific configuration file\nPatch/merge has already been applied\nPatch application failed\nPossible application locations for git_apply see …\nOptions to specify when applying a diff\nAll possible states of an attribute.\nAuthentication error\nAsk the server for tags pointing to objects we’re …\nAutomatic tag following options.\nForce opening as bare repository, and defer loading its …\nFile(s) treated as binary data.\nOperation not allowed on bare repository\nFor “Binary files x and y differ”\nOpaque structure to hold blame results.\nStructure that represents a blame hunk.\nAn iterator over the hunks in a blame.\nBlame options\nA structure to represent a git blob\nAn object which corresponds to a git blob\nBlob\nBlob executable\nGroup writable blob. Obsolete mode kept for compatibility …\nA structure to represent a git writestream for blobs\nApply the patch to both the working directory and the index\nA structure to represent a git branch\nAn enumeration for the possible types of branches\nAn iterator over the branches inside of a repository.\nA structure to wrap an intermediate buffer used by libgit2.\nOutput buffer too short to hold data\nThe attribute is set to a string that might not be valid …\nNotification about a conflict.\nSearch across filesystem boundaries.\nError from a user callback\nServer certificate is invalid\nThe return value for the <code>RemoteCallbacks::certificate_check</code>…\nIndicates that the certificate should be accepted.\nIndicates that the certificate callback is neither …\nCheckout failure\nThe default; when a submodule is updated, checkout the new …\nThe modified files are being written to disk\nTypes of notifications emitted from checkouts.\nThe untracked files are being written to disk\nError cherry-picking commit\nOptions to specify when cherry picking\nA structure to represent a git commit\nAn object which corresponds to a git commit\nCommit\nA structure representing a git configuration key/value …\nBad configuration\nAn iterator over the <code>ConfigEntry</code> values of a <code>Config</code> …\nA struct representing a certain entry owned by a <code>Config</code> …\nAn enumeration of the possible priority levels of a config …\nCheckout conflicts prevented operation\nEntry in the index is conflicted\nThese values will be sent to <code>git_diff_line_cb</code> along with …\nBoth files have no LF at end\nEntry was copied from another old entry\nA structure to represent git credentials in libgit2.\nManagement of the gitcredentials(7) interface.\nTypes of credentials that can be requested by a credential …\nCallback used to acquire credentials for when a remote is …\nUse the default pathspec matching configuration.\nThe default comment character for <code>message_prettify</code> (‘#’…\nNotification about a dirty file.\nDetailed data that allows for debugging\nNot used except as static initializer when we don’t want …\nOld has LF at end, new does not\nEntry does not exist in new version\nWhat type of change is described by a <code>DiffDelta</code>?\nThe binary data is the delta from one side to the other\nDeltafication of the pack\nAn iterator over the diffs in a delta\nThe result of a <code>describe</code> operation on either an <code>Describe</code> …\nCan’t describe object\nOptions which can be used to customize how a description …\nOptions which indicate how a <code>Describe</code> is created.\nThe diff object that contains all individual file deltas.\nStructure describing the binary contents of a diff.\nThe contents of one of the files in a binary diff.\nWhen producing a binary diff, the binary data returned …\nDescription of changes to one entry.\nDescription of one side of a delta.\nControl behavior of rename and copy detection\nPossible output formats for diff data\nStructure describing a hunk of a diff.\nStructure describing a line (or data span) of a diff.\nLine origin constants.\nStructure describing options about how the diff should be …\nControl behavior of formatting emails\nStructure describing a hunk of a diff.\nFormatting options for diff stats\nA reference which points at an object id.\nAn enumeration of the possible directions for a remote.\nOperation was not valid for a directory\nOnly dirty if HEAD has moved\nThe stash was applied successfully\nFile exists at this side of the delta.\nSet when the <code>extended_flags</code> field is valid.\nThe given commit is to be cherry-picked, but the client …\nA structure to represent patch in mbox format for sending …\nOptions for controlling the formatting of the generated …\nUnexpected EOF\nA structure to represent errors coming out of libgit2.\nErrors that do not impact the program’s execution\nAn enumeration of possible categories of things that can …\nAn enumeration of possible errors that can happen when …\nNo commit will be cherry-picked. The client should run the …\nObject exists preventing operation\nMeans that the list returned does not need to keep the …\nThere is a <code>merge.ff=only</code> configuration setting, suggesting …\nCheck the working directory, then the index.\nMeans that the list returned should track which patterns …\nRespect environment variables like <code>$GIT_DIR</code>.\nEquivalent of <code>--stat</code> in git\nThe attribute is unset (set to false).\nSevere errors that may impact the program’s execution\nData will be fetched (read) from this remote.\nInvalid FETCH_HEAD\nOptions which can be specified to various fetch operations.\nConfiguration for how pruning is done on a fetch\nMerge file favor options for <code>MergeOptions</code> instruct the …\nThe following values will only be sent to a …\nValid modes for index and tree entries.\nFilesystem-related error\nError manipulating filters\nThe given commit is to be squashed into the previous …\nGeneric error\nUser-specific configuration, e.g. ~/.gitconfig\nMixed plus changes in the working tree are discarded.\nHashsum mismatch in object\nHighest level available\nHTTP error\nNotification about an ignored file.\nForce matching to ignore case, otherwise matching will use …\nAll ignored files are also stashed and then cleaned up from\nExtended header information such as creations, renames and …\nAll untracked files are also stashed and then cleaned up …\nCheck the index only.\nCheck the index, then the working directory.\nAn “intent to add” entry from “git add -N”\nEntry is ignored item in workdir\nA structure to represent a git index\nInvalid index data\nApply the patch to the index\nOnly gives status based on HEAD to index comparison, not …\nFlags for APIs that add files matching pathspec\nThe default, this roughly matches <code>git status --porcelain</code> …\nA structure to represent the information returned when a …\nAn iterator over the conflicting entries in an index\nUnsaved changes in the index would be overwritten\nAn iterator over the entries in an index\nA structure to represent an entry or a file inside of an …\nFlags for the <code>extended_flags</code> field of an IndexEntry.\nFlags for the <code>flags</code> field of an IndexEntry.\nA callback function to filter index matches.\nTime structure used in a git index entry.\nA stream to write and index a packfile\nHashing or packing error\nCallback to be invoked while indexing is in progress.\nInformational messages about program execution\nAllow off-site redirects only upon the initial request. …\nA class of types that can be converted to C strings.\nInvalid operation or input\nInvalid input\nName/ref spec was not in a valid format\nAll changes in the index and working directory are left …\nAll changes already added to the index are left intact in …\nLink\nThe binary data is the literal contents of the file\nLoading the stashed data from the object database\nA local branch not on a remote.\nRepository specific config, e.g. $PWD/.git/config\nLock file prevented operation\nWorktree is locked with the optional message\nThe spec used the <code>...</code> operator, which invokes special …\nA structure to represent a repository’s .mailmap file.\nA structure to represent a mempack backend for the object …\nMerge failure\nUpdate by merging the commit in the superproject into the …\nThe results of <code>merge_analysis</code> indicating the merge …\nA merge conflict exists and cannot continue\nOptions to specify when merging.\nThe user’s stated preference for merges.\nCollection of unencoded (bytes) trailers.\nBorrowed iterator over the raw (bytes) trailers.\nCollection of UTF-8-encoded trailers.\nBorrowed iterator over the UTF-8-encoded trailers.\nSoft plus reset the index to the commit.\nReference value does not match expected\nEntry content changed between old and new\nSort the repository contents in no particular ordering.\nNo configuration was found that suggests a preferred …\nDon’t generate any stats\nNo particular normalization.\nFile(s) treated as text data.\nDon’t try appending <code>/.git</code> to the specified repository …\nThere is a <code>merge.ff=false</code> configuration setting, …\nDisable glob patterns and just use simple string …\nMeans that match functions return the error code <code>NotFound</code> …\nDon’t call <code>git_odb_refresh</code> if the lookup fails. Useful …\nOnly open the specified path; don’t walk upward …\nDo not use the system gitattributes file.\nEquivalent of <code>--numstat</code> in git\nlike git diff –name-only\nlike git diff –name-status\nNetwork error\nOut of memory or insufficient allocated space\nDo not follow any off-site redirects at any stage of the …\nUncategorized\nThere is no binary delta\nNo tracing will be performed.\nAny change or untracked file is considered dirty\nDo not update this submodule even when the commit in the …\nDon’t ask for any tags beyond the refspecs\nNone\nWhen a region of a file is changed in both branches, a …\nReference was not fast-forwardable\nRequested object could not be found\nA structure representing a note in git.\nAn iterator over all of the notes within a repository.\nA structure to represent a git object\nError creating or obtaining an object\nAn enumeration all possible kinds objects may have.\nA structure to represent a git object database\nBad object\nFlags controlling the behavior of ODB lookup operations\nAn object from the Object Database.\nA stream to write a packfile to the ODB\nA structure to represent a git ODB rstream\nA structure to represent a git ODB wstream\nForce pruning off\nUnique identity of any object (commit, tree, blob, tag).\nContinue with the traversal as normal.\nForce pruning on\nSyscall or standard system library error\nWhen a region of a file is changed in both branches, the …\nThe object is not owned by the current user\nA builder for creating a packfile\nStages that are reported by the <code>PackBuilder</code> progress …\nAn iterator over the parent commits of a commit.\nA structure representing the text changes in a single diff …\nInvalid patch data\nfull git diff\njust the headers of the patch\ngit diff as used by git patch-id\nStructure representing a compiled pathspec used for …\nIterator over the matching diff deltas.\nIterator over the matched paths in a pathspec.\nIterator over the failed list of pathspec items that did …\n…\nList of filenames matching a pathspec.\nThe requested peel operation is not possible\nThe given commit is to be cherry-picked. The client should …\nRuns the traversal in post-order.\nRuns the traversal in pre-order.\nSystem-wide on Windows, for compatibility with portable git\nStruct representing the progress by an in-flight transfer.\nOptions which can be specified to various fetch operations.\nData will be pushed (written) to this remote.\nOptions to control the behavior of a git push.\nRepresents an update which will be performed on the remote …\nThe spec targeted a range of commits\nInterpret the provided name as a reference pattern for a …\nInterpret the name as part of a refspec in shorthand form …\nTry to reinstate not only the working tree’s changes, …\nReport unchanged tips in the update_tips callback.\nIterate through the repository contents in reverse order.\nlike git diff –raw\nRepresentation of a rebase\nError during rebase\nUpdate by rebasing the current checked out branch onto the …\nA rebase operation\nA rebase operation\nRebase options\nA structure to represent a git reference.\nError resolving or manipulating a reference\nOptions for <code>Reference::normalize_name</code>.\nAn iterator over the names of references in a repository.\nAn enumeration of all possible kinds of references.\nAn iterator over the references in a repository.\nA reference log of a git repository.\nAn entry inside the reflog of a repository\nAn iterator over the entries inside of a reflog.\nA structure to represent a git refspec.\nAn iterator over the refspecs that a remote contains.\nRegex failure\nA structure representing a remote of a git repository.\nA branch for a remote.\nA structure to contain the callbacks which are invoked …\nHolds callbacks for a connection to a <code>Remote</code>. Disconnects …\nDescription of a reference advertised by a remote server, …\nRemote redirection settings; whether redirects to another …\nHow to handle reference updates.\nEntry was renamed between old and new\nAn owned git repository, representing all state associated …\nBad repository state\nMode options for RepositoryInitOptions\nOptions which can be used to configure how a repository is …\nFlags for <code>Repository::open_ext</code>\nA listing of the possible states that a repository can be …\nAn enumeration of the operations that can be performed for …\nError reverting commit\nOptions to specify when reverting\nFlags for the return value of <code>Repository::revparse</code>\nA revspec represents a range of revisions within a …\nA revwalk allows traversal of the commit graph defined by …\nThe given commit is to be cherry-picked, but the client …\nUse <code>--shared=all</code> behavior, adding world readability.\nUse <code>--shared=group</code> behavior, chmod’ing the new repo to be\nUse permissions configured by umask - the default\nEquivalent of <code>--shortstat</code> in git\nThe spec targeted a single object\nSkip the associated worktree file, for sparse checkouts\nHash library error or SHA-1 collision\nA Signature is used to indicate authorship of various …\nSkip the current node (in pre-order mode).\nMove the head to the given commit.\nOrderings that may be specified for Revwalk iteration.\nThe given commit is to be squashed into the previous …\nSSH failure\nError from SSL\nError manipulating a stash\nStash application options structure\nStash application progress notification function.\nThis is a callback function you can provide to iterate …\nStash application options structure\nStatus flags for a single file\nA structure representing an entry in the <code>Statuses</code> …\nAn iterator over the statuses in a <code>Statuses</code> instance.\nOptions that can be provided to <code>repo.statuses()</code> to control …\nEnumeration of possible methods of what can be shown …\nA container for a list of status information about a …\nThe attribute is set to a valid UTF-8 string.\nA structure to represent a git submodule\nError involving submodules\nSubmodule ignore values\nReturn codes for submodule status.\nSubmodule update values\nOptions to update a submodule.\nA reference which points at another reference.\nSystem-wide configuration file, e.g. /etc/gitconfig\nSort the repository contents by commit time.\nSort the repository contents in topological order …\nA structure to represent a git tag\nError manipulating a tag\nAn object which corresponds to a git tag\nWhen a region of a file is changed in both branches, the …\nThreading error\nTime in a signature\nTimeout\nExceptionally detailed debugging data\nAvailable tracing levels.  When tracing is set to a …\nA structure representing a transactional update of a …\nCallback for receiving messages delivered by the transport.\nA structure to represent a git tree\nInvalid value in tree\nAn object which corresponds to a git tree\nTree\nConstructor for in-memory trees (low-level)\nA structure representing an entry inside of a tree. An …\nAn iterator over the entries in a tree.\nA binary indicator of whether a tree walk should be …\nPossible return codes for tree walking callback functions.\nThe attribute is set to true.\nType of entry changed between old and new\nNotification about an untracked file.\nNotification about an updated file.\nWrite the fetch results to FETCH_HEAD.\nForce case sensitive matches, otherwise match will use the …\nHEAD refers to branch with no commits\nUncommitted changes in index prevented operation\nWhen a region of a file is changed in both branches, the …\nWorktree is Unlocked\nMerge in progress prevented operation\nNo changes\nEntry is unreadable\nUnreadable\nThe attribute is not specified.\nUse the submodule’s configuration\nUse the setting from the remote’s configuration\nUse the setting from the configuration\nEntry is untracked item in workdir\nOnly dirty if tracked files have changed\nCallback for whenever a reference is updated locally.\nUser-generated error\n“Assume valid” flag\n<code>id</code> value is known correct.\nVersion information about libgit2 and the capabilities it …\nWarnings that suggest abnormal data\nApply the patch to the workdir\nOnly gives status based on index to working directory …\nAn owned git worktree\nError involving worktrees\nWorktree specific configuration file, e.g. …\nOptions which can be used to configure how a worktree is …\nLock Status of a worktree\nOptions to configure how worktree pruning is performed\nXDG-compatible configuration file, e.g. ~…\nZLib failure\nSets the size of the abbreviated commit id to use.\nAborts a rebase that is currently in progress, resetting …\nAdd or update an index entry from an in-memory struct\nAdd or update index entries matching files in the working …\nAdds an alternate disk backend to the object database.\nAdds a new entry to this in-memory mailmap object.\nAdd an on-disk config file instance to an existing config\nResolve the setup of a new git submodule.\nAdd or update an index entry from a buffer in memory\nAdd ignore rules for a repository.\nCreate a new mempack backend, and add it to this odb with …\nAdd or update an index entry from a file on disk\nAdd current submodule HEAD commit to index of superproject.\nTurn on all finding features.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nAllow or disallow fetching.\nReturns the state of an attribute just like …\nFlag indicating whether numbers included in the subject …\nSets whether or not the long format is used even when a …\nAmend this existing commit with all non-<code>None</code> values\nThe ancestor index entry of the two conflicting index …\nCreates a git_annotated_commit from FETCH_HEAD.\nAdd a new entry to the in-memory reflog.\nApply a Diff to the given repo, making changes directly in …\nApply a Diff to the provided tree, and return the …\nAttempt to view this object as a blob.\nView this OID as a byte-slice 20 bytes in length.\nAttempt to view this object as a commit.\nCasts this Blob to be usable as an <code>Object</code>\nCasts this Commit to be usable as an <code>Object</code>\nCasts this Tag to be usable as an <code>Object</code>\nCasts this Tree to be usable as an <code>Object</code>\nReturns a byte slice with stored e-mail patch in. <code>Email</code> …\nAttempt to view this buffer as a string slice.\nAttempt to view this object as a tag.\nAttempt to view this object as a tree.\nGet the author of this commit.\nGet the note author\nGet the author of this commit, using the mailmap to map …\nTry to auto-detect the proxy from the git configuration.\nCreate a bare repository with no working directory.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGet blame data for a file that has been modified in memory.\nGet the blame for a single file.\nWrite an in-memory buffer to the ODB as a blob.\nRead a file from the filesystem and write its content to …\nCreate a stream to write blob\nGet the long “body” of the git commit message.\nGet the long “body” of the git commit message.\nCreate a new branch pointing at a target commit\nGet the submodule’s branch.\nGet the branch for the submodule.\nCreate a new branch pointing at a target commit\nFind the remote name of a remote-tracking branch\nRetrieves the name of the reference supporting the remote …\nRetrieve the name of the upstream remote of a local branch.\nCreate an iterator which loops over the requested branches.\nSimilarity to split modify into delete/add pair (default …\nActually split large rewrites into delete/add pairs\nDo not break rewrites unless they contribute to a rename.\nBuilder-pattern objects for configuration various git …\nReset all flags back to their unset state, indicating that …\nGet the refspec’s string as a byte array\nCertificate types which are passed to <code>CertificateCheck</code> in …\nIf certificate verification fails, then this callback will …\nDon’t actually make changes, just test that the patch …\nSet checkout options.\nSet the checkout builder\nSet the checkout builder\nIf enabled, this will checkout the existing branch …\nUpdates files in the index and the working tree to match …\nUpdates files in the working tree to match the content of …\nOptions to control how files are written during …\nOptions to use when writing files to the working directory\nUpdates files in the index and working tree to match the …\nPerform a cherrypick\nCreate an index of uncommitted changes, representing the …\nReturn the error class associated with this error.\nRemove all the metadata associated with an ongoing command …\nClear the contents (all the entries) of an index object.\nClear all the entries in the builder\nClear ignore rules that were explicitly added.\nClone a remote repository.\nPerform the clone step for a newly created submodule.\nClone a remote repository, initialize and update its …\nReturn the error code associated with this error.\nFinalize blob writing stream and write the blob to the …\nFinalize the pack and index\nFinish writing the packfile\nCommits the current patch.  You must have resolved any …\nCreate new commit in the repository\nCommit the changes from the transaction.\nCreate a commit object and return that as a Buf.\nCreate a commit object from the given buffer and signature\nGet the committer of this commit.\nGet the note committer\nGet the committer of this entry\nGet the committer of this commit, using the mailmap to map …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nQuery the specified configuration object to discover …\nGet the configuration file for this repository.\nGet an iterator over the index entries that have conflicts\nOpen a connection to a remote.\nOpen a connection to a remote with callbacks and proxy …\nCheck whether the remote is connected\nCheck whether the remote is (still) connected\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nReturns whether there is data in this binary structure or …\nGet the content of this blob.\nContent of this line as bytes.\nOffset in the original file to the content\nSet the number of unchanged lines that define the boundary …\nLook for copies?\nConsider unmodified as copy sources?\nSimilarity to consider a file copy (default 50)\nReturns the version of the libgit2-sys crate.\nCreate a detached remote\nAttempt to read <code>credential.helper</code> according to …\nThe callback through which to fetch credentials if …\nReturn the type of credentials that this object represents.\nSet extra headers for this fetch operation.\nSet extra headers for this push operation.\nThe binary data, deflated\nGet the object data.\nCreate a “default” credential usable for Negotiate …\nGet the remote’s default branch.\nGet the remote’s default branch.\nDelete an existing branch reference.\nDelete an existing reference.\nGet the total number of deletions in a diff\nGet the DiffDelta associated with the Patch.\nWhen applying a patch, callback that will be made per …\nReturns an iterator over the deltas in this diff.\nSet fetch depth, a value less or equal to 0 is interpreted …\nDescribes a commit\nDescribes a commit\nSets the reference lookup strategy\nSets the reference lookup strategy\nIf set, this will be used to initialize the “description…\nCreate diff3-style file\nDirectly run a diff on two blobs.\nReturns an iterator over the matching diff entries in this …\nGet a matching diff delta by position.\nGet mutable access to <code>DiffFindOptions</code> that are used for …\nCreate a diff between two index objects.\nCreate a diff between the repository index and the workdir …\nGet mutable access to <code>DiffOptions</code> that are used for …\nCreate a diff between a tree and repository index.\nCreate a diff with the difference between two tree objects.\nCreate a diff between a tree and the working directory.\nCreate a diff between a tree and the working directory …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet the refspec’s direction.\nIf the workdir is dirty and this is set, this string will …\nIf pathspecs are specified, this flag means that they …\nIndicates that the given paths should be treated as …\nDisconnect from the remote\nAttempt to open an already-existing repository at or above …\nAttempt to find the path to a git repo for a given path\nMeasure similarity including all data\nDownload and index the packfile\nSet how to behave regarding tags on the remote, such as …\nReturns the new target for the reference.\nGet the destination specifier.\nGet the destination specifier, in bytes.\nCheck if a refspec’s destination descriptor matches a …\nReturns the name of the reference to update on the server, …\nReturns the name of the reference to update on the server …\nDumps the contents of the mempack into the provided buffer.\nGets the email on the signature.\nGets the email on the signature as a byte slice.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nWhen diff finds an untracked directory, to match the …\nIterate over all the config variables\nReturns an iterator over the matching filenames in this …\nGet a matching filename by position.\nMeasure similarity only by comparing SHAs (fast and cheap)\nFlag that submodules should be skipped.\nThe executable the user has requested be run.  This will …\nExecute this helper, attempting to discover a …\nReturns <code>true</code> if file exists at this side of the delta.\nChecks if the object database has an object.\nChecks if the object database has an object, with extended …\nPotentially finds an object that starts with the given …\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nEnable or disable using external templates.\nExtract the signature from a commit\nIf a conflict occurs, exit immediately instead of …\nReturns an iterator over the non-matching entries in this …\nGet an original pathspec string that had no matches.\nDownload new data and update tips\nSet fetch options and allow fetching.\nGet the remote’s list of fetch refspecs\nInvoke ‘callback’ for each entry in the given …\nSpecify a side to favor for resolving conflicts\nGet the UNIX file attributes of a tree entry\nGet the raw UNIX file attributes of a tree entry\nGet the total number of files changed in a diff.\nSelectively remove entries from the tree\nReturns OID of the commit where this line was last changed\nReturns signature of the commit.\nReturns line number where this hunk begins.\nFinish writing to an ODB stream\nCreates an <code>AnnotatedCommit</code> from the given commit id.\nLookup a reference to one of the objects in a repository.\nLookup a branch by its name in a repository.\nLookup a reference to one of the commits in a repository.\nLookup a reference to one of the commits in a repository …\nLocate the path to the global configuration file\nRead the note for an object.\nLookup a reference to one of the objects in a repository.\nLookup a reference to one of the objects by id prefix in a …\nFind the first position of any entries matching a prefix.\nLookup a reference to one of the objects in a repository.\nGet the information for a particular remote\nDetect file renames\nTransform a diff marking file renames, copies, etc.\nLookup submodule information by name or path.\nLocate the path to the system configuration file\nLookup a tag object from the repository.\nLookup a tag object by prefix hash from the repository.\nLookup a reference to one of the objects in a repository.\nOpens a worktree by name for the given repository\nLocate the path to the global XDG compatible configuration …\nFinishes a rebase that is currently in progress once all …\nRestrict the search of commits to those reachable …\nReturns the flags on the delta.\nCustomize optional <code>flags</code> field\nHex-encode this Oid into a formatter.\nSet remote redirection settings; whether redirects to …\nSet remote redirection settings; whether redirects to …\nCalls the given closure for each remaining entry in the …\nFind renames/copies for untracked items in working …\nTreat all files as binary, disabling text diffs\nTreat all files as text, disabling binary attributes and …\nLoop over all deltas in a diff issuing callbacks.\nIterate over all objects in the object database.s\nCreate the new pack and pass each object to the callback.\nPrints this describe result, returning the result as a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAccess the <code>from</code> range of this revspec.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nGenerate a Patch by diffing a blob and a buffer.\nGenerate a Patch by diffing two blobs.\nRead the contents of a git patch file into a <code>git_diff</code> …\nCreates an in-memory mailmap object representing the given …\nGenerate a Patch by diffing two buffers.\nReturns the state of an attribute by inspecting its value …\nParse a raw object id into an Oid structure.\nCreate a diff for a commit in mbox format for sending via …\nCreate a diff for a commit in mbox format for sending via …\nReturn a Patch for one file in a Diff.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nAssembles a new revspec from the from/to components.\nAttempt to wrap an object database as a repository.\nCreates a new iterator from the raw pointer given.\nConvert a raw git_object_t to an ObjectType\nConvert a raw git_reference_t to a ReferenceType.\nConverts a raw configuration level to a ConfigLevel\nConvert from the int into an enum. Returns None if invalid.\nConverts a <code>raw::git_submodule_ignore_t</code> to a <code>SubmoduleIgnore</code>\nConverts a <code>raw::git_submodule_update_t</code> to a <code>SubmoduleUpdate</code>\nConvert a string object type representation to its object …\nCreates a new error from the given string as the error.\nParse a hex-formatted object id into an Oid structure.\nParse a hex-formatted object id into an Oid structure.\nReturns the state of an attribute by inspecting its value …\nGain access to the reference that is this branch\nGet one of the entries in the index by its position.\nLookup an entry by its index\nGets a status entry from this list at the specified index.\nLookup a tree entry by its position in the tree\nGet en entry from the builder from its filename\nReturns a <code>Version</code> which provides information about libgit2.\nGet the value of a git attribute for a path as a string.\nGet the value of a git attribute for a path as a byte …\nGet the value of a boolean config variable.\nGet the value of a string config variable as a byte slice.\nReturn the diff delta for an entry in the diff list.\nGet the ConfigEntry for a config variable.\nGet the value of an integer config variable.\nGet the value of an integer config variable.\nLookup a tree entry by SHA value.\nGets the blame hunk at the given index.\nGets the hunk that relates to the given line number in the …\nGain mutable access to the reference that is this branch\nLookup a tree entry by its filename\nLookup a tree entry by its filename, specified as bytes.\nGet the value of a path config variable as an owned <code>PathBuf</code>…\nGet one of the entries in the index by its path.\nRetrieve a tree entry contained in a tree or in any of its …\nGet the <code>nth</code> refspec from this remote.\nGet the value of a string config variable.\nGet the value of a string config variable as an owned …\nCount the number of unique commits between two commit …\nDetermine if a commit is the descendant of another commit\nDoes this index have conflicts?\nCheck whether a credential object contains username …\nReturns <code>true</code> when a value is defined otherwise <code>false</code>.\nGet the packfile’s hash. A packfile’s name is derived …\nHashes the content of the provided file as an object of …\nHashes the provided data as an object of the provided …\nRetrieve and resolve the reference pointed at by HEAD.\nDetermines whether the repository HEAD is detached.\nGet the OID for the submodule in the current HEAD tree.\nAccess detailed information about the differences between …\nHeader text\nGet an arbitrary header field.\nMark a commit as not of interest to this revwalk.\nHide matching references.\nHide the repository’s HEAD\nHide the OID pointed to by a reference.\nReturns true if libgit2 was built with and linked against …\nGet a DiffHunk and its total line count from the Patch.\nWhen applying a patch, callback that will be made per hunk.\nGet the id (SHA1) of a repository blob\nGet the id (SHA1) of a repository commit\nReturns the Oid of this item.\nGets the commit ID that the given git_annotated_commit …\nGet the note object’s id\nGet the id (SHA1) of a repository object\nGet the object id.\nGet the id (SHA1) of a repository tag\nGet the id (SHA1) of a repository object\nGet the id of the object pointed by the entry\nThe commit ID being cherry-picked. This will be populated …\nThe default value for this is <code>core.abbrev</code> or 7 if unset.\nGet the new oid\nGet the old oid\nIgnore blank lines\nFlag indicating whether case insensitive filenames should …\nFlag indicating whether file mode changes are ignored.\nMeasure similarity ignoring leading whitespace (default)\nFlag indicating whether rename or similarity detection are …\nGet the ignore rule that will be used for the submodule.\nFlag indicating whether all submodules should be treated …\nIgnore whitespace differences.\nIgnore all whitespace\nMeasure similarity ignoring all whitespace\nIgnore all whitespace\nIgnore changes in the amount of whitespace\nIgnore changes in amount of whitespace\nIgnore whitespace at the end of line\nIgnore whitespace at end of line\nDepth of includes where this variable was found\nFlag indicating whether ignored files are included.\nFlag whether ignored files will be included.\nIf enabled, then Typechange delta records are generated.\nEvent with <code>include_typechange</code>, the tree returned generally …\nFlag indicating whether unmodified files are in the diff.\nFlag to include unmodified files.\nInclude unreadable files in the diff\nInclude unreadable files in the diff as untracked files\nFlag indicating whether untracked files are in the diff\nFlag whether untracked files will be included.\nUse a heuristic that takes indentation and whitespace into …\nGet the Index file for this repository.\nGet the OID for the submodule in the index.\nAccess detailed information about the differences between …\nReceived deltas that have been hashed.\nReceived objects that have been hashed\nThe length of the binary data after inflation\nCreates a new repository in the specified folder.\nCopy submodule info into “.git/config” file.\nCreates a new <code>--bare</code> repository in the specified folder.\nCreates a new repository in the specified folder with the …\nThe name of the head to point HEAD at.\nUsed by <code>Repository::rebase</code>, this will begin an in-memory …\nGets the index produced by the last operation, which is …\nAdd or update an entry in the builder\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nInsert a commit object. This will add a commit as well as …\nInsert a single object. For an optimal pack it’s …\nRecursively insert an object and its referenced objects. …\nInsert a root tree object. This will add the tree as well …\nInsert objects as given by the walk. Those commits and all …\nGet the total number of insertions in a diff\nSet the maximum number of unchanged lines between hunk …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAttempt to consume this object and return a blob.\nConsume this container, converting it into a CString\nAttempt to consume this object and return a commit.\nConsumes Blob to be returned as an <code>Object</code>\nConsumes Commit to be returned as an <code>Object</code>\nConsumes Tag to be returned as an <code>Object</code>\nConsumes this Tree to be returned as an <code>Object</code>\nTake ownership of the underlying reference.\nAttempt to consume this object and return a tag.\nAttempt to consume this object and return a tree.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nTests whether this repository is a bare repository or not.\nDetermine if the blob content is most certainly binary or …\nReturns <code>true</code> if file(s) are treated as binary data.\nTests whether this hunk has been tracked to a boundary …\nCheck if a reference is a local branch.\nReturn <code>true</code> is there is no hunk in the blame structure.\nReturn <code>true</code> is there is no entry in the index\nReturn <code>true </code> is there is no log entry in a reflog\nTests whether this repository is empty.\nReturn <code>true</code> if there is no status entry in this list.\nReturn <code>true</code> if there is not entry\nReturn <code>true</code> if there is no entry\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nGet the force update setting.\nDetermine if the current local branch is pointed at by …\nFlag if this is available locally.\nChecks if worktree is locked\nDetermine if the given git_object_t is a valid loose …\nReturns <code>true</code> if file(s) are treated as text data.\nCheck if a reference is a note.\nTest if the ignore rules apply to a given path.\nChecks if the worktree is prunable\nCheck if a reference is a remote tracking branch\nTests whether this repository is a shallow clone.\nCheck if deltas are sorted case sensitively or …\nCheck if a reference is a tag\nReturns <code>true</code> if <code>id</code> value is known correct.\nEnsure the reference name is well-formed.\nEnsure the remote name is well-formed.\nDetermine whether a tag name is valid, meaning that (when …\nTests whether this repository is a worktree.\nTest if this OID is all zeros.\nReturns an iterator over the hunks in this blame.\nGet an iterator over the entries in this index.\nCreate a borrowed iterator.\nCreate a borrowed iterator.\nGet an iterator to all entries inside of this reflog\nReturns an iterator over the statuses in this list.\nReturns an iterator over the entries in this tree.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nThe type of binary data for this file\nGet the object type of an object.\nGet the object type.\nGet the reference type of a reference.\nGet the type of the object pointed by the entry\nThe type of rebase operation\nReturns the last error that happened with the code …\nGets the number of hunks that exist in the blame structure.\nGet the count of entries currently in the index\nThe number of trailer key–value pairs.\nThe number of trailer key–value pairs.\nGet the object size.\nGets the count of rebase operations that are to be applied.\nGet the number of log entries in a reflog\nGets the count of status entries in this list.\nGet the number of entries listed in this tree.\nGet the number of entries\nGets the configuration level of this entry.\nReturns the version of libgit2.\nGet a DiffLine from a hunk of the Patch.\nGet the number of lines of context, additions, and …\nReturns number of lines in this hunk.\nGet the remote repository’s reference advertisement list.\nGet the remote repository’s reference advertisement list.\nLocally-available objects that have been injected in order …\nLocks the worktree\nIf enabled, this will cause the newly added worktree to be …\nLock the specified reference by name.\nControls whether locked worktrees will be pruned\nGets this repository’s mailmap.\nSet the mainline value\nSet the mainline value\nMatch a pathspec against files in a diff.\nThis matches the pathspec against the files in the …\nMatch a pathspec against files in a tree.\nMatch a pathspec against the working directory of a …\nTry to match a path against a pathspec\nThe last line in the file to blame.\nMaximum size (in bytes) above which a blob will be marked …\nMerge one diff into another.\nMerges the given commit(s) into HEAD, writing the results …\nAnalyzes the given branch(es) and determines the …\nAnalyzes the given branch(es) and determines the …\nFind a merge base between two commits\nFind a merge base given a list of commits\nFind all merge bases between two commits\nFind all merge bases given a list of commits\nMerge two commits, producing an index that reflects the …\nOptions to control how trees are merged during <code>next()</code>.\nSet the merge options\nSet the merge options\nMerge two trees, producing an index that reflects the …\nIf a merge is in progress, invoke ‘callback’ for each …\nGet the full message of a commit.\nGet the note message as a string, returning <code>None</code> if it is …\nGet the log message, returning <code>None</code> on invalid UTF-8.\nRetrieves the Git merge message. Remember to remove the …\nGet the message of a tag\nReturn the message associated with this error\nGet the full message of a commit as a byte slice.\nGet the note message, in bytes.\nGet the log message as a byte array.\nGet the message of a tag\nGet the encoding for the message of a commit, as a string …\nClean up a message, removing extraneous whitespace, and …\nGet the full raw message of a commit.\nGet the full raw message of a commit.\nGet the trailers for the given message.\nGet the trailers for the given message.\nThe first line in the file to blame.\nTake extra time to find the minimal diff\nTake extra time to find minimal diff\nMake the repo path (and workdir path) as needed. The “…\nRecursively make all components of the repo and workdir …\nReturns file mode.\nSet to one of the <code>RepositoryInit</code> constants, or a custom …\nReturns the intent of the revspec.\nIterate over the values of a multivar\nReturn the name of the given local or remote branch.\nGets the name of this entry.\nGet the unique name for the resulting packfile.\nGet the full name of a reference.\nGet the remote’s name.\nGets the name on the signature.\nGet the submodule’s name.\nGet the name of a tag\nGet the filename of a tree entry\nRetrieves the name of the worktree\nReturn the name of the given local or remote branch.\nGets the name of this entry as a byte slice.\nGet the unique name for the resulting packfile, in bytes.\nGet the full name of a reference.\nGet the remote’s name, in bytes.\nGets the name on the signature as a byte slice.\nGet the name for the submodule.\nGet the name of a tag\nGet the filename of a tree entry\nEnsure the branch name is well-formed.\nConsumes a <code>References</code> iterator to create an iterator over …\nGet the currently active namespace for this repository.\nGet the currently active namespace for this repository as …\nReturns the nanosecond component of this time.\nCreates a new set of empty options (zeroed).\nInitialize options\nCreates a new empty buffer.\nCreates a default set of cherrypick options\nAllocate a new configuration object\nCreate a new credential helper object which will be used …\nCreates a new blank set of formatting options for a …\nCreates a new blank set of formatting options for a …\nCreates a new set of empty diff options.\nCreates a new set of empty diff find options.\nCreates a new set of patchid options, initialized to the …\nCreates a new set of email create options\nCreates a new in-memory index.\nCreate a new indexer\nCreates an empty, in-memory mailmap object.\nCreates a default set of merge options.\nCreates an object database without any backends.\nCreates a new pathspec from a list of specs to match …\nCreates a new default set of rebase options.\nCreates a new blank set of fetch options\nCreates a new blank set of push options\nCreates a new set of empty callbacks\nCreates a default set of initialization options.\nCreates a default set of revert options\nCreate a new action signature.\nCreates a default\nCreates a default set of merge options.\nCreates a new blank set of status options.\nReturn default options.\nCreates a default set of add options.\nCreates a default set of pruning options\nCreates a new error.\nCreates a new set of proxy options ready to be configured.\nCreates a new time structure from its components.\nCreates a new time structure from its components.\nReturn the file which represents the “to” side of the …\nThe contents of the new file.\nLine number in new file or <code>None</code> for deleted line\nNumber of lines in new_file\nThe virtual “directory” to prefix new file names with …\nStarting line number in new_file\nSetter for the id of the newest commit to consider.\nAdvances the iterator and returns the next value.\nPerforms the next rebase operation and returns the …\nReturns the number of files in this delta.\nNormally a ‘/.git/’ will be appended to the repo path …\nIf the commits being merged have multiple merge bases, do …\nBypasses the default status behavior of doing a “soft” …\nReturn an error if the repository path appears to already …\nNormalize reference name and check validity.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nAdd a note for an object\nGet the default notes reference for this repository\nRemove the note for an object.\nCreates a new iterator for notes in this repository.\nCreate a new action signature with a timestamp of ‘now’…\nReturns true if libgit2 was built with support for …\nGets the rebase operation specified by the given index.\nGet the number of hunks in the Patch.\nNumber of newline characters in content\nGet the number of lines in a hunk.\nGet the total number of objects the packbuilder will write …\nGet the object database for this repository\nReturn the timezone offset, in minutes\nBindings to libgit2’s raw <code>git_oidarray</code> type\nReturn the file which represents the “from” side of …\nThe contents of the old file.\nLine number in old file or <code>None</code> for added line\nNumber of lines in old_file\nThe virtual “directory” to prefix old file names with …\nStarting line number in old_file\nSetter for the id of the oldest commit to consider.\nFlag indicating whether patch numbers are included in the …\nIndicates when calculating the distance from the matching …\nCreate a new config instance containing a single on-disk …\nCreate a new bare Git index object as a memory …\nAttempt to open an already-existing repository at <code>path</code>.\nOpen the repository for a submodule.\nAttempt to open an already-existing bare repository at <code>path</code>…\nOpen the global, XDG and system configuration files\nFind and open an existing repository, with additional …\nFind and open an existing repository, respecting git …\nOpen a worktree of a the repository\nAttempt to open an already-existing repository from a …\nOpen the global/XDG configuration file according to git’…\nBuild a single-level focused config object from a …\nOpens an existing rebase that was previously started by …\nGets the index of the rebase operation that is currently …\nGet the URL for the submodule.\nBindings to libgit2’s git_libgit2_opts function.\nReturns the OID of the commit where this hunk was found.\nGets the original HEAD id for merge rebases.\nGets the original <code>HEAD</code> ref name for merge rebases.\nReturns signature of the commit.\nReturns line number where this hunk begins.\nSigil showing the origin of this <code>DiffLine</code>.\nIf set, then after the rest of the repository …\norigin of this <code>DiffLine</code>.\nThe index entry originating from the user’s copy of the …\nFunction to call with progress information during pack …\nCreate a PackBuilder\nIf the transport being used to push to the remote requires …\nCreate stream for writing a pack file to the ODB\nGet the specified parent of the commit.\nGet the number of parents of this commit.\nGet the specified parent id of the commit.\nCreates a new iterator over the parents of this commit.\nCreates a new iterator over the parents of this commit.\nParse a string as a bool.\nParse a string as an i32; handles suffixes like k, M, or …\nParse a string as an i64; handles suffixes like k, M, or …\nCreate a patch ID from a diff.\nReturns path to the file where this hunk originated.\nReturns the path of the entry relative to the working …\nGet the full path to the index file on disk.\nReturns the path to the <code>.git</code> folder for normal …\nAccess this entry’s path name as a string.\nGet the path for the submodule.\nRetrieves the path to the worktree\nThe path of this index entry as a byte vector. Regardless …\nReturns the path, in bytes, of the entry relative to the …\nAccess the bytes for this entry’s corresponding pathname\nAdd to the array of paths/fnmatch patterns to constrain …\nAdd to the array of paths patterns to build the stash.\nAdd a path pattern to match (using fnmatch-style matching).\nUse the “patience diff” algorithm\nUse the “patience diff” algorithm\nRecursively peel an object until an object of the …\nPeel a reference to an object\nRecursively peel a tag until a non tag git_object is found\nRecursively peel an object until a blob is found\nPeel a reference to a blob\nRecursively peel an object until a commit is found\nPeel a reference to a commit\nRecursively peel an object until a tag is found\nPeel a reference to a tag\nRecursively peel an object until a tree is found\nPeel a reference to a tree\nIterate over a diff generating formatted text output.\nPrint the Patch to text via a callback.\nThe callback through which progress is monitored. Be aware …\nThe callback through which progress is monitored. Be aware …\nOptional callback to notify the consumer of application …\nSet the proxy options to use for the fetch operation.\nSet the proxy options to use for the push operation.\nPrune tracking refs that are no longer present on remote\nSet whether to perform a prune after the fetch.\nPrunes the worktree\nPerform a push\nMark a commit to start traversal from.\nPush matching references\nPush the repository’s HEAD\nThe callback is called once between the negotiation step …\nPush and hide the respective endpoints of the given range.\nPush the OID pointed to by a reference\nGet the remote’s list of push refspecs\nThe callback through which progress of push transfer is …\nSet a callback to get invoked for each updated reference …\nGet the remote’s pushurl.\nGet the remote’s pushurl as a byte array.\nUsed by <code>Repository::rebase</code>, this will instruct other …\nPointer to a raw git_stash_apply_options\nObtain the raw struct\nGet access to the underlying raw pointer.\nAcquire a pointer to the underlying raw options.\nAcquire a pointer to the underlying raw options.\nAcquire a pointer to the underlying raw options.\nAcquire a pointer to the underlying raw options.\nGet access to the underlying raw pointer.\nCreates a set of raw init options to be used with …\nObtain the raw struct\nAcquire a pointer to the underlying raw options.\nPointer to a raw git_stash_apply_options\nGet a pointer to the inner list of status options.\nGet a set of raw add options to be used with …\nGet a set of raw prune options to be used with …\nConvert this kind into its raw representation\nReturn the raw error class associated with this error.\nReturn the raw error code associated with this error.\nGet the full raw text of the commit header.\nGet the full raw text of the commit header.\nUpdate the contents of an existing index object in memory …\nRead an object from the database.\nReads the header of an object from the database without …\nRead a tree into the index file with stats\nCreate object database reading stream.\nInitializes a rebase operation to rebase the changes in …\nSize of the packfile received up to now\nObjects which have been downloaded\nFlag indicating whether ignored directories are traversed …\nIndicates that the contents of ignored directories should …\nFlag indicating whether untracked directories are …\nFlag that all files in untracked directories should be …\nMaximum number of times to merge common ancestors to build …\nCreate a new direct reference.\nreference to use for the new worktree HEAD\nEnsure that the given reference has a reflog.\nCheck if the given reference has a reflog.\nConditionally create new direct reference.\nCreate a new symbolic reference.\nCreate a new symbolic reference.\nCreates a git_annotated_commit from the given reference.\nCreate an iterator for the repo’s references\nCreate an iterator for the repo’s references that match …\nRead the reflog for the given reference\nDelete the reflog for the given reference\nRename a reflog\nGet the refname that the given git_annotated_commit refers …\nGet the refname that the given git_annotated_commit refers …\nLookup a reference by name and resolve immediately to OID.\nRefresh the object database. This should never be needed, …\nGet the number of refspecs for a remote\nSet stash application flag to …\nReread submodule info from config, index, and HEAD.\naccess remote bound to this connection\nAdd a remote with the default fetch refspec to the …\nAdd a fetch refspec to the remote’s configuration\nAdd a push refspec to the remote’s configuration.\nCreate an anonymous remote\nSet the callbacks to use for the fetch operation.\nSet the callbacks to use for the push operation.\nDelete an existing persisted remote.\nSet “push options” to deliver to the remote.\nGive a remote a new name\nSet the remote’s URL for pushing in the configuration.\nSet the remote’s URL in the configuration\nAdd a remote with the provided fetch refspec to the …\nList all remotes for a given repository\nDelete a config variable from the config file with the …\nRemove an entry from the index\nRemove an entry from the reflog by its index\nRemove a reference.\nRemove an entry from the builder by its filename\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nRemove all matching index entries.\nRemove all entries from the index under a given directory.\nRemove the Git merge message.\nRemove multivar config variables in the config file with …\nRemove the active namespace for this repository.\nRemove an index entry corresponding to a file on disk.\nRemove any unmodified deltas after find_similar is done.\nMove/rename an existing local branch reference.\nRename an existing reference.\nSimilarity of modified to be eligible rename source …\nMaximum similarity sources to examine for a file (somewhat …\nSimilarity to consider a file renamed (default 50)\nSimilarity to consider a file renamed (default 50)\nSet threshold above which similar files will be considered …\nLook for renames?\nConsider old side of modified for renames?\nIndicates that rename detection should include rewritten …\nIndicates that rename detection should be processed …\nIndicates that rename detection should be run between the …\nSet up the subrepository for a submodule in preparation …\nSet whether to report unchanged tips in the update_tips …\nSet the “re-roll” number.\nClears all data in the mempack.\nSets the current head to the specified object and …\nReset a revwalk to allow re-configuring it.\nUpdates some entries in the index from the target commit …\nResolve a symbolic reference to a direct reference.\nLookup a reference to one of the objects in a repository. …\nResolves a signature to its real name and email address.\nFlag indicating whether the sides of the diff will be …\nReverts the given commit, producing changes in the index …\nReverts the given commit against the given “our” …\nExecute a rev-parse operation against the <code>spec</code> listed.\nFind a single object and intermediate reference by a …\nFind a single object, as specified by a revision string.\nCreate a revwalk that can be used to traverse the commit …\nUsed by <code>finish()</code>, this is the name of the notes reference …\nMark significant rewrites for split.\nTransform a target reference to its source reference …\nReturn the time, in seconds, from epoch\nReturns the number of seconds in the second component of …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSet the value of a boolean config variable in the config …\nModify the error class associated with this error.\nModify the error code associated with this error.\nMake the repository HEAD point to the specified reference.\nMake the repository HEAD point to the specified reference …\nMake the repository HEAD directly point to the commit.\nMake the repository HEAD directly point to the commit.\nSet the value of an integer config variable in the config …\nSet the value of an integer config variable in the config …\nSet the Index file for this repository.\nSet the value of an multivar config variable in the config …\nSet the active namespace for this repository.\nSet the active namespace for this repository as a byte …\nOverride the object database for this repository\n<code>progress</code> will be called with progress information during …\nAdd a <code>Reflog</code> to the transaction.\nSet the order in which commits are visited.\nSet the value of a string config variable in the config …\nSet the target of the specified symbolic reference.\nConditionally create a new reference with the same name as …\nSet the target of the specified reference.\nSet the number of threads to be used.\nSet the upstream configuration for a given local branch.\nSet index on-disk version.\nSet the path to the working directory for this repository.\nGet a short abbreviated OID string for the object\nGet the full shorthand of a reference.\nGet the full shorthand of a reference.\nSelect the files on which to report status.\nInclude the necessary deflate/delta information so that …\nIf no matching tag or reference is found whether a …\nWhen generating output, include the names of unmodified …\nWhen generating patch text, include the content of …\nTextual progress from the remote.\nReturn whether the offset was positive or negative. …\nCreate a new action signature with default user and now …\nCondense non-alphanumeric regions for simplified diff file\nSimplify the history by first-parent\nGet the size in bytes of the contents of this blob.\nReturns the size of this entry, in bytes\nGet the size of a Patch’s diff data in bytes.\nDisable updating the <code>binary</code> flag in delta records. This is …\nDo not write the REUC extension on the generated index\nCreate a snapshot of the configuration\nOverride the native case sensitivity for the file system …\nOverride the native case sensitivity for the file system …\nReturns the current target of the reference.\nGet the source specifier.\nGet the source specifier, in bytes.\nCheck if a refspec’s source descriptor matches a …\nReturns the source name of the reference, or None if it is …\nReturns the source name of the reference as a byte slice.\nReturns true if libgit2 was built with and linked against …\nCreate a new passphrase-protected ssh key credential …\nCreate a new ssh key credential object used for querying …\nCreate a new ssh key credential object reading the keys …\nCreate standard conflicted merge files\nSet the starting patch number; this cannot be 0.\nApply a single stashed state from the stash list.\nRemove a single stashed state from the stash list.\nLoop over all the stashed states and issue a callback for …\nApply a single stashed state from the stash list and …\nSave the local modifications to a new stash.\nSave the local modifications to a new stash. unlike …\nLike <code>stash_save</code> but with more options like selective …\nReturns the current state of this repository\nAccumulate diff statistics for all patches.\nGet the statistics structure that is filled in by the …\nReturns the status of this entry\nAccess the status flags for this file\nGet file status for a single file.\nTest if the ignore rules apply to a given file.\nGather file status information and populate the returned …\nCancel the operation\nGet the refspec’s string.\nConvert an object type to its string representation.\nConvert an object type to its string representation.\nBindings to libgit2’s raw <code>git_strarray</code> type\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nSet the subject prefix\nSet up a new git submodule for checkout.\nSet the branch for the submodule in the configuration\nSet the ignore rule for the submodule in the configuration\nSet the update rule for the submodule in the configuration\nSet the URL for the submodule in the configuration\nGet the status for a submodule.\nLoad all submodules for this repository and return them.\nGet the short “summary” of the git commit message.\nGet the short “summary” of the git commit message.\nCreate a new reference with the same name as the given …\nGet full name to the reference pointed to by a symbolic …\nGet full name to the reference pointed to by a symbolic …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nCopy submodule remote info into submodule repo.\nCreate a new tag in the repository from an object\nCreate a new tag in the repository from an object without …\nDelete an existing tag reference.\niterate over all tags calling <code>cb</code> on each. the callback is …\nCreate a new lightweight tag pointing at a target object\nGet a list with all the tags in the repository.\nGet the tagger (author) of a tag\nGet the OID pointed to by a direct reference.\nGet the tagged object of a tag\nGet the OID of the tagged object of a tag\nMaximum similarity sources to examine for renames (default …\nReturn the peeled OID target of this reference.\nGet the ObjectType of the tagged object of a tag\nWhen the <code>external_template</code> option is set, this is the …\nThe index entry originating from the external repository. …\nReturns true if libgit2 was built thread-aware and can be …\nGet the commit time (i.e. committer time) of a commit.\nAccess the <code>to</code> range of this revspec.\nPrint diff statistics to a Buf\nGet the Patch text as a Buf.\nConvert to the “bytes” variant.\nConvert a tree entry to the object it points to.\nConvert this to an owned version of <code>Progress</code>.\nConvert a signature of any lifetime into an owned …\nConvert this entry of any lifetime into an owned signature …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nNumber of deltas in the packfile being downloaded\nNumber of objects in the packfile being downloaded\nTrack lines that have been copied from another file that …\nTrack lines that have been copied from another file that …\nTrack lines that have moved across files in the same …\nTrack lines that have moved within a file.\nCreate a new transaction\nThe callback through which progress is monitored.\nTransform a reference to its target following the refspec…\nInterfaces for adding custom transports to libgit2\nGet the tree pointed to by a commit.\nGet the id of the tree pointed to by this commit.\nCreate a new TreeBuilder, optionally initialized with the …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nUnlocks the worktree\nRemove the current progress callback.  See …\nUnwrap access to the underlying raw pointer, canceling the …\nUpdate submodule.\nUpdate all index entries to match the working directory\nSet whether to write the results to FETCH_HEAD.\nWhen diff finds a file in the working directory with stat …\nRefresh the stat cache in the index for files are …\nGet the update rule that will be used for the submodule.\nUpdate the tips to the new state\nEach time a reference is updated locally, the callback …\nReturn the reference supporting the remote tracking …\nGet the remote’s URL.\nGet the submodule’s URL.\nSpecify the exact URL of the proxy to use.\nGet the remote’s URL as a byte array.\nUse mailmap file to map author and committer names and …\nCreate a credential to specify a username.\nSet the username that this credential helper will query …\nA public field representing the currently discovered …\nCreate a new plain-text username and password credential …\nControls whether valid (still existing on the filesystem) …\nValidates the worktree\nGets the value of this entry.\nGets the value of this entry as a byte slice.\nReturns true if this was built with the vendored version …\nGet index on-disk version.\nTraverse the entries in a tree and its subtrees in post or …\nGet the <code>when</code> of this signature.\nHide all commits for which the callback returns true from …\nGet the path of the working directory for this repository.\nGet the OID for the submodule in the current working …\nThe path to the working directory.\nControls whether the actual working tree on the filesystem …\nCreates a new worktree for the repository\nLists all the worktrees for the repository\nCreates Branch type from a Reference\nWrite an existing index object from memory back to disk …\nWrite an object to the database.\nWrite an existing in-memory reflog object back to disk …\nWrite the contents of the TreeBuilder as a Tree object and …\nWrite the contents of the packfile to an in-memory buffer. …\nWrite the index as a tree.\nWrite the index as a tree to the given repository\nCreate object database writing stream.\nGet the number of objects the packbuilder has already …\nCreates an all zero Oid structure.\nAuto-detect (default)\nA builder struct for configuring checkouts of a repository.\nOptions that can be passed to <code>RepoBuilder::clone_local</code>.\nBypass the git-aware transport even for <code>file://</code> URLs.\nBypass the git-aware transport, but don’t try to use …\nNever bypass the git-aware transport\nCheckout notifications callback.\nCheckout progress notification callback.\nType of callback passed to <code>RepoBuilder::remote_create</code>.\nA builder struct which is used to build configuration for …\nA builder struct for git tree updates.\nIn safe mode, apply safe file updates even when there are …\nThe name of the common ancestor side of conflicts\nIndicate whether the repository will be cloned as a bare …\nSpecify the name of the branch to check out after the …\nClone a remote repository.\nConfigures options for bypassing the git-aware transport …\nConfigure a raw checkout options based on this …\nIndicates whether to include common ancestor data in diff3 …\nIndicate whether a normal merge file should be written for …\nCreate a new tree from the specified baseline and this …\nSet the mode with which new directories are created.\nIndicate whether to apply filters like CRLF conversion.\nIndicate that this checkout should perform a dry run by …\nOptions which control the fetch, including callbacks.\nSet the mode with which new files are created.\nTake any action necessary to get the working directory to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new repository builder with all of the default …\nCreate a new empty series of updates.\nCreates a new builder for checkouts with all of its default\nSet a callback to receive checkout notifications.\nSpecify for which notification types to invoke the …\nThe name of the common our side of conflicts\nIndicate whether ignored files should be overwritten …\nAdd a path to be checked out.\nSet a callback to receive notifications of checkout …\nIn safe mode, create files that don’t exist.\nIndicate whether the index and git attributes should be …\nConfigures a callback used to create the git remote, prior …\nAdd an update removing the specified <code>path</code> from a tree.\nRemove ignored files from the working dir.\nRemove untracked files from the working dir.\nIndicate that the checkout should be performed safely, …\nSkip files with unmerged index entries.\nSet the directory to check out to\nThe name of the common their side of conflicts\nPrevents checkout from writing the updated files’ …\nOnly update the contents of files that already exist.\nAdd an update setting the specified <code>path</code> to a specific …\nIndicate whether the checkout should proceed on conflicts …\nIndicate whether the checkout should proceed on conflicts …\nConfigure the checkout which will be performed by …\nA certificate for a remote connection, viewable as one of …\nHostkey information taken from libssh2\nX.509 certificate information\nDSS key type\nECDSA 256 key type\nECDSA 384 key type\nECDSA 521 key type\nED25519 key type\nRSA key type\nThe SSH host key type.\nUnknown key type\nAttempt to view this certificate as an SSH hostkey.\nAttempt to view this certificate as an X.509 certificate.\nReturn the X.509 certificate data as a byte slice\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the md5 hash of the hostkey, if available.\nReturns the SHA-1 hash of the hostkey, if available.\nReturns the SHA-256 hash of the hostkey, if available.\nReturns the raw host key.\nReturns the type of the host key.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe name of the key type as encoded in the known_hosts …\nA short name of the key type, the colloquial form used as …\nAn oid array structure used by libgit2\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nControls whether or not libgit2 will cache loaded objects. …\nReturns the list of git extensions that are supported. …\nGet the maximum number of files that will be mapped at any …\nGet the maximum memory that will be mapped in total by the …\nGet the maximum mmap window size\nGet the search path for a given level of config data.\nGet server connect timeout in milliseconds\nGet server timeout in milliseconds\nReset the search path for a given level of config data to …\nSet that the given git extensions are supported by the …\nSet the maximum number of files that can be mapped at any …\nSet the maximum amount of memory that can be mapped at any …\nSet the maximum mmap window size\nSet the search path for a level of config data. The search …\nSet server connect timeout in milliseconds\nSet server timeout in milliseconds\nSet the SSL certificate-authority location to <code>path</code>. <code>path</code> …\nSet the SSL certificate-authority location to <code>file</code>. <code>file</code> …\nSet whether or not to verify ownership before performing a …\nControls whether or not libgit2 will verify that objects …\nControls whether or not libgit2 will verify when writing …\nA forward iterator over the strings of an array, casted to …\nA forward iterator over the strings of an array, casted to …\nA string array structure used by libgit2\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns None if the i’th string is not utf8 or if i is …\nReturns None if <code>i</code> is out of bounds.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this array is empty.\nReturns an iterator over the strings contained within this …\nReturns an iterator over the strings contained within this …\nReturns the number of strings in this array.\nActions that a smart transport can ask a subtransport to …\nInterface used by smart transports.\nAn instance of a stream over which a smart transport will …\nA transport is a structure which knows how to transfer …\nIndicates that this subtransport will be performing the …\nTerminates a connection with the remote.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdd a custom transport definition, to be used in addition …\nCreates a new transport which will use the “smart” …")