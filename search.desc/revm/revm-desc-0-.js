searchState.loadedDescShard("revm", 0, "Revm is a Rust EVM implementation.\nCreate account: Actions: Mark account as created Revert: …\nMark account to be destroyed and journal balance to be …\nLoading account does not mean that account will need to be …\nUsed to mark account that is warm inside EVM in regard to …\nTransfer balance between two accounts Action: Transfer …\nBlock type.\nCode changed Action: Account code changed Revert: Revert …\nCommit output of transaction execution.\nEVM context contains data that EVM needs for execution.\nEVM database interface.\nEVM database commit interface.\nEVM database interface.\nThe database error type.\nThe database error type.\nExtension of the <code>ExecuteEvm</code> trait that adds a method that …\nExecute EVM transactions. Main trait for transaction …\nInspectCommitEvm is a API that allows inspecting similar …\nInspectEvm is a API that allows inspecting the EVM.\nEVM hooks into execution.\nA journal of state changes internal to the EVM\nJournal entries that are used to track changes to the …\nTrait used to initialize Context with default mainnet …\nIncrement nonce Action: Increment nonce by one Revert: …\nOutput of transaction execution.\nEntry used to track storage changes Action: Storage change …\nEntry used to track storage warming introduced by EIP-2929.\nExtension of the <code>SystemCallEvm</code> trait that adds a method …\nAPI for executing the system calls. System calls dont …\nIt is used to track an EIP-1153 transient storage change. …\nTransaction type.\nGets balance of <code>address</code> and if the account is cold.\nGets basic account information.\nGets basic account information.\nBlock information.\nGets block hash by block number.\nGets block hash by block number.\nCalled whenever a call to a contract is about to start.\nCalled when a call to a contract has concluded.\nConfigurations.\nInner context.\nGets account code by its hash.\nGets account code by its hash.\nCommit changes to the database.\nCalled when a contract is about to be created.\nCalled when a contract has been created.\n[<code>context_interface::ContextTr</code>] of the EVM it is used to …\nDatabase\nReturns call depth.\nCalled when EOF creating is called.\nCalled when eof creating has ended.\nError that happened during execution.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalled before the interpreter is initialized.\nInner journal state.\nInspect the EVM with the given inspector and transaction.\nInspect the EVM with the given transaction and inspector …\nInspect the EVM with the current inspector and previous …\nInspect the EVM with the current inspector and previous …\nInspects commit with the given inspector and previous …\nInspect the EVM with the current inspector and previous …\nInspect the EVM with the current inspector and previous …\nInspect the EVM with the given transaction.\nInspector of the EVM it is used to inspect the EVM. Its …\nInstructions provider of the EVM it is used to execute …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the <code>Journal</code> and returns <code>JournalInner</code>.\nEVM State with journaling support and database.\nGets code of <code>address</code> and if the account is cold.\nGets code hash of <code>address</code> and if the account is cold.\nLocal context that is filled by execution.\nCalled when a log is emitted.\nEmits a log owned by <code>address</code> with given <code>LogData</code>.\nModifies the context block.\nModifies the context block.\nModifies the context configuration.\nModifies the context configuration.\nModifies the context chain.\nModifies the context chain.\nModifies the context database.\nModifies the context database.\nModifies the context journal.\nModifies the context journal.\nModifies the context transaction.\nModifies the context transaction.\nCreates a new context with a new database type.\nCreates a new JournaledState by copying state data from a …\nPrecompile provider of the EVM it is used to execute …\nTransact the transaction that is set in the context.\nTransact the transaction and commit to the state.\nCalled when a contract has been self-destructed with funds …\nMarks <code>address</code> to be deleted, with funds transferred to …\nSet the block.\nSet the inspector for the EVM.\nSet the transaction.\nGets storage value of <code>address</code> at <code>index</code> and if the account …\nSets storage value of account address at index.\nCalled on each step of the interpreter.\nCalled after <code>step</code> when the instruction has been executed.\nGets storage value of address at index.\nGets storage value of address at index.\nGets the transient storage value of <code>address</code> at <code>index</code>.\nCreates a new <code>JournalInner</code> by cloning all internal state …\nTransact the given transaction.\nTransact the transaction and commit to the state.\nSystem call is a special transaction call that is used to …\nTransact the system call and commit to the state.\nSets the transient storage value of <code>address</code> at <code>index</code>.\nTransaction information.\nCreates a new context with a new block type.\nCreates a new context with a new chain type.\nCreates a new context with a new chain type.\nCreates a new context with a new database type.\nCreates a new context with a new journal type. New journal …\nCreates a new context with a new <code>DatabaseRef</code> type.\nCreates a new context with a new transaction type.\nAddress of warmed account.\nAddress of account to be destroyed.\nAddress of account that is touched.\nAddress of account that had its nonce changed. Nonce is …\nAddress of account that is created. On revert, this …\nAddress of account that had its storage changed.\nAddress of account that had its storage warmed. By SLOAD …\nAddress of account that had its transient storage changed.\nAddress of account that had its code changed.\nBalance that is transferred.\nAddress of account that sent the balance.\nBalance of account got transferred to target.\nPrevious value of storage slot.\nPrevious value of transient storage slot.\nKey of storage slot that is changed.\nKey of storage slot that is warmed.\nKey of transient storage slot that is changed.\nAddress of account that received the balance.\nAddress of account that received the balance.\nWhether the account had already been destroyed before this …")