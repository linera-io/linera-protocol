searchState.loadedDescShard("thread_local", 0, "Per-object thread-local storage\nAn iterator that moves out of a <code>CachedThreadLocal</code>.\nMutable iterator over the contents of a <code>CachedThreadLocal</code>.\nWrapper around <code>ThreadLocal</code>.\nAn iterator that moves out of a <code>ThreadLocal</code>.\nIterator over the contents of a <code>ThreadLocal</code>.\nMutable iterator over the contents of a <code>ThreadLocal</code>.\nThread-local variable wrapper\nRemoves all thread-specific values from the <code>ThreadLocal</code>, …\nRemoves all thread-specific values from the <code>ThreadLocal</code>, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the element for the current thread, if it exists.\nReturns the element for the current thread, if it exists.\nReturns the element for the current thread, or creates it …\nReturns the element for the current thread, or creates it …\nReturns the element for the current thread, or creates a …\nReturns the element for the current thread, or creates a …\nReturns the element for the current thread, or creates it …\nReturns the element for the current thread, or creates it …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns an iterator over the local values of all threads …\nReturns a mutable iterator over the local values of all …\nReturns a mutable iterator over the local values of all …\nCreates a new empty <code>CachedThreadLocal</code>.\nCreates a new empty <code>ThreadLocal</code>.\nCreates a new <code>ThreadLocal</code> with an initial capacity. If …")