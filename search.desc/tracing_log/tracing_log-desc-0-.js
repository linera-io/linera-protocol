searchState.loadedDescShard("tracing_log", 0, "Adapters for connecting unstructured log records from the …\nTrait implemented for <code>tracing</code> types that can be converted …\nTrait implemented for <code>log</code> types that can be converted to a …\nThe <code>log</code> type that this type can be converted into.\nA simple “logger” that converts all log records into …\nExtends log <code>Event</code>s to provide complete <code>Metadata</code>.\nThe <code>tracing</code> type that this type can be converted into.\nReturns the <code>log</code> equivalent of <code>self</code>.\nReturns the <code>tracing</code> equivalent of <code>self</code>.\nFormat a log record as a trace event in the current span.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns whether this <code>Event</code> represents a log (from the <code>log</code> …\nAn adapter for converting <code>log</code> records into <code>tracing</code> <code>Event</code>s.\nIf this <code>Event</code> comes from a <code>log</code>, this method provides a new …\nConfigures a new <code>LogTracer</code>.\nA simple “logger” that converts all log records into …\nThe type returned by <code>set_logger</code> if <code>set_logger</code> has already …\nReturns a builder that allows customizing a <code>LogTracer</code> and …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConfigures the <code>LogTracer</code> to ignore all log records whose …\nConfigures the <code>LogTracer</code> to ignore all log records whose …\nSets a <code>LogTracer</code> as the global logger for the <code>log</code> crate.\nConstructs a new <code>LogTracer</code> with the provided configuration …\nSets up <code>LogTracer</code> as global logger for the <code>log</code> crate, with …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>LogTracer</code> that can then be used as a logger …\nReturns a new <code>Builder</code> to construct a <code>LogTracer</code>.\nSets a global maximum level for <code>log</code> records.")