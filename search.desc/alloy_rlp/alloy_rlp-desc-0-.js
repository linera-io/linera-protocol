searchState.loadedDescShard("alloy_rlp", 0, "alloy-rlp\nCustom error.\nA type that can be decoded from an RLP blob.\nRLP prefix byte for a 0-length array.\nRLP prefix byte for 0-length string.\nA type that can be encoded via RLP.\nContains the error value\nRLP error type.\nThe header of an RLP item.\nOverran input while decoding.\nThe maximum length.\nLeading zero disallowed.\nPayload is a list of RLP encoded data.\nGot an unexpected number of items in a list.\nDefines the max length of an <code>Encodable</code> type as a const …\nDefines the max length of an <code>Encodable</code> type as an …\nExpected single byte, but got invalid value.\nExpected size, but got invalid value.\nContains the success value\nNumeric Overflow.\nStructured representation of an RLP payload.\nRLP result type.\nAn active RLP decoder, with a specific slice of a payload.\nDerives <code>Decodable</code> for the type whose implementation …\nDerives <code>Decodable</code> for the type whose implementation …\nDerives <code>Encodable</code> for the type which encodes the all …\nDerives <code>Encodable</code> for the <code>newtype</code> which encodes its single …\nDerives <code>MaxEncodedLen</code> for types of constant size.\nPayload is a byte string.\nExpected a payload of a specific size, got an unexpected …\nExpected another type, got a list instead.\nExpected another type, got a string instead.\nDecodes the blob into the appropriate type. <code>buf</code> must be …\nDecodes an RLP header from the given buffer.\nDecodes the next payload from the given buffer, advancing …\nDecodes the entire input, ensuring no trailing bytes …\nExtracts the next payload from the given buffer, advancing …\nDecodes a string slice from the given buffer, advancing it.\nEncode a value.\nEncodes the type into the <code>out</code> buffer.\nEncodes the header into the <code>out</code> buffer.\nEncode a type with a known maximum size.\nEncode all items from an iterator.\nEncode a list of items.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDecode the next item from the buffer.\nImplement <code>MaxEncodedLen</code> and <code>MaxEncodedLenAssoc</code> for a type.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the length of the encoding of this type in bytes.\nReturns the length of the encoding of this type in bytes.\nReturns the length of the encoded header.\nDetermine the length in bytes of the length prefix of an …\nReturns the total length of the encoded header and payload.\nTrue if list, false otherwise.\nCalculate the length of a list.\nInstantiate an RLP decoder with a payload slice.\nLength of the payload in bytes.\nExpected length.\nActual length.")