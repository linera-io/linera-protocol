searchState.loadedDescShard("aws_smithy_http", 0, "Core HTTP primitives for service clients generated by …\nCode for resolving an endpoint (URI) that a request should …\nUtilities for parsing information from headers\nFormatting values as Smithy httpLabel\nDeprecated metadata type.\nUtilities for writing Smithy values into a query string.\nContains the error value\nContains the success value\nAn endpoint-resolution-specific Result. Contains either an …\nApply <code>endpoint</code> to <code>uri</code>\nErrors related to endpoint resolution and validation\nAn error that occurs when an endpoint is found to be …\nEndpoint resolution failed\nConstruct a build error for a missing scheme\nConstruct a build error for an invalid authority\nConstruct a build error for an invalid URI\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>ResolveEndpointError</code> from a message and a source\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate an <code>ResolveEndpointError</code> with a message\nAdd a source to the error\nAn error was encountered while parsing a header\nGiven two <code>HeaderMap</code>s, merge them together and return the …\nReturns the argument unchanged.\nReturns an iterator over pairs where the first element is …\nCalls <code>U::from(self)</code>.\nRead all the dates from the header map at <code>key</code> according …\nCreate a new parse error with the given <code>message</code>\nRead exactly one or none from a headers iterator\nConditionally quotes and escapes a header value if the …\nConvert a <code>HeaderValue</code> into a <code>Vec&lt;T&gt;</code> where <code>T: FromStr</code>\nConvert a <code>HeaderValue</code> into a <code>Vec&lt;T&gt;</code> where <code>T: Parse</code>\nGiven an HTTP request, set a request header if that header …\nGiven an HTTP response, set a response header if that …\nAttach a source to this error.\nThe default strategy when parsing an <code>httpLabel</code>. Only one …\nThe encoding strategy used when parsing an <code>httpLabel</code>.\nWhen parsing an <code>httpLabel</code>, this strategy will attempt to …\nFormat a given <code>httpLabel</code> as a string according to an …\nFormat a given <code>DateTime</code> as a string according to an …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMetadata added to the <code>ConfigBag</code> that identifies the API …\nSimple abstraction to enable appending params to a string …\nFormat a given string as a query string.\nFormat a given <code>DateTime</code> as a query string.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new query string writer.\nAdd a new key and value pair to this writer.\nAdd a new value (which is its own key) to this writer.")