searchState.loadedDescShard("outref", 0, "Out reference (<code>&amp;&#39;a out T</code>).\nExtension trait for converting a mutable reference to an …\nOut reference (<code>&amp;&#39;a out T</code>).\nReturns an unsafe mutable pointer to the value.\nReturns an unsafe mutable pointer to the slice’s buffer.\nReturns an out reference to self.\nConverts to a mutable (unique) reference to the value.\nReturns the argument unchanged.\nForms an <code>Out&lt;&#39;a, T&gt;</code>.\nForms an <code>Out&lt;&#39;a, [T]&gt;</code>.\nForms an <code>Out&lt;&#39;a, T&gt;</code> from an uninitialized value.\nForms an <code>Out&lt;&#39;a, [T]&gt;</code> from an uninitialized slice.\nCalls <code>U::from(self)</code>.\nConverts to <code>&amp;&#39;a mut MaybeUninit&lt;T&gt;</code>\nConverts to <code>&amp;&#39;a mut [MaybeUninit&lt;T&gt;]</code>\nReturns true if the slice has a length of 0.\nReturns the number of elements in the slice.\nForms an <code>Out&lt;&#39;a, T&gt;</code>\nReborrows the out reference for a shorter lifetime.")