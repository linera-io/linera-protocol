searchState.loadedDescShard("bytecheck", 0, "bytecheck\nAn error resulting from an invalid array.\nAn error resulting from an invalid boolean.\nAn error resulting from an invalid <code>CStr</code>.\nAn error resulting from an invalid character.\nA type that can check whether a pointer points to a valid …\nAn element of the slice failed to validate\nDerives <code>CheckBytes</code> for the labeled type.\nAn error resulting from an invalid enum.\nAn error that can be debugged and displayed.\nThe error that may result from checking the type.\nThe type used for boxing errors.\nA struct variant was invalid\nThe enum tag was invalid\nA tuple variant was invalid\nThe integer was zero\nThe string did not end with a null terminator\nAn error resulting from an invalid <code>NonZero</code> integer.\nAn error resulting from an invalid slice.\nAn error resulting from an invalid str.\nAn error resulting from an invalid struct.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nThe given tuple member was invalid.\nAn error resulting from an invalid tuple.\nAn error resulting from an invalid tuple.\nAn error resulting from an invalid tuple.\nAn error resulting from an invalid tuple.\nAn error resulting from an invalid tuple.\nAn error resulting from an invalid tuple.\nAn error resulting from an invalid tuple.\nAn error resulting from an invalid tuple.\nAn error resulting from an invalid tuple.\nAn error resulting from an invalid tuple.\nAn error resulting from an invalid tuple.\nAn error resulting from an invalid tuple.\nAn error resulting from an invalid tuple struct.\nThe UTF-8 string failed to validate\nThe UTF-8 C string failed to validate\nGets this error as an <code>std::error::Error</code>.\nChecks whether the given pointer points to a valid value …\nThe error that occured while validating the invalid element\nThe index of the struct field that was invalid\nThe name of the struct field that was invalid\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe index of the invalid element\nThe error that occurred while validating the field\nThe error that occurred while validating the field\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe byte value of the invalid boolean\nThe <code>u32</code> value of the invalid character\nThe error that occurred while validating the variant\nThe error that occurred while validating the variant\nThe name of the variant that was invalid\nThe name of the variant that was invalid\nThe error that occured while validating the invalid element\nThe index of the invalid element")