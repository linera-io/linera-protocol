searchState.loadedDescShard("alloy_eip2930", 0, "EIP-2930 types.\nAccessList as defined in EIP-2930\nA list of addresses and storage keys that the transaction …\n<code>AccessListResult</code> for handling errors from …\nAccess list with gas used appended.\nList with accounts accessed during transaction.\nList with accounts accessed during transaction.\nAdds an address to the access list and returns <code>true</code> if the …\nAccount addresses that would be loaded at the start of …\nChecks if the access list contains the specified address.\nChecks if a specific storage slot within an account is …\nEnsures the result is OK, returning <code>AccessListWithGasUsed</code> …\nOptional error message if the transaction failed.\nReturns an iterator over the list’s addresses and …\nConverts the list into a vec, expected by revm\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEstimated gas used with access list.\nEstimated gas used with access list.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the type and returns an iterator over the list’…\nConsumes the type and converts the list into a vec, …\nChecks if there is an error in the result.\nCalculates a heuristic for the in-memory size of the …\nCalculates a heuristic for the in-memory size of the …\nKeys of storage that would be loaded at the start of …\nReturns the total number of storage keys in this access …")