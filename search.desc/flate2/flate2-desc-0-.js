searchState.loadedDescShard("flate2", 0, "A DEFLATE-based stream compression/decompression library\nIndicates that forward progress is not possible due to …\nRaw in-memory compression stream for blocks of data.\nError returned when a compression object is used …\nWhen compressing data, the compression level can be …\nThe CRC calculated by a <code>CrcReader</code>.\nA wrapper around a <code>Read</code> that calculates the CRC.\nA wrapper around a <code>Write</code> that calculates the CRC.\nRaw in-memory decompression stream for blocks of data.\nError returned when a decompression object finds that the …\nPending input is processed and pending output is flushed.\nPending input is processed and pending output is flushed.\nValues which indicate the form of flushing to be used when …\nValues which indicate the form of flushing to be used when …\nAll output is flushed as with <code>Flush::Sync</code> and the …\nA builder structure to create a new gzip Encoder.\nA structure representing the header of a gzip stream.\nA typical parameter for passing to …\nA typical parameter for passing to …\nIndicates success.\nAll pending output is flushed to the output buffer, but …\nPossible status results of compressing some data or …\nIndicates that all input has been consumed and all output …\nAll pending output is flushed to the output buffer and the …\nAll pending output is flushed to the output buffer and the …\nThe number of bytes that have been used to calculate the …\nOptimize for the size of data being encoded.\nConsume this builder, creating a reader encoder in the …\nTypes which operate over <code>BufRead</code> streams, both encoders …\nCombine the CRC with the CRC for the subsequent block of …\nReturns the <code>comment</code> field of this gzip stream’s header, …\nConfigure the <code>comment</code> field in the gzip header.\nCompresses the input data into the output, consuming only …\nCompresses the input data into the extra space of the …\nGet the Crc for this <code>CrcReader</code>.\nGet the Crc for this <code>CrcWriter</code>.\nDecompresses the input data into the output, consuming …\nDecompresses the input data into the extra space in the …\nReturns the <code>extra</code> field of this gzip stream’s header, if …\nConfigure the <code>extra</code> field in the gzip header.\nOptimize for the best speed of encoding.\nReturns the <code>filename</code> field of this gzip stream’s header, …\nConfigure the <code>filename</code> field in the gzip header.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a mutable reference to the reader that is wrapped by …\nGet a mutable reference to the writer that is wrapped by …\nGet the reader that is wrapped by this <code>CrcReader</code> by …\nGet the writer that is wrapped by this <code>CrcWriter</code> by …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the reader that is wrapped by this <code>CrcReader</code>.\nGet the writer that is wrapped by this <code>CrcWriter</code>.\nReturns an integer representing the compression level, …\nRetrieve the implementation’s message about why the …\nRetrieve the implementation’s message about why the …\nThis gives the most recent modification time of the …\nConfigure the <code>mtime</code> field in the gzip header.\nReturns the most recent modification time represented by a …\nIndicates whether decompression failed due to requiring a …\nCreate a new CRC.\nCreate a new <code>CrcReader</code>.\nCreate a new <code>CrcWriter</code>.\nCreate a new blank builder with no header by default.\nCreates a new object ready for compressing data that it’…\nCreates a new object ready for decompressing data that it…\nCreates a new description of the compression level with an …\nNo compression is to be performed, this may actually …\nReturns the <code>operating_system</code> field of this gzip stream’s …\nConfigure the <code>operating_system</code> field in the gzip header.\nTypes which operate over <code>Read</code> streams, both encoders and …\nConsume this builder, creating a reader encoder in the …\nReset the CRC.\nReset the Crc in this <code>CrcReader</code>.\nReset the Crc in this <code>CrcWriter</code>.\nQuickly resets this compressor without having to …\nPerforms the equivalent of replacing this decompression …\nReturns the current crc32 checksum.\nReturns the total number of input bytes which have been …\nReturns the total number of input bytes which have been …\nReturns the total number of output bytes which have been …\nReturns the total number of output bytes which have been …\nUpdate the CRC with the bytes in <code>data</code>.\nTypes which operate over <code>Write</code> streams, both encoders and …\nConsume this builder, creating a writer encoder in the …\nA DEFLATE decoder, or decompressor.\nA DEFLATE encoder, or compressor.\nA decoder for a single member of a gzip file.\nA gzip streaming encoder\nA gzip streaming decoder that decodes a gzip file that may …\nA ZLIB decoder, or decompressor.\nA ZLIB encoder, or compressor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAcquires a mutable reference to the underlying stream\nAcquires a mutable reference to the underlying stream\nAcquires a mutable reference to the underlying reader.\nAcquires a mutable reference to the underlying stream.\nAcquires a mutable reference to the underlying stream.\nAcquires a mutable reference to the underlying stream\nAcquires a mutable reference to the underlying stream\nAcquires a reference to the underlying reader\nAcquires a reference to the underlying stream\nAcquires a reference to the underlying reader.\nAcquires a reference to the underlying reader.\nAcquires a reference to the underlying reader.\nAcquires a reference to the underlying reader\nAcquires a reference to the underlying stream\nReturns the header associated with this stream, if it was …\nReturns the current header associated with this stream, if …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this encoder, returning the underlying reader.\nConsumes this decoder, returning the underlying reader.\nReturns the underlying stream, consuming this encoder\nConsumes this decoder, returning the underlying reader.\nConsumes this decoder, returning the underlying reader.\nConsumes this encoder, returning the underlying reader.\nConsumes this decoder, returning the underlying reader.\nCreates a new encoder which will read uncompressed data …\nCreates a new decoder which will decompress data read from …\nCreates a new encoder which will use the given compression …\nCreates a new decoder from the given reader, immediately …\nCreates a new decoder from the given reader, immediately …\nCreates a new encoder which will read uncompressed data …\nCreates a new decoder which will decompress data read from …\nCreates a new encoder with the given <code>compression</code> settings …\nCreates a new decoder which will decompress data read from …\nResets the state of this encoder entirely, swapping out …\nResets the state of this decoder entirely, swapping out …\nResets the state of this encoder entirely, swapping out …\nResets the state of this decoder entirely, swapping out …\nResets the state of this decoder’s data\nReturns the number of bytes that have been read into this …\nReturns the number of bytes that the decompressor has …\nReturns the number of bytes that have been read into this …\nReturns the number of bytes that the decompressor has …\nReturns the number of bytes that the compressor has …\nReturns the number of bytes that the decompressor has …\nReturns the number of bytes that the compressor has …\nReturns the number of bytes that the decompressor has …\nA DEFLATE decoder, or decompressor.\nA DEFLATE encoder, or compressor.\nA decoder for a single member of a gzip file.\nA gzip streaming encoder\nA gzip streaming decoder that decodes a gzip file that may …\nA ZLIB decoder, or decompressor.\nA ZLIB encoder, or compressor.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAcquires a mutable reference to the underlying stream\nAcquires a mutable reference to the underlying stream\nAcquires a mutable reference to the underlying reader.\nAcquires a mutable reference to the underlying stream.\nAcquires a mutable reference to the underlying stream.\nAcquires a mutable reference to the underlying stream\nAcquires a mutable reference to the underlying stream\nAcquires a reference to the underlying reader\nAcquires a reference to the underlying stream\nAcquires a reference to the underlying reader.\nAcquires a reference to the underlying reader.\nAcquires a reference to the underlying reader.\nAcquires a reference to the underlying stream\nAcquires a reference to the underlying stream\nReturns the header associated with this stream, if it was …\nReturns the current header associated with this stream, if …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this encoder, returning the underlying reader.\nConsumes this decoder, returning the underlying reader.\nReturns the underlying stream, consuming this encoder\nConsumes this decoder, returning the underlying reader.\nConsumes this decoder, returning the underlying reader.\nConsumes this encoder, returning the underlying reader.\nConsumes this decoder, returning the underlying reader.\nCreates a new encoder which will read uncompressed data …\nCreates a new decoder which will decompress data read from …\nCreates a new encoder which will use the given compression …\nCreates a new decoder from the given reader, immediately …\nCreates a new decoder from the given reader, immediately …\nCreates a new encoder which will read uncompressed data …\nCreates a new decoder which will decompress data read from …\nSame as <code>new</code>, but the intermediate buffer for data is …\nCreates a new decoder which will decompress data read from …\nCreates a new encoder with the given <code>compression</code> settings …\nCreates a new decoder which will decompress data read from …\nCreates a new decoder which will decompress data read from …\nResets the state of this encoder entirely, swapping out …\nResets the state of this decoder entirely, swapping out …\nResets the state of this encoder entirely, swapping out …\nResets the state of this decoder entirely, swapping out …\nReturns the number of bytes that have been read into this …\nReturns the number of bytes that the decompressor has …\nReturns the number of bytes that have been read into this …\nReturns the number of bytes that the decompressor has …\nReturns the number of bytes that the compressor has …\nReturns the number of bytes that the decompressor has …\nReturns the number of bytes that the compressor has …\nReturns the number of bytes that the decompressor has …\nA DEFLATE decoder, or decompressor.\nA DEFLATE encoder, or compressor.\nA decoder for a single member of a gzip file.\nA gzip streaming encoder\nA gzip streaming decoder that decodes a gzip file with …\nA ZLIB decoder, or decompressor.\nA ZLIB encoder, or compressor.\nConsumes this encoder, flushing the output stream.\nConsumes this encoder, flushing the output stream.\nFinish encoding this stream, returning the underlying …\nConsumes this decoder, flushing the output stream.\nConsumes this decoder, flushing the output stream.\nConsumes this encoder, flushing the output stream.\nConsumes this encoder, flushing the output stream.\nConsumes this encoder, flushing the output stream.\nConsumes this encoder, flushing the output stream.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAcquires a mutable reference to the underlying writer.\nAcquires a mutable reference to the underlying writer.\nAcquires a mutable reference to the underlying writer.\nAcquires a mutable reference to the underlying writer.\nAcquires a mutable reference to the underlying writer.\nAcquires a mutable reference to the underlying writer.\nAcquires a mutable reference to the underlying writer.\nAcquires a reference to the underlying writer.\nAcquires a reference to the underlying writer.\nAcquires a reference to the underlying writer.\nAcquires a reference to the underlying writer.\nAcquires a reference to the underlying writer.\nAcquires a reference to the underlying writer.\nAcquires a reference to the underlying writer.\nReturns the header associated with this stream.\nReturns the header associated with the current member.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new encoder which will write compressed data to …\nCreates a new decoder which will write uncompressed data …\nCreates a new encoder which will use the given compression …\nCreates a new decoder which will write uncompressed data …\nCreates a new decoder which will write uncompressed data …\nCreates a new encoder which will write compressed data to …\nCreates a new decoder which will write uncompressed data …\nCreates a new encoder which will write compressed data to …\nCreates a new decoder which will write uncompressed data …\nResets the state of this encoder entirely, swapping out …\nResets the state of this decoder entirely, swapping out …\nResets the state of this encoder entirely, swapping out …\nResets the state of this decoder entirely, swapping out …\nReturns the number of bytes that have been written to this …\nReturns the number of bytes that the decompressor has …\nReturns the number of bytes that have been written to this …\nReturns the number of bytes that the decompressor has …\nReturns the number of bytes that the compressor has …\nReturns the number of bytes that the decompressor has …\nReturns the number of bytes that the compressor has …\nReturns the number of bytes that the decompressor has …\nAttempt to finish this output stream, writing out final …\nAttempt to finish this output stream, writing out final …\nAttempt to finish this output stream, writing out final …\nAttempt to finish this output stream, writing out final …\nAttempt to finish this output stream, writing out final …\nAttempt to finish this output stream, writing out final …\nAttempt to finish this output stream, writing out final …")