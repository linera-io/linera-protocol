searchState.loadedDescShard("linera_wasmer_compiler_cranelift", 0, "A WebAssembly <code>Compiler</code> implementation using Cranelift.\nGlobal configuration options used to create an …\nA compiler that compiles a WebAssembly module with …\nPossible optimization levels for the Cranelift codegen …\nOffset to the defined memory.\nOffset to the imported memory.\nMemory definition offset in the VMContext structure.\nModuleInfo <code>vmctx</code> related info.\nNo optimizations performed, minimizes compilation time by …\nNot available.\nGenerates the fastest possible code, but may take longer.\nSimilar to <code>speed</code>, but also performs transformations aimed …\nVersion number of this crate.\nValue ranges for functions.\nEnable NaN canonicalization.\nCompile the module using Cranelift, producing a …\nTransform it into the compiler\nGets the WebAssembly features for this Compiler\nGenerates the flags for the compiler\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the middlewares for this compiler\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGenerates the ISA for the provided target\nCreate a trampoline for invoking a WebAssembly function.\nThe memory definition offset in the VMContext structure.\nCreates a new Cranelift compiler\nCreates a new configuration object with the default …\nThe optimization levels when optimizing the IR.\nPushes a middleware onto the back of the middleware chain.\nThe functions stack slots.")