searchState.loadedDescShard("humantime", 0, "Human-friendly time parser and formatter\nA wrapper for duration that has <code>FromStr</code> implementation\nError parsing human-friendly duration\nThe value was an empty string (or consists only whitespace)\nA wrapper type that allows you to Display a Duration\nInvalid character during parsing\nBad character where digit is expected\nOther formatting errors\nNon-numeric value where number is expected\nThe numeric value is too large\nNumeric component is out of range\nA wrapper type that allows you to Display a SystemTime\nA wrapper for SystemTime that has <code>FromStr</code> implementation\nError parsing datetime (timestamp)\nUnit in the number is not one of allowed units\nFormats duration into a human-readable string\nFormat an RFC3339 timestamp <code>2018-02-14T00:28:07Z</code>\nFormat an RFC3339 timestamp <code>2018-02-14T00:28:07.000000Z</code>\nFormat an RFC3339 timestamp <code>2018-02-14T00:28:07.000Z</code>\nFormat an RFC3339 timestamp <code>2018-02-14T00:28:07.000000000Z</code>\nFormat an RFC3339 timestamp <code>2018-02-14T00:28:07Z</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a reference to the <code>SystemTime</code> that is being …\nReturns a reference to the <code>Duration</code> that is being …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nParse duration object <code>1hour 12min 5s</code>\nParse RFC3339 timestamp <code>2018-02-14T00:28:07Z</code>\nParse RFC3339-like timestamp <code>2018-02-14 00:28:07</code>\nEnd of the invalid unit inside the original string\nStart of the invalid unit inside the original string\nThe unit verbatim\nA number associated with the unit")