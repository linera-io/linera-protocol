searchState.loadedDescShard("async_graphql", 0, "A GraphQL server library implemented in Rust\nNon-empty array of queries\nResponse for batch queries\nBatch support for GraphQL requests, which is either a …\nResponse for batchable queries\nA binary.\nA boolean.\nCache control value\nDefine a complex GraphQL object for SimpleObject’s …\nRepresents a custom directive.\nRepresents a custom input value validator.\nAttach a description to <code>Object</code>, <code>Scalar</code> or <code>Subscription</code>.\nThis type represents errors that can occur when …\nDefine a directive for query.\nDisables introspection\nEnables introspection\nAn enum. These are typically in <code>SCREAMING_SNAKE_CASE</code>.\nDefine a GraphQL enum\nContains the error value\nContains the error value\nContains the error value\nContains the error value\nAn error with a message and optional extensions.\nExtensions to the error.\nAn error which can be extended into a <code>Error</code>.\nRepresents a GraphQL executor\nExtensions of a query.\nThe executor itself also has error handling, so it can …\nA field in an object.\nAn alias of async_graphql::Error. Present for backward …\nAn alias of async_graphql::Result. Present for backward …\nField guard\nAn extension trait for <code>Guard</code>.\nAn index in a list.\nDefine a GraphQL input object\nA GraphQL input object.\nRepresents a GraphQL input type.\nAn error parsing an input value.\nAn error parsing a value of type <code>T</code>.\nDefine a GraphQL interface\nA GraphQL interface.\nIntrospection mode\nIntrospection only\nThe request’s files map was invalid.\nThe request’s multipart data was invalid.\nThe request’s syntax was invalid.\nAn IO error occurred.\nA list of values.\nA selection performed by a query.\nDefine a merged object with multiple object types.\nDefine a merged subscription with multiple subscription …\nFiles were missing the request.\nMissing “map” part for multipart request.\nMissing “operators” part for multipart request.\nA GraphQL name.\nDefine a NewType Scalar\nIt’s not an upload operation\n<code>null</code>.\nRepresents a JSON number, whether integer or floating …\nA number.\nAn object. This is a map of keys to values.\nDefine a GraphQL object with methods\nA GraphQL object.\nContains the success value\nContains the success value\nContains the success value\nContains the success value\nDefine a GraphQL oneof input object\nA GraphQL oneof input object.\nRepresents a GraphQL output type.\nAn error parsing the request.\nA segment of path to a resolver.\nThe request’s payload is too large, and this server …\nThe raw type used for validator.\nGraphQL request.\nQuery response\nAn alias for <code>Result&lt;T, Error&gt;</code>.\nExtend a <code>Result</code>’s error value with <code>ErrorExtensions</code>.\nOptions for SDL export\nDefine a Scalar\nGraphQL schema.\nSchema builder\nThis type represents errors that can occur when …\nAn error in a GraphQL server.\nAlias for <code>Result&lt;T, ServerError&gt;</code>.\nDefine a GraphQL object with fields\nSingle query\nResponse for single queries\nExecute all validation rules.\nA string.\nDefine a GraphQL subscription\nA GraphQL subscription object\nUsed to specify the GraphQL Type name.\nDefine a GraphQL union\nA GraphQL interface.\nThe request is a batch request, but the server does not …\nValidation mode\nValidation results.\nA resolved GraphQL value, for example <code>1</code> or <code>&quot;Hello World!&quot;</code>.\nVariables of a query.\nPerform <code>and</code> operator on two rules\nPerform <code>and</code> operator on two rules\nRepresents the number as f64 if possible. Returns None …\nIf the <code>Number</code> is an integer, represent it as i128 if …\nIf the <code>Number</code> is an integer, represent it as i64 if …\nReturns a reference to the raw value.\nGet the name as a string.\nIf the <code>Number</code> is an integer, represent it as u128 if …\nIf the <code>Number</code> is an integer, represent it as u64 if …\nCreate a schema builder\nCreate a schema builder and specifies a list to ignore …\nSet the cache control of the response.\nGets cache control value\nCache control value\nCache control\nCheck whether the guard will allow access to the field.\nCheck the value is valid.\nQuery complexity\nEnable <code>composeDirective</code> if federation is enabled\nQuery context.\nCreate type information in the registry and return …\nCreate type information in the registry and return …\nCreate type information in the registry and return …\nA custom error message.\nAdd a global data that can be accessed in the <code>Schema</code>. You …\nInsert some data for this request.\nInsert some data for  for each requests.\nThe data of the request that can be accessed through …\nData of query result\nQuery depth\nRegister a custom directive.\nDisable introspection queries.\nDisable introspection queries for this request.\nDisable introspection queries for each request.\nDisable field suggestions.\nEnable federation, which is automatically enabled if the …\nMake the Federation SDL include subscriptions.\nErrors\nExecute a GraphQL query.\nExecute a GraphQL query.\nExecute a GraphQL batch query.\nExecute a GraphQL batch query.\nExecute a GraphQL batch query.\nExecute a GraphQL subscription with session data.\nExecute a GraphQL subscription.\nExecute a GraphQL subscription with session data.\nReturns true if field exists otherwise return false.\nThe expected input type did not match the actual input …\nConvert the error to a <code>Error</code>.\nExtend the result to a <code>Result</code>.\nExtend the error value of the result with the callback.\nAdd extensions to the error, using a callback to make the …\nAdd extensions to the error, using a callback to make the …\nAdd an extension to the schema.\nSet the extension result of the response.\nExtensions for schema\nExtensions to the error.\nExtensions to the error.\nExtensions to the error.\nThe extensions config of the request.\nExtensions result\nExport as Federation SDL(Schema Definition Language)\nGet the field of the selection set with the specified …\nConsumes this builder and returns a schema.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a response from some errors.\nConverts a finite <code>f64</code> to a <code>Number</code>. Infinite or NaN values …\nConverts an <code>i128</code> to a <code>Number</code>. Numbers smaller than …\nGet the values from a JSON value.\nAttempt to convert JSON into a value. This is equivalent …\nConverts a <code>u128</code> to a <code>Number</code>. Numbers greater than u64::MAX …\nInterpret a <code>ConstValue</code> as an instance of type <code>T</code>.\nGet the variables from a GraphQL value.\nGet an extension value.\nA helper module that supports HTTP\nSet the http headers of the response.\nReturns HTTP headers map.\nHTTP headers\nReturns HTTP headers iterator.\nIncludes <code>specifiedBy</code> directive in SDL\nSet the number of spaces to use for each indentation level …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAttempt to convert the value into JSON. This is equivalent …\nExtract the error from the response. Only if the <code>error</code> …\nConvert the error into a server error.\nConvert the error to a server error.\nAttempt to convert the batch request into a single request.\nGet the variables as a GraphQL value.\nConvert this <code>ConstValue</code> into a <code>Value</code>.\nSets the introspection mode for this request (defaults to …\nOnly process introspection queries, everything else is …\nOnly allow introspection queries for each request.\nIntrospection type name\nIntrospection type name\nReturns <code>true</code> if the response is error.\nReturns true if the <code>Number</code> can be represented by f64.\nReturns true if the <code>Number</code> is an integer between <code>i64::MIN</code> …\nReturns <code>true</code> if the response is ok.\nReturns <code>true</code> if all responses are ok.\nReturns true if the <code>Number</code> is an integer between zero and …\nReturns an iterator over the requests.\nReturns an iterator that allows modifying each request.\nSet the maximum complexity a query can have. By default, …\nSet the maximum depth a query can have. By default, there …\nSet the maximum number of directives on a single field. …\nSet the maximum recursive depth a query can have. …\nWhere the error occurred.\nCache max age, <code>-1</code> represent <code>no-cache</code>, default is 0.\nThe error message.\nAn explanatory message of the error.\nThe error message.\nGet all names in this schema\nCreate a schema\nCreate a new name.\nCreate a new server error with the message.\nCreate an error from the given error message.\nCreate a request object with query source.\nCreate a new successful response with the data.\nCreate a <code>SDLExportOptions</code>\nCreate an error with a type that implements <code>Display</code>, and …\nOnly allow introspection queries for this request.\nSpecify the operation name of the request.\nThe operation name of the request.\nPerform <code>or</code> operator on two rules\nPerform <code>or</code> operator on two rules\nOverride the name of the specified input type.\nOverride the name of the specified output type.\nParse from <code>Value</code>. None represents undefined.\nPerforms parsing of query ahead of execution.\nIf the error occurred in a resolver, the path to the error.\nWhen possible, write one-line instead of three-line …\nPropagate the error message to a different type.\nScope is public, default is true.\nQualified typename.\nQualified typename.\nQualified typename.\nQualified typename.\nQualified typename.\nQualified typename.\nThe query source of the request.\nManually register a input type in the schema.\nManually register a output type in the schema.\nResolve an output value to <code>async_graphql::Value</code>.\nCalled at resolve field.\nCalled at resolve field.\nUtilities for implementing <code>OutputType::resolve</code>.\nDefine a scalar\nReturns SDL(Schema Definition Language) of this schema.\nReturns SDL(Schema Definition Language) of this schema …\nGet the <code>SelectionField</code>s for each of the fields covered by …\nSet an extension value.\nSets the parsed query into the request.\nSet a variable to an upload value.\nExport sorted field arguments\nExport sorted enum items\nExport sorted fields\nGet the source of the error.\nThe source of the error.\nThe source of the error.\nThe source of the error.\nConvert a <code>T</code> into <code>ConstValue</code> which is an enum that can …\nConvert to a <code>Value</code> for introspection.\nReturns a GraphQL type name.\nType the name.\nType the name.\nType the name.\nUseful GraphQL types.\nUnset an extension value.\nUploads sent with the request.\nUse spaces for indentation instead of tabs\nSet the validation mode, default is <code>ValidationMode::Strict</code>.\nGet ‘Cache-Control’ header value.\nConstruct a <code>ConstValue</code>.\nSpecify the variables.\nSpecify the variables for each requests.\nThe variables of the request.\nSet an extension value.\nMake all enum variants sorted on introspection queries.\nMake all fields sorted on introspection queries.\nContext object for resolve field\nQuery context.\nContext object for execute directive.\nContext for <code>SelectionSet</code>\nSchema/Context data.\nData related functions of the context.\nWe are currently resolving an element in a list.\nWe are currently resolving a field in an object.\nAn iterator over the parents of a <code>QueryPathNode</code>.\nA path to the current query.\nA segment in the path to the current query.\nSelection field.\nReport a resolver error.\nGet the alias of this field.\nSets a HTTP header to response.\nGet the arguments of this field.\nGet the current query path node, which the next call to …\nGets the global data defined in the <code>Context</code> or <code>Schema</code>.\nGets the global data defined in the <code>Context</code> or <code>Schema</code>.\nGets the global data defined in the <code>Context</code> or <code>Schema</code> or …\nGets the global data defined in the <code>Context</code> or <code>Schema</code> or …\nGets the global data defined in the <code>Context</code> or <code>Schema</code>.\nGets the global data defined in the <code>Context</code> or <code>Schema</code>.\nGet the directives of this field.\nGet the current field.\nGet the current field name.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns whether the HTTP header <code>key</code> is currently set on …\nInsert data.\nSets a HTTP header to response.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a uniform interface to inspect the forthcoming …\nGet the name of this field.\nThe parent node to this, if there is one.\nIterate over the parents of the node.\nThe current path node being resolved.\nThe current path node being resolved.\nThe current path node being resolved.\nThe current path node being resolved.\nThe current path segment being resolved.\nGet all subfields of the current selection set.\nGet the path represented by <code>Vec&lt;String&gt;</code>; numbers will be …\nAnalyzer extension\nRepresents a GraphQL extension\nContext for extension\nExtension factory\nThe remainder of a extension chain for execute.\nThe remainder of a extension chain for parse query.\nThe remainder of a extension chain for subscribe.\nThe remainder of a extension chain for request.\nThe remainder of a extension chain for resolve.\nThe remainder of a extension chain for subscribe.\nThe remainder of a extension chain for validation.\nA future type used to resolve the field\nParameters for <code>Extension::resolve_field_start</code>\nCurrent field alias\nCreate an extended instance.\nGets the global data defined in the <code>Context</code> or <code>Schema</code>.\nGets the global data defined in the <code>Context</code> or <code>Schema</code> or …\nGets the global data defined in the <code>Context</code> or <code>Schema</code>.\nCalled at execute query.\nCurrent field\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf <code>true</code> means the current field is for introspection.\nCurrent field name\nParent type\nCalled at parse query.\nCurrent path node, You can go through the entire path.\nCalled at prepare request.\nRequest-scoped context data shared across all resolvers.\nCalled at start query/mutation request.\nCalled at resolve field.\nCurrent return type, is qualified name.\nCall the Extension::request function of next extension.\nCall the Extension::subscribe function of next extension.\nCall the Extension::prepare_request function of next …\nCall the Extension::parse_query function of next extension.\nCall the Extension::validation function of next extension.\nCall the Extension::execute function of next extension.\nCall the Extension::resolve function of next extension.\nCall the Extension::execute function of next extension …\nSchema-scope context data, [<code>Registry</code>], and custom …\nReturns SDL(Schema Definition Language) of this schema.\nReturns SDL(Schema Definition Language) of this schema …\nExtension-scoped context data shared across all extensions.\nConvert the specified ExecutableDocument into a query …\nCalled at subscribe request.\nCalled at validation query.\nAll known protocols based on WebSocket.\nA websocket message received from the client\nA close message with the close frame.\nA new connection\nConnection terminated by the client\nIndicates whether the user agent should send or receive …\nDefault connection initializer type.\nDefault ping handler type.\nConfig for GraphQL Playground\ngraphql-ws protocol.\nA builder for constructing a GraphiQL (v2) HTML page.\nAlways send user credentials, even for cross-origin calls.\nOptions for <code>receive_multipart</code>.\nNever send or receive user credentials.\nUseful for detecting failed connections, displaying …\nThe response to the Ping message.\nSend user credentials if the URL is on the same origin as …\nThe start of a Websocket subscription\nThe end of a Websocket subscription\nsubscriptions-transport-ws protocol.\nA text WebSocket message\nA GraphQL connection over websocket.\nSpecification of which GraphQL Over WebSockets protocol is …\nAn enum representing the various forms of a WebSocket …\nassets which would be placed in body\nCreates a builder for constructing a GraphiQL (v2) HTML …\nSpecify a connection data.\nCreate a stream for <code>multipart/mixed</code> responses.\nSets credentials option for the fetch requests.\nDefault connection initializer function.\nDefault ping handler function.\nSets the endpoint of the server GraphiQL will connect to.\nReturns a GraphiQL (v2) HTML page.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a ClientMessage from an array of bytes\nCreate a new websocket from <code>ClientMessage</code> stream.\nGenerate simple explorer plugin for GraphiQL (v2)\nGenerate the page for GraphIQL\nassets which would be placed in head\nSets a header to be sent with requests GraphiQL will send.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck accept is multipart-mixed\nSets a timeout for receiving an acknowledgement of the …\nSet maximum file size.\nThe maximum file size.\nSet maximum number of files.\nThe maximum number of files.\nCreate a config for GraphQL playground.\nCreate a new websocket from bytes stream.\nSpecify a connection initialize callback function.\nSpecify a ping callback function.\nParse a GraphQL request from a query string.\nGenerate the page for GraphQL Playground\nSets plugins\nrelated configs which would be placed before loading plugin\nprops which would be passed to the plugin’s constructor\nReceive a GraphQL request from a content type and body.\nReceive a GraphQL batch request from a body as JSON.\nReceive a GraphQL request from a content type and body.\nReceive a GraphQL request from a body as JSON.\nReturns the <code>Sec-WebSocket-Protocol</code> header value for the …\nSets the subscription endpoint of the server GraphiQL will …\nSet subscription endpoint, for example: <code>ws://localhost:8000</code>…\nSets the html document title.\nSet the html document title.\nReturns the contained WsMessage::Close value, consuming …\nReturns the contained WsMessage::Text value, consuming the …\nSets the version of GraphiQL to be fetched.\nSet HTTP header for per query.\nSet Playground setting for per query.\nSets a WS connection param to be sent during GraphiQL WS …\nMessage ID\nMessage ID\nOptional init payload from the client\nAdditional details about the ping.\nAdditional details about the pong.\nThe GraphQL Request - this can be modified by protocol …\nRepresents a GraphQL container object.\nA variant of an enum.\nA GraphQL enum.\nA set of fields on an container that are being selected.\nA GraphQL scalar.\nAdd another set of fields to this set of fields using the …\nCollect all the fields of the container that are queried …\nCollect all the fields of the container that are queried …\nConvert the enum value into a GraphQL value.\nFind the GraphQL entity with the given name from the …\nFind the GraphQL entity with the given name from the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks for a valid scalar value.\nChecks for a valid scalar value.\nGet a list of possible variants of the enum and their …\nThe name of the variant.\nParse a scalar value.\nParse a value as an enum value.\nResolve an container by executing each of the fields …\nResolve an container by executing each of the fields …\nResolves a field value and outputs it as a json value …\nResolve an list by executing each of the items …\nDefine a scalar\nConvert the scalar to <code>Value</code>.\nThe value of the variant.\nAny scalar (For Apollo Federation)\nEmpty mutation\nEmpty subscription\nID scalar\nA scalar that can represent any JSON value.\nSimilar to <code>Option</code>, but it has three states, <code>undefined</code>, <code>null</code>…\nUploaded file\nA file upload value.\nConverts the <code>MaybeUndefined&lt;T&gt;</code> to <code>Option&lt;Option&lt;&amp;U&gt;&gt;</code>.\nConverts the <code>MaybeUndefined&lt;T&gt;</code> to <code>Option&lt;Option&lt;T&gt;&gt;</code>.\nTypes for Relay-compliant server\nReturns <code>true</code> if the <code>MaybeUndefined&lt;T&gt;</code> contains the given …\nReturns <code>true</code> if the <code>MaybeUndefined&lt;T&gt;</code> contains the given …\nThe file data.\nThe content type of the file.\nThe name of the file.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert to a <code>Read</code>.\nReturns true if the <code>MaybeUndefined&lt;T&gt;</code> is null.\nReturns true if the <code>MaybeUndefined&lt;T&gt;</code> is undefined.\nReturns true if the <code>MaybeUndefined&lt;T&gt;</code> contains value.\nMaps a <code>MaybeUndefined&lt;T&gt;</code> to <code>MaybeUndefined&lt;U&gt;</code> by applying …\nMaps a <code>MaybeUndefined&lt;T&gt;</code> to <code>MaybeUndefined&lt;U&gt;</code> by applying …\nReturns the size of the file, in bytes.\nConverts the <code>MaybeUndefined&lt;T&gt;</code> to <code>Option&lt;T&gt;</code>.\nTransposes a <code>MaybeUndefined</code> of a <code>Result</code> into a <code>Result</code> of a …\nAttempt to clone the upload value. This type’s <code>Clone</code> …\nUpdate <code>value</code> if the <code>MaybeUndefined&lt;T&gt;</code> is not undefined.\nBorrow the value, returns <code>None</code> if the the <code>MaybeUndefined&lt;T&gt;</code>…\nGet the upload value.\nConnection type\nUsed to specify the connection name.\nCursor type\nName the connection type by default with the default …\nName the edge type by default with the default format.\nDisable (at compile time) <code>nodes</code> field in GQL output of …\nAn edge in a connection.\nUsed to specify the edge name.\nEmpty additional fields\nEnable (at compile time) <code>nodes</code> field in GQL output of …\nError type for <code>decode_cursor</code>.\nAllow switch if <code>Connection</code> contains <code>nodes</code> field in GQL …\nA opaque cursor that encode/decode the value to base64\nInformation about pagination in a connection\nAdditional fields for connection object.\nA cursor for use in pagination\nDecode cursor from string.\nAll edges of the current page.\nEncode cursor to string.\nWhen paginating forwards, the cursor to continue.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf <code>true</code> means has next page.\nWhen paginating forwards, are there more items?\nIf <code>true</code> means has previous page.\nWhen paginating backwards, are there more items?\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new connection.\nCreate a new edge.\nThe item at the end of the edge\nParses the parameters and executes the query.\nParses the parameters and executes the query and return a …\nWhen paginating backwards, the cursor to continue.\nReturns the edge type name.\nReturns the connection type name.\nCreate a new connection, it can have some additional …\nCreate a new edge, it can have some additional fields.")