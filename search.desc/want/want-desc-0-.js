searchState.loadedDescShard("want", 0, "A Futures channel-like utility to signal when a value is …\nThe <code>Taker</code> has canceled its interest in a value.\nAn entity that gives a value when wanted.\nA cloneable <code>Giver</code>.\nAn entity that wants a value.\nSignal to the <code>Giver</code> that the want is canceled.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMark the state as idle, if the Taker currently is wanting.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if the <code>Taker</code> has canceled interest without parking a …\nCheck if the <code>Taker</code> has canceled interest without parking a …\nCheck if the <code>Taker</code> has called <code>want()</code> without parking a …\nCheck if the <code>Taker</code> has called <code>want()</code> without parking a …\nCreate a new <code>want</code> channel.\nPoll whether the <code>Taker</code> has registered interest in another …\nConverts this into a <code>SharedGiver</code>.\nReturns a <code>Future</code> that fulfills when the <code>Taker</code> has done …\nSignal to the <code>Giver</code> that a value is wanted.")