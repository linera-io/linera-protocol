searchState.loadedDescShard("pem", 0, "This crate provides a parser and encoder for PEM-encoded …\nWindows-like (<code>\\r\\n</code>)\nConfiguration for Pem encoding\nContains the error value\nProvides access to the headers that might be found in a …\nIterator across all headers in the Pem-encoded data\nUnix-like (<code>\\n</code>)\nEnum describing line endings\nContains the success value\nA representation of Pem-encoded data\nThe <code>pem</code> error type.\nThe <code>pem</code> result type.\nGet the last set value corresponding to the header key\nGet the binary contents extracted from the Pem-encoded data\nEncode a PEM struct into a PEM-encoded data string\nEncode a PEM struct into a PEM-encoded data string with …\nEncode multiple PEM structs into a PEM-encoded data string\nEncode multiple PEM structs into a PEM-encoded data string …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the last set value corresponding to the header key\nGet the header map for the headers in the Pem-encoded data\nGet the header map for modification\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the Pem struct to get an owned copy of the binary …\nGet an iterator across all header key-value pairs\nCreate a new encode config with default values.\nCreate a new Pem struct\nParses a single PEM-encoded data from a data-type that can …\nParses a set of PEM-encoded data from a data-type that can …\nSet the line ending to use for the encoding.\nSet the line length to use for the encoding.\nGet the tag extracted from the Pem-encoded data")