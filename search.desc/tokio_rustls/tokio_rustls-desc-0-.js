searchState.loadedDescShard("tokio_rustls", 0, "Asynchronous TLS/SSL streams for Tokio using Rustls.\nFuture returned from <code>TlsAcceptor::accept</code> which will resolve\nFuture returned from <code>TlsConnector::connect</code> which will …\nLike Accept, but returns <code>IO</code> on failure.\nLike Connect, but returns <code>IO</code> on failure.\nA wrapper around a <code>rustls::ServerConfig</code>, providing an …\nA wrapper around a <code>rustls::ClientConfig</code>, providing an …\nUnified TLS stream type\nGet a read-only reference to underlying config\nGet a read-only reference to underlying config\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTakes back the client connection. Will return <code>None</code> if …\nA wrapper around an underlying raw stream which implements …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNote: that it does not guarantee the final data to be sent.\nNote: that it does not guarantee the final data to be sent.\nA wrapper around an underlying raw stream which implements …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNote: that it does not guarantee the final data to be sent.\nNote: that it does not guarantee the final data to be sent.")