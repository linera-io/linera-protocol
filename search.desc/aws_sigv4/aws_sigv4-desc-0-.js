searchState.loadedDescShard("aws_sigv4", 0, "Provides functions for calculating Sigv4 signing keys, …\nThe version of the signing algorithm to use\nContainer for the signed output and the signature.\nThe SigV4 signing algorithm.\nThe SigV4a signing algorithm.\nReturns the argument unchanged.\nReturns the argument unchanged.\nUtilities to sign HTTP requests.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nDecomposes the <code>SigningOutput</code> into a tuple of the signed …\nCreates a new <code>SigningOutput</code>\nReturns the signed output\nFunctions to create signing keys and calculate signatures.\nReturns the signature as a lowercase hex string\nA body composed of a slice of bytes\nDon’t normalize the URI path (S3, for example, rejects …\nRe-encode the resulting URL (e.g. %30 becomes `%2530)\nNormalize the URI path according to RFC3986\nExclude in the canonical request.\nPlace the signature in the request headers\nInclude in the canonical request before calculating the …\nDo not add an additional header when creating the …\nHTTP payload checksum type\nConfig value to specify how to encode the request URL when …\nA precomputed body checksum. The checksum should be a …\nPlace the signature in the request query parameters\nConfig value to specify whether X-Amz-Security-Token …\nA signable HTTP request body\nRepresents all of the information necessary to sign an …\nWhere to place signing values in the HTTP request\nError signing request\nInstructions for applying a signature to an HTTP request.\nParameters for signing an HTTP request.\nHTTP-specific signing settings\nTake the resulting URL as-is\nSet when a streaming body has checksum trailers.\nAn unsigned payload\nConfig value to specify whether the canonical request’s …\nSign with the SigV4 algorithm\nAdd x-amz-checksum-sha256 to the canonical request\nReturn the name of the configured signing algorithm.\nApplies the instructions to the given <code>request</code>.\nApplies the instructions to the given <code>request</code>.\nReturns the signable body\nCreate a new empty signable body\nHeaders that should be excluded from the signing process\nFor presigned requests, how long the presigned request is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a reference to the headers that should be added to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the headers and query params that should be …\nReturn a reference to the name in the signing params.\nCreates a new <code>SignableRequest</code>.\nReturns a reference to the query parameters that should be …\nAdd an additional checksum header\nSpecifies how to encode the request URL when signing. Some …\nIf the signing params are for SigV4, return the region. …\nSome services require X-Amz-Security-Token to be included …\nSome services require an alternative session token header …\nReturn a reference to the settings held by the signing …\nReturn a mutable reference to the settings held by the …\nProduces a signature for the given <code>request</code> and returns …\nWhere to put the signature\nReturn the name of the signing scheme\nReturn a reference to the time in the signing params.\nSpecifies whether the absolute path component of the URI …\nSupport for Sigv4 signing\nParameters to use when signing.\nReturn the name of the algorithm used to sign requests\nReturns a builder that can create new <code>SigningParams</code>.\nCalculates a Sigv4 signature\nReturns the argument unchanged.\nGenerates a signing key for Sigv4\nCalls <code>U::from(self)</code>.\nReturns the signing name that will be used to sign requests\nReturns the region that will be used to sign SigV4 requests\nBuilder and error for creating <code>SigningParams</code>\n<code>SigningParams</code> builder error\nBuilder that can create new <code>SigningParams</code>\nBuilds an instance of <code>SigningParams</code>. Will yield a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the identity (required)\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the name (required)\nSets the region (required)\nSets the identity (required)\nSets the name (required)\nSets the region (required)\nSets additional signing settings (required)\nSets the time to be used in the signature (required)\nSets additional signing settings (required)\nSets the time to be used in the signature (required)")