searchState.loadedDescShard("alloy_signer_local", 0, "alloy-signer-local\n<code>ecdsa</code> error.\n<code>hex</code> error.\n<code>std::io</code> error.\nAn Ethereum private-public key pair which can be used for …\nError thrown by <code>LocalSigner</code>.\nA signer instantiated with a locally stored private key.\nReturns this signer’s address.\nBorrow the secret <code>NonZeroScalar</code> value for this key.\nReturns this signer’s chain ID.\nReturns this signer’s credential.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>LocalSigner</code> instance from a raw scalar …\nCreates a new <code>LocalSigner</code> instance from a raw scalar …\nCreates a new <code>LocalSigner</code> instance from a <code>SigningKey</code>.\nCreates a new <code>LocalSigner</code> instance from a raw scalar …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this signer and returns its credential.\nConstruct a new credential with an external <code>PrehashSigner</code>.\nConvenience function that returns this signer’s ethereum …\nCreates a new random keypair seeded with <code>rand::thread_rng()</code>…\nCreates a new random keypair seeded with the provided RNG.\nSerialize this <code>LocalSigner</code>’s <code>SigningKey</code> as a <code>B256</code> byte …\nSerialize this <code>LocalSigner</code>’s <code>SigningKey</code> as a <code>FieldBytes</code> …")