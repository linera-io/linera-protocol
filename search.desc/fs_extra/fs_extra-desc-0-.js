searchState.loadedDescShard("fs_extra", 0, "A structure which includes information about the current …\nAlready copied bytes\nCopies a list of directories and files to another place …\nCopies a list of directories and files to another place …\nThis module includes additional methods for working with …\nName of currently copied folder.\nThe error type for fs_extra operations on files and …\nThis module includes additional methods for working with …\nCopied bytes on this time for file.\nName of currently copied file.\nSize of currently copied file.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMoves a list of directories and files to another place …\nMoves a list of directories and files to another place …\nRemoves a list of files or directories.\nTransit state\nAll the bytes which should be copied or moved (dir size).\nAbort current operation.\nLast access time for directory entry.\nReturn or not return base information target folder.\nBoolean type\nContinue execute process if process not have error and …\nOptions and flags which can be used to configure how a …\nCreated time for directory entry.\nA structure which include information about directory\nAvailable attributes for get information about directory …\nAvailable types for directory entry.\nDos path to file or directory.\nPause state when destination path exists.\nFile extension.\nFile size in bytes.\nFolder name or file name with extension.\nReturn whether entry is directory or not.\nReturn whether entry is file or not.\nResult returned by the <code>ls</code> function.\nLast modification time for directory entry.\nFolder name or file name without extension.\nPause state when current process does not have the …\nStandard state.\nRewrite exist file or directory.\nRewrite for all exist files or directories.\nPath to file or directory.\nRetry current operation.\nSize file or directory in bytes.\nSkip current problem file or directory.\nSkip for all problems file or directory.\nString type\nSystemTime type\nA structure which include information about the current …\nAvailable returns codes for user decide\nu64 type\nBase folder target path\nBuffer size that specifies the amount of bytes to be moved …\nBuffer size that specifies the amount of bytes to be moved …\nCopy only contents without a creating a new folder in the …\nCopy only contents without a creating a new folder in the …\nCopied bytes on this time for folder\nCopies the directory contents from one place to another …\nRecursively copy a directory with a new name or place it …\nRecursively copy a directory with a new name or place it …\nCopies the directory contents from one place to another …\nCreates a new, empty directory at the provided path.\nRecursively create a directory and all of its parent …\nSets levels reading. Set 0 for read all directory folder\nSets levels reading. Set 0 for read all directory folder …\nSets levels reading. Set value 0 for read all directory …\nDirectory size in bytes.\nList all folders and sub folders directory.\nCopied bytes on this time for file.\nName current copied file.\nSize current copied file.\nList all files directory and sub directories.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturned information about directory entry with …\nReturn DirContent which contains information about …\nReturn DirContent which contains information about …\nReturns the size of the file or directory in …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCollection directory entry with information.\nReturns a collection of directory entries with attributes …\nMoves the directory contents from one place to another. …\nMoves the directory contents from one place to another …\nInitialize struct CopyOptions with default value.\nInitialize struct DirOptions with default value.\nOverwrite existing files if true.\nOverwrite existing files if true (default: false).\nRemoves directory.\nSkip existing files if true.\nSkip existing files if true (default: false).\nTransit state\nAll the bytes which should to copy or move (dir size).\nAn entity already exists.\nContains the error value\nThe error type for fs_extra operations with files and …\nA list specifying general categories of fs_extra error.\nThis operation was interrupted.\nPath does not a file.\nInvalid file name.\nPath does not a directory.\nInvalid path.\nAny I/O error.\nAn entity was not found.\nContains the success value\nAny OsString error.\nAny fs_extra error not part of this list.\nThe operation lacked the necessary privileges to complete.\nA specialized Result type for fs_extra operations.\nAny StripPrefix error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nType error\nCreate a new fs_extra error from a kind of error error as …\nA structure which stores information about the current …\nSets buffer size for copy/move work only with receipt …\nSets buffer size for copy/move work only with receipt …\nCopied bytes on this time.\nCopies the contents of one file to another. This function …\nCopies the contents of one file to another file with …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMoves a file from one place to another. This function will …\nMoves a file from one place to another with information …\nInitialize struct CopyOptions with default value.\nSets the option true for overwrite existing files.\nSets the option true for overwrite existing files.\nRead file contents, placing them into <code>String</code>.\nRemoves a file from the filesystem.\nSets the option true for skip existing files.\nSets the option true for skip existing files.\nAll the bytes which should to copy or move.\nWrite <code>String</code> content into file.")