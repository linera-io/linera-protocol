searchState.loadedDescShard("aws_credential_types", 0, "<code>aws-credential-types</code> provides types concerned with AWS SDK …\nAWS SDK Credentials\nBuilder for <code>Credentials</code>\nAWS Access Token\nReturns the access key ID.\nSet access key id for the builder.\nReturns the account ID.\nSet account ID for the builder.\nTypes representing specific pieces of data contained …\nBuild <code>Credentials</code> from the builder.\nReturns builder for <code>Credentials</code>.\nTypes that allow a credentials provider to be created from …\nReturns the time when the credentials will expire.\nSet expiry for the builder.\nReturns a mutable reference to the time when the …\nCreates a test <code>Credentials</code> with no session token.\nCreates a test <code>CredentialsBuilder</code> with the required fields:\nCreates a test <code>Credentials</code> that include a session token.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates <code>Credentials</code>.\nAWS SDK Credentials\nSet provider name for the builder.\nReturns the secret access key.\nSet secret access key for the builder.\nReturns the session token.\nSet session token for the builder.\nSet account ID for the builder.\nSet expiry for the builder.\nSet session token for the builder.\nTypes that allow an access token provider to be created …\nType representing a unique identifier representing an AWS …\nReturn the string equivalent of this account id.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA <code>ProvideCredentials</code> implemented by a closure.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns a new credentials provider built with the given …\nContains the error value\nContains the success value\nAsynchronous Credentials Provider\nResult type for credential providers.\nCredentials Provider wrapper that may be shared\nCredentials provider errors\nReturns fallback credentials.\nReturns fallback credentials.\nReturns the argument unchanged.\nConvenience <code>ProvideCredentials</code> struct that implements the …\nCalls <code>U::from(self)</code>.\nCreate a new SharedCredentials provider from …\nReturns a future that provides credentials.\nAWS Access Tokens for SSO\nError returned when credentials failed to load.\nDetails for <code>CredentialsError::CredentialsNotLoaded</code>\nNo credentials were available for this provider\nDetails for <code>CredentialsError::InvalidConfiguration</code> or …\nThe provider was given an invalid configuration\nThe provider was given invalid configuration.\nDetails for <code>CredentialsError::ProviderError</code> or …\nThe provider experienced an error during credential …\nThe provider experienced an error during credential …\nDetails for <code>CredentialsError::ProviderTimedOut</code> or …\nLoading credentials from this provider exceeded the …\nLoading a token from this provider exceeded the maximum …\nError returned when an access token provider fails to …\nDetails for <code>TokenError::TokenNotLoaded</code>\nThis provider couldn’t provide a token.\nDetails for <code>CredentialsError::Unhandled</code> or …\nAn unexpected error occurred during credential resolution\nAn unexpected error occurred during token resolution.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe provided configuration for a provider was invalid\nThe provided configuration for a provider was invalid.\nThe credentials provider did not provide credentials\nThe access token provider couldn’t provide a token.\nThe credentials provider did not provide credentials\nThe credentials provider returned an error\nThe access token provider returned an error.\nThe credentials provider did not provide credentials …\nThe access token provider did not provide a token within …\nReturns the maximum allowed timeout duration that was …\nAn unexpected error occurred loading credentials from this …\nAn unexpected error occurred loading an access token from …\nFuture new-type that …\nFuture new-type that <code>ProvideToken::provide_token</code> must …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>ProvideCredentials</code> struct from a future.\nCreates a <code>ProvideToken</code> struct from a future.\nCreates a <code>ProvideCredentials</code> struct from a resolved …\nCreates a <code>ProvideToken</code> struct from a resolved credentials …\nContains the error value\nContains the success value\nAccess Token Provider\nResult type for token providers\nAccess token provider wrapper that may be shared.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new <code>SharedTokenProvider</code> from <code>ProvideToken</code>.\nReturns a future that provides an access token.\nA <code>ProvideToken</code> implemented by a closure.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns a new token provider built with the given closure. …")