searchState.loadedDescShard("colored", 0, "Coloring terminal so simple, you already know how to do it …\nThe 8 standard colors.\nA string that may have color and/or style applied to it.\nThe trait that enables something to be given color.\nA combinatorial style such as bold, italics, dimmed, etc.\nEnum containing all of the available style settings that …\nAdds the <code>two</code> style switch to this Style.\nGet the current background color applied.\nThe background color (if any). None means that the text …\nMakes this <code>Style</code> include Blink.\nMakes this <code>Style</code> include Bold.\nGets rid of this <code>ColoredString</code>’s background.\nClears foreground coloring on this <code>ColoredString</code>, meaning …\nClears any special styling and sets it back to the default …\nCheck if the current style has one of <code>Styles</code> switched on.\nA couple of functions to enable and disable coloring.\nCustom colors support.\nMakes this <code>Style</code> include Dimmed.\nGet the current background color applied.\nThe color of the text as it will be printed.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMakes this <code>Style</code> include Hidden.\nThe plain text that will have color and style applied to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nChecks if the colored string has no color or styling.\nMakes this <code>Style</code> include Italic.\nTurns off a style switch.\nMakes this <code>Style</code> include Reversed.\nMakes this <code>Style</code> include Strikethrough.\nGet the current <code>Style</code> which can be check if it contains a …\nAny special styling to be applied to the text (see Styles …\nMakes this <code>Style</code> include Underline.\nThe persistent <code>ShouldColorize</code>.\nA flag for whether coloring should occur.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReads environment variables and checks if output is a tty …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUse this to force colored to ignore the environment and …\nUse this to force colored to ignore the environment and …\nReturns if the current coloring is expected.\nRemove the manual override and let the environment decide …\nRemove the manual override and let the environment decide …\nCustom color structure, it will generate a true color in …\nBlue\nReturns the argument unchanged.\nGreen\nCalls <code>U::from(self)</code>.\nCreate a new custom color\nRed")