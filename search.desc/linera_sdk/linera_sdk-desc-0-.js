searchState.loadedDescShard("linera_sdk", 0, "This module provides an SDK for developing Linera …\nThe contract interface of a Linera application.\nA logger that uses the system API for contracts.\nEvent values for streams created by this application.\nExtension trait to deserialize a type from a vector of …\nInstantiation argument passed to a new application on the …\nThe type of message executed by the application.\nImmutable parameters specific to this application (e.g. …\nImmutable parameters specific to this application.\nResources that an application may spend during the …\nA request to send a message.\nThe service interface of a Linera application.\nA logger that uses the system API for services.\nExtension trait to serialize a type into a vector of bytes …\nThis module defines the notion of Application Binary …\nCommon ABIs that may have multiple implementations.\nWhether the message is authenticated.\nA number of blob bytes to publish.\nA number of blob bytes to read.\nA number of blobs to publish.\nA number of blobs to read.\nA number of bytes read from runtime.\nA number of bytes to read.\nA number of bytes to write.\nTypes and macros useful for writing an application …\nDeclares an implementation of the <code>Contract</code> trait, …\nThe destination of the message.\nA macro for asserting that a condition is true, returning …\nSupport for Linera applications that interact with …\nAn amount of EVM execution fuel.\nApplies a message originating from a cross-chain message.\nApplies an operation from the current block.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDeserializes itself from a vector of bytes using <code>bcs</code>.\nThe grant resources forwarded with the message.\nGraphQL traits for generating interfaces into applications.\nExecutes a read-only query on the state of this …\nTypes used when performing HTTP requests.\nA number of HTTP requests to be performed.\nConfigures <code>log</code> to use the log system API for contracts.\nConfigures <code>log</code> to use the log system API for services.\nInstantiates the application on the chain that created it.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSerializes the internal <code>Message</code> type into raw bytes.\nWhether the message is tracked.\nTypes reexported from <code>linera_base</code>.\nCreates an in-memory instance of the contract handler.\nThe message itself.\nThe size of the messages to be sent.\nA number of messages to be sent.\nCreates an in-memory instance of the service handler.\nReacts to new events on streams.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nA number of read operations to be executed.\nTypes and macros useful for writing an application service.\nDeclares an implementation of the <code>Service</code> trait, exporting …\nA number of service-as-oracle requests to be performed.\nAn increase in the amount of storage space.\nFinishes the execution of the current transaction.\nHelper types for writing integration tests for WebAssembly …\nSerializes itself into a vector of bytes using <code>bcs</code>.\nModule with helper types and functions used by the SDK.\nHelper types for using <code>linera_views</code> to store application …\nAn amount of Wasm execution fuel.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA number of write operations to be executed.\nA trait that includes all the types exported by a Linera …\nThe contract types to import.\nThe service types to import.\nA trait that includes all the types exported by a Linera …\nThe type of operation executed by the application.\nThe type of a query receivable by the application’s …\nThe response type of the application’s service.\nThe response type of an application call.\nA trait that includes all the types exported by a Linera …\nMarker trait to help importing contract types.\nMarker trait to help importing service types.\nAn ABI for applications that implement an EVM runtime.\nAn ABI for applications that implement a fungible token.\nAn ABI for applications that implement an EVM runtime.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nApprove the transfer of tokens\nRequests an account balance.\nRequests an account balance.\nBalance response\nSame as <code>Transfer</code> but the source account may be remote. …\nSame as <code>Transfer</code> but the source account may be remote. …\nAn operation\nMutation root\nA native fungible response\nAn ABI for applications that implement a fungible token.\nThe initial state to instantiate fungible with\nA builder type for constructing the initial state of the …\nAn operation\nMutation root\nAn ABI for applications that implement a fungible token.\nOK response\nThe parameters to instantiate fungible with\nRequests this fungible token’s ticker symbol.\nRequests this fungible token’s ticker symbol.\nTicker symbol response\nTransfers tokens from a (locally owned) account to a …\nTransfers tokens from a (locally owned) account to a …\nTransfers tokens from a (locally owned) account to a …\nAccounts and their respective initial balances\nReturns the serialized initial state of the application, …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInstantiate parameters\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nTicker symbol for the fungible\nAdds an account to the initial state of the application.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nMaximum amount to be transferred\nAmount to be transferred\nAmount to be transferred\nAmount to be claimed\nOwner to query the balance for\nOwner to transfer from\nOwner to transfer from\nOwner to transfer from\nSource account to claim amount from\nThe spender account\nThe spender of the amount.\nTarget account to transfer the amount to\nTarget account to transfer the amount to\nTarget account to claim the amount into\nAmount to be transferred\nAmount to be claimed\nOwner to query the balance for\nOwner to transfer from\nSource account to claim amount from\nTarget account to transfer the amount to\nTarget account to claim the amount into\nInside tests, use the <code>MockContractRuntime</code> instead of the …\nA mock of the common runtime to interface with the host …\nAdds an event to a stream, so that it can be read using …\nAdds an expected <code>assert_data_blob_exists</code> call, and the …\nAdds a new expected call to <code>create_application</code>.\nAdds a new expected call to <code>create_data_blob</code>.\nAdds an expected <code>http_request</code> call, and the response it …\nAdds an expected call to <code>open_chain</code>, and the child chain …\nAdds a new expected call to <code>publish_module</code>.\nAdds an expected <code>read_data_blob</code> call, and the response it …\nAdds an expected <code>query_service</code> call`, and the response it …\nReturns the chain ID of the current application creator.\nReturns the ID of the current application.\nReturns the application parameters provided when the …\nPanics if the current time at block validation is …\nAsserts that a blob with the given hash exists in storage.\nReturns the authenticated caller ID, if the caller …\nReturns the authenticated owner for this execution, if …\nReturns the height of the current block that is executing.\nCalls another application.\nReturns the current chain balance.\nReturns the ID of the current chain.\nRetrieves the owner configuration for the current chain.\nChanges the application permissions on the current chain. …\nVerifies that the current execution context authorizes …\nClaims an <code>amount</code> of native tokens from a <code>source</code> account to …\nReturns the list of claims made during the test so far.\nCloses the current chain. Returns an error if the …\nCreates a new on-chain application, based on the supplied …\nCreates a new data blob and returns its hash.\nReturns the list of <code>SendMessageRequest</code>s created so far …\nAdds a new item to an event stream. Returns the new event…\nReturns the argument unchanged.\nMakes an HTTP <code>request</code> as an oracle and returns the HTTP …\nCalls <code>U::from(self)</code>.\nReturns the key-value store to interface with storage.\nReturns <code>true</code> if the incoming message was rejected from the …\nReturns the chain ID where the incoming message originated …\nCreates a new <code>MockContractRuntime</code> instance for a contract.\nOpens a new chain, configuring it with the provided …\nReturns the outgoing transfers scheduled during the test …\nReturns the balance of one of the accounts on this chain.\nReturns a <code>MessageBuilder</code> to prepare a message to be sent.\nCreates a new module-id on-chain application, based on the …\nQueries an application service as an oracle and returns …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads a data blob with the given hash from storage.\nReads an event from a stream. Returns the event’s value.\nReturns a storage context suitable for a root view.\nRuns an asynchronous entrypoint in a blocking manner, by …\nSchedules a message to be sent to this application on …\nConfigures the application creator chain ID to return …\nConfigures the application ID to return during the test.\nConfigures the application parameters to return during the …\nConfigures the authenticated caller ID to return during …\nConfigures the authenticated owner to return during the …\nConfigures the block height to return during the test.\nConfigures the handler for cross-application calls made …\nConfigures if the application being tested is allowed to …\nConfigures if the application being tested is allowed to …\nConfigures the chain balance to return during the test.\nConfigures the chain ID to return during the test.\nConfigures the chain ownership configuration to return …\nConfigures the <code>message_is_bouncing</code> flag to return during …\nConfigures the <code>message_origin_chain_id</code> to return during …\nConfigures the balance of one account on the chain to use …\nConfigures the balances on the chain to use during the …\nConfigures the multi-leader round number to return during …\nConfigures the system time to return during the test.\nSubscribes this application to an event stream.\nRetrieves the current system time, i.e. the timestamp of …\nTransfers an <code>amount</code> of native tokens from <code>source</code> owner …\nUnsubscribes this application from an event stream.\nReturns the round in which this block was validated.\nConfigures the application creator chain ID to return …\nConfigures the application ID to return during the test.\nConfigures the application parameters to return during the …\nConfigures the authenticated caller ID to return during …\nConfigures the authenticated owner to return during the …\nConfigures the block height to return during the test.\nConfigures the handler for cross-application calls made …\nConfigures if the application being tested is allowed to …\nConfigures if the application being tested is allowed to …\nConfigures the chain balance to return during the test.\nConfigures the chain ID to return during the test.\nConfigures the chain ownership configuration to return …\nConfigures the <code>message_is_bouncing</code> flag to return during …\nConfigures the balance of one account on the chain to use …\nConfigures the balances on the chain to use during the …\nConfigures the multi-leader round number to return during …\nConfigures the system time to return during the test.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA wrapper for a URL that implements <code>JsonRpcClient</code> and uses …\nA single primitive data type. This is used for example for …\nThe data type for an Ethereum event emitted by a smart …\nThe basic Ethereum queries that can be used from a smart …\nA wrapper for a URL that implements <code>JsonRpcClient</code> and uses …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLists all the accounts of the Ethereum node.\nGets the balance of the specified address at the specified …\nGets the latest block number of the Ethereum node.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new <code>ContractEthereumClient</code> from an URL.\nCreates a new <code>ServiceEthereumClient</code> from an URL.\nThe operation done with <code>eth_call</code> on Ethereum returns a …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads the events of the smart contract.\nThe URL of the JSON-RPC server, without the method or …\nThe URL of the JSON-RPC server, without the method or …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nAn object associated with a GraphQL mutation root. Those …\nRe-exports the derive macro for <code>GraphQLMutationRoot</code>.\nThe type of the mutation root.\nReturns the mutation root of the object.\nA CONNECT request.\nA DELETE request.\nA GET request.\nA HEAD request.\nA header for an HTTP request or response.\nThe method used in an HTTP request.\nA OPTIONS request.\nA PATCH request.\nA POST request.\nA PUT request.\nAn HTTP request.\nA response for an HTTP request.\nA TRACE request.\nThe body of the request.\nThe body of the response.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an HTTP GET <code>Request</code> for a <code>url</code>.\nThe headers that should be included in the request.\nThe headers included in the response.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Method</code> used for the HTTP request.\nThe header name.\nCreates an HTTP <code>Response</code> with a user defined <code>status_code</code>.\nCreates a new <code>Header</code> with the provided <code>name</code> and <code>value</code>.\nCreates an HTTP <code>Response</code> with an OK status code and the …\nCreates an HTTP POST <code>Request</code> for a <code>url</code> with a <code>payload</code> that…\nCreates an HTTP POST <code>Request</code> for a <code>url</code> with a body that’…\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nThe status code of the HTTP response.\nCreates an HTTP <code>Response</code> with an Unauthorized status code.\nThe URL this request is intended to.\nThe value of the header.\nAdds a header to this <code>Request</code>.\nAdds a header to this <code>Response</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA trait that includes all the types exported by a Linera …\nThe contract types to import.\nThe service types to import.\nAn account.\nAn account owner.\nErrors that can happen when verifying the authentication …\nThe public key of a chain owner. The corresponding private …\nThe private key of a chain owner.\nThe signature of a chain owner.\n20-byte account EVM-compatible address.\n32-byte account address.\nA non-negative amount of tokens.\nDescription of a user application.\nA blob containing an application description.\nA unique identifier for a user application from a blob.\nPermissions for applications on a chain.\nAn error type for arithmetic errors.\nAn assertion oracle that passed.\nActivate the blanket implementation of <code>Hashable</code> based on …\nAn error trying to parse the hex-digits of a BCS-encoded …\nActivate the blanket implementation of <code>Signable</code> based on …\nA blob of binary data, with its hash.\nA successful read or write of a blob.\nA blob of binary data.\nA content-addressed blob ID i.e. the hash of the …\nThe type of the blob. Should be a 1:1 mapping of the types …\nA block height to identify blocks in a chain.\nAllows converting <code>BlockHeight</code> ranges to inclusive tuples …\nA WebAssembly module’s bytecode.\nReturns the default chain address.\nInitial chain configuration and chain origin.\nA blob containing a chain description.\nThe unique identifier (UID) of a chain. This is currently …\nWhat created a chain.\nRepresents the owner(s) of a chain.\nErrors that can happen when attempting to change the …\nThe chain was created by a call from another chain.\nErrors that can happen when attempting to close a chain.\nA blob containing a committee of validators.\nA compressed module bytecode (WebAssembly or EVM).\nA trait that includes all the types exported by a Linera …\nA blob containing compressed contract Wasm bytecode.\nError type for cryptographic errors.\nA Keccak256 value.\nA vector of cryptographic hashes. This is used to …\nWrapper around <code>rand::CryptoRng</code> and <code>rand::RngCore</code>.\nThe base-10 exponent representing how much a token can be …\nA generic data blob.\nHash of a data blob.\nA type for errors happening during decompression.\nEd25519\nEd25519 public key.\nEd25519 secret key.\nEd25519 signature.\nAn Ed25519 signature public key.\nAn Ed25519 secret key.\nAn Ed25519 signature.\nA number identifying the configuration of the chain (aka …\nErrors that can be returned from signers.\nThe type of errors arising from operations on this <code>Signer</code>.\nAn event recorded in a block.\nAn event was read.\nAn event exists.\nAn event identifier.\nThe Evm virtual machine\nA blob containing compressed EVM bytecode.\nA secp256k1 public key.\nThe possible types of queries for an EVM contract\nEVM secp256k1\nEVM secp256k1 public key.\nEVM secp256k1 secret key.\nEVM secp256k1 signature.\nA secp256k1 secret key.\nA secp256k1 signature.\nThe initial fast round.\nA unique identifier for an application.\nSomething that we know how to hash and sign.\nSomething that we know how to hash.\nThe response from an HTTP request.\nIn-memory signer.\nThe result of an <code>events_from_index</code>.\nThe initial configuration for a new chain.\nCompressed bytecode is invalid, and could not be …\nThe maximum value.\nThe maximum value.\nThe maximum value.\nA unique identifier for a module.\nThe N-th multi-leader round.\nA request to schedule an operation that can mutate the …\nA request to schedule operations that can mutate the …\nA description of the current Linera network to be stored …\nThe application wasn’t allowed to close the chain.\nThe application wasn’t allowed to change the application …\nOperations on this account are not permitted in the …\nOne token.\nThe type of operation executed by the application.\nA record of a single oracle response.\nA read-only query.\nThe type of a query receivable by the application’s …\nThe response type of the application’s service.\nShort addresses reserved for the protocol.\nResources that an application may spend during the …\nThe response type of an application call.\nThe chain was created by the genesis configuration.\nAn identifier for successive attempts to decide a value in …\nThe block’s validation round.\nsecp256k1\nsecp256k1 public key.\nsecp256k1 secret key.\nsecp256k1 signature.\nA secp256k1 public key.\nA secp256k1 secret key.\nA secp256k1 signature.\nA request to send a message.\nThe response from a service query.\nA trait that includes all the types exported by a Linera …\nA blob containing compressed service Wasm bytecode.\nSignature scheme used for the public key.\nA trait for signing keys.\nThe N-th single-leader round.\nAn event stream ID.\nThe name of an event stream.\nAn update for a stream with new events.\nThe system application.\nA BCS-signable struct for testing.\nA duration in microseconds.\nThe timeout configuration: how long fast, multi-leader and …\nA timestamp, in microseconds since the Unix epoch.\nA user application.\nThe N-th round where the validators rotate as leaders.\nThe key pair of a validator.\nThe public key of a validator.\nThe private key of a validator.\nThe signature of a validator.\nThe virtual machine runtime\nThe Wasm virtual machine\nMarker trait to help importing contract types.\nMarker trait to help importing service types.\nThe zero value.\nThe zero value.\nThe zero value.\nThe zero epoch.\nReturns an EVM address for the public key.\nReturns an EVM address for the public key.\nThe chain ID of the admin chain.\nReturns an iterator over all super owners, followed by all …\nThe hash of the <code>ApplicationDescription</code> this refers to.\nThe application that can add events to this stream.\nThe index of the application among those created in the …\nThe initial application permissions.\nReturns bytes of the public key.\nReturns bytes of the signature.\nReads the bytes of the hash value.\nReturns the bytes of the public key in compressed …\nReturns the byte representation of the signature.\nReturns the bytes of the public key in compressed …\nReturns the byte representation of the signature.\nReturns the byte representation of the public key.\nReturns this <code>TimeDelta</code> as a <code>Duration</code>.\nReturns this <code>TimeDelta</code> as a number of microseconds.\nWhether the message is authenticated.\nThe initial chain balance.\nThe duration of the first single-leader and all …\nA number of blob bytes to publish.\nA number of blob bytes to read.\nReturns the type of data represented by this blob’s …\nThe type of the blob.\nA number of blobs to publish.\nA number of blobs to read.\nHeight of the block that created this application.\nAn address used exclusively for tests\nGets all bytecode <code>BlobId</code>s of the module\nGets a reference to the blob’s bytes.\nGets a reference to the inner blob’s bytes.\nBytes of the bytecode.\nConverts the <code>ApplicationId</code> into an Ethereum-compatible …\nA number of bytes read from runtime.\nA number of bytes to read.\nA number of bytes to write.\nThese applications are allowed to perform calls to …\nReturns whether the given application can call services.\nReturns whether the given application is allowed to change …\nReturns whether the given application is allowed to close …\nReturns whether operations with the given application ID …\nReturns whether the given application can make HTTP …\nCreates an <code>Account</code> representing the balance shared by a …\nThe publishing chain.\nThe chain of the account.\nThe ID of the chain that generated this event.\nThese applications are allowed to change the application …\nChecks a signature.\nChecks a signature.\nChecks a signature.\nChecks a signature against a recovered public key.\nThese applications are allowed to close the current chain.\nCompresses the <code>Bytecode</code> into a <code>CompressedBytecode</code>.\nCompressed bytes of the bytecode.\nReturns a reference to the <code>InitialChainConfig</code> of the chain.\nReturns whether the given <code>owner</code> is a known signer.\nReturns whether the given <code>owner</code> is a known signer.\nReturns a reference to the inner <code>BlobContent</code>, without the …\nThe hash of the blob containing the contract bytecode.\nGets the <code>BlobId</code> of the contract\nGets the <code>BlobId</code> of the contract\nCopies the key pair, <strong>including the secret key</strong>.\nCopies the key pair, <strong>including the secret key</strong>.\nCopies the key pair, <strong>including the secret key</strong>.\nCopies the secret key.\nThe chain ID that created the application.\nDecompresses a <code>CompressedBytecode</code> into a <code>Bytecode</code>.\nReturns <code>true</code> if the decompressed size does not exceed the …\nReturns the <code>TimeDelta</code> between <code>other</code> and <code>self</code>, or zero if …\nConverts the application ID to the ID of the blob …\nHow the <code>Operation</code> is deserialized\nHow the <code>Operation</code> is deserialized\nHow the <code>Response</code> is deserialized\nHow the <code>Response</code> is deserialized\nThe destination of the message.\nReturns the <code>Duration</code> between <code>other</code> and <code>self</code>, or zero if …\nThe epoch in which the chain is created.\nThe event being returned.\nConverts the <code>ApplicationId</code> into an Ethereum Address.\nAn amount of EVM execution fuel.\nIf this is <code>None</code>, all system operations and application …\nThe age of an incoming tracked or protected message after …\nThe duration of the fast round.\nReturns the first consensus round for this configuration.\nForgets the ABI of an application ID (if any).\nForgets the ABI of a module ID (if any).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns an <code>Amount</code> corresponding to that many attotokens.\nDecodes the bytes into the public key. Expects the bytes …\nDecodes the bytes into the public key. Expects the bytes …\nReturns the given duration, rounded to the nearest …\nReturns an <code>Amount</code> corresponding to that many microtokens, …\nReturns the given number of microseconds as a <code>TimeDelta</code>.\nReturns an <code>Amount</code> corresponding to that many millitokens, …\nReturns the given number of milliseconds as a <code>TimeDelta</code>.\nReturns an <code>Amount</code> corresponding to that many nanotokens, …\nReturns the given number of seconds as a <code>TimeDelta</code>.\nParses bytes to a public key.\nParses bytes to a signature.\nCreates a signature from the bytes. Expects the signature …\nCreates a signature from the bytes. Expects the signature …\nParses the byte representation of the public key.\nParses the byte representation of the signature.\nReturns an <code>Amount</code> corresponding to that many tokens, or …\nGenerates a new key pair using the operating system’s …\nGenerates a new key pair.\nGenerates a new key pair.\nGenerates a new key pair using the operating system’s …\nGenerates a new key pair from the given RNG. Use with care.\nGenerates a new key pair from the given RNG. Use with care.\nGenerates a new key pair from the given RNG. Use with care.\nGenerates a new Evm Secp256k1 key pair from the given RNG. …\nGenerates a new key pair from Signer’s RNG. Use with …\nHash of the blob containing the genesis committee.\nHash of the network’s genesis config.\nGenesis timestamp.\nThe grant resources forwarded with the message.\nThe hash of the blob.\nA number of HTTP requests to be performed.\nReturns the <code>ChainId</code> based on this <code>ChainDescription</code>.\nA content-addressed blob ID i.e. the hash of the <code>Blob</code>.\nReturns the ID of this event record, given the publisher …\nThe event index, i.e. the number of events in the stream …\nThe index of the found event.\nThe event index, i.e. the number of events in the stream …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets the <code>Arc&lt;Box&lt;[u8]&gt;&gt;</code> directly without cloning.\nTurns the stream name into bytes.\nMoves ownership of the blob of binary data\nConverts a <code>BlobContent</code> into <code>Vec&lt;u8&gt;</code> without cloning if …\nReturns whether there are any owners or super owners or it …\nTests if the account is the chain address.\nWhether the chain was created by another chain.\nWhether the chain was created by another chain.\nReturns whether the blob is of <code>BlobType::Committee</code> variant.\nReturns whether the blob is of <code>BlobType::Committee</code> variant.\nReturns whether the <code>ApplicationId</code> is the one of an EVM …\nWhether the round is the fast round.\nWhether the round is a multi-leader round.\nReturns whether the given owner a super owner and there …\nWhether the message is tracked.\nReturns whether this amount is 0.\nReturns the public key corresponding to the given <code>owner</code>.\nLoads data blob from a file.\nLoad bytecode from a Wasm module file.\nHelper function to obtain the 64 least significant bits of …\nForce the last 12 bytes of the hash to be zeroes. This is …\nThese applications are allowed to perform HTTP requests.\nAt least one operation or incoming message from each of …\nThe highest number of an active epoch at the time of …\nThe message itself.\nThe size of the messages to be sent.\nA number of messages to be sent.\nReturns the number of microseconds since the Unix epoch.\nThe lowest number of an active epoch at the time of …\nThe unique ID of the bytecode to use for the application.\nReturns the round number if this is a multi-leader round, …\nThe number of rounds in which all owners are allowed to …\nCreates a <code>ChainOwnership</code> with the specified regular owners.\nThe name of the network.\nComputes a signature.\nComputes a hash.\nComputes a secp256k1 signature for <code>prehash</code> using the given …\nComputes a secp256k1 signature for <code>value</code> using the given …\nCreates a new <code>InMemorySigner</code> seeded with <code>prng_seed</code>. If …\nCreates a new <code>TestString</code> with the given string.\nCreates a new <code>ChainDescription</code>.\nCreates a new <code>Bytecode</code> instance using the provided <code>bytes</code>.\nCreates a new <code>BlobContent</code> from the provided bytes and …\nComputes the hash and returns the hashed blob for the …\nCreates a new <code>Account</code> with the given chain ID and owner.\nCreates a new <code>BlobId</code> from a <code>CryptoHash</code>. This must be a …\nCreates an application ID from the application description …\nCreates a module ID from contract/service hashes and the …\nCreates a new application description <code>BlobContent</code> from a …\nCreates a new application description <code>Blob</code> from the …\nCreates a new chain description <code>BlobContent</code> from a …\nCreates a new chain description <code>Blob</code> from a …\nCreates a new committee <code>BlobContent</code> from the provided …\nCreates a new committee <code>Blob</code> from the provided bytes.\nCreates a new contract bytecode <code>BlobContent</code> from the …\nCreates a new contract bytecode <code>Blob</code> from the provided …\nCreates a new data <code>BlobContent</code> from the provided bytes.\nCreates a new data <code>Blob</code> from the provided bytes.\nCreates a new contract bytecode <code>BlobContent</code> from the …\nCreates a new contract bytecode <code>BlobContent</code> from the …\nReturns the indices of all new events in the stream.\nCreates new <code>ApplicationPermissions</code> where the given …\nCreates a new service bytecode <code>BlobContent</code> from the …\nCreates a new service bytecode <code>Blob</code> from the provided …\nCreates new <code>ApplicationPermissions</code> where the given …\nCreates a blob from ud and content without checks\nCreates a blob without checking that the hash actually …\nThe index of the next event, i.e. the lowest for which no …\nReturns the round following the specified one, if any.\nReturns the current time according to the system clock.\nThe index of a round amongst the rounds of the same …\nWhether the multi-leader rounds are unrestricted, i.e. not …\nReturns the <code>ChainOrigin</code> describing who created this chain.\nReturns the <code>AccountOwner</code> of the account that signed the …\nThe owner of the account.\nThe regular owners, with their weights that determine how …\nThe ownership configuration of the new chain.\nThe parameters of the application.\nThe lowest index of a new event. See …\nObtains the public key of a key pair.\nReturns a public key for the given secret key.\nReturns a public key for the given secret key.\nReturns the public key corresponding to this secret key.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nA number of read operations to be executed.\nRecovers the public key from the signature and the value.\nRequired dependencies.\nReturns the root chain number, if this is a root chain.\nReturns the duration of the given round.\nSaturating addition.\nSaturating addition.\nSaturating addition.\nReturns the timestamp that is <code>duration</code> later than <code>self</code>.\nSaturating in-place addition.\nSaturating in-place addition.\nSaturating in-place addition.\nDivides this by the other amount. If the other is 0, it …\nSaturating multiplication.\nSaturating multiplication.\nSaturating multiplication.\nSaturating subtraction.\nSaturating subtraction.\nSaturating subtraction.\nReturns the timestamp that is <code>duration</code> earlier than <code>self</code>.\nReturns a timestamp <code>micros</code> microseconds earlier than <code>self</code>, …\nReturns the signature scheme of the public key.\nHow the <code>Operation</code> is serialized\nHow the <code>Operation</code> is serialized\nHow the <code>Response</code> is serialized\nHow the <code>Response</code> is serialized\nA number of service-as-oracle requests to be performed.\nThe hash of the blob containing the service bytecode.\nGets the <code>BlobId</code> of the service\nGets the <code>BlobId</code> of the service\nCreates a signature for the given <code>value</code> using the provided …\nCreates a signature for the given <code>value</code> using the provided …\nCreates a signature for the <code>value</code> using provided <code>secret</code>.\nComputes a signature from a prehash.\nComputes a signature from a prehash.\nComputes a signature from a prehash.\nCreates a signature for the <code>value</code>.\nAn interface for cryptographic signers that can be used by …\nCreates a <code>ChainOwnership</code> with a single regular owner.\nCreates a <code>ChainOwnership</code> with a single super owner.\nThe size of the <code>AccountOwner</code>.\nAn increase in the amount of storage space.\nThe ID of the stream this event belongs to.\nThe stream ID.\nThe ID of the stream this event belongs to.\nThe name of this stream: an application can have multiple …\nSuper owners can propose fast blocks in the first round, …\nCreates a system stream ID with the given name.\nReturns the hash of <code>TestString(s)</code>, for testing purposes.\nA fake public key used for testing.\nA fake public key used for testing.\nA fake public key used for testing.\nA fake public key used for testing.\nThe timeout configuration: how long fast, multi-leader and …\nThe duration by which the timeout increases after each …\nReturns the timestamp of when the chain was created.\nReturns byte representation of the signatures.\nGets the serialized bytes for this <code>ApplicationDescription</code>.\nGets the EVM address if possible\nReturns the range as a tuple of inclusive bounds. If the …\nChecked addition.\nChecked addition.\nChecked addition.\nChecked in-place addition.\nChecked in-place addition.\nChecked in-place addition.\nChecked in-place increment.\nChecked in-place increment.\nChecked in-place increment.\nTries to add one to this epoch’s number. Returns an …\nChecked increment.\nChecked increment.\nChecked increment.\nTries to return an epoch with a number increased by one. …\nChecked multiplication.\nChecked multiplication.\nChecked multiplication.\nChecked in-place multiplication.\nChecked in-place multiplication.\nChecked in-place multiplication.\nChecked subtraction.\nChecked subtraction.\nChecked subtraction.\nChecked in-place subtraction.\nChecked in-place subtraction.\nChecked in-place subtraction.\nChecked decrement.\nChecked decrement.\nChecked decrement.\nTries to return an epoch with a number decreased by one. …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nThe name of the type.\nThe category of the round as a string.\nReturns the bytes that represent the <code>integers</code> in …\nHelper function to obtain the 64 most significant bits of …\nReturns the <code>ApplicationId</code>, or <code>None</code> if it is <code>System</code>.\nThe payload data.\nVerifies the signature for the <code>value</code> using the provided …\nVerifies a batch of signatures.\nVerifies a batch of signatures.\nVerifies a batch of signatures.\nReturns <code>true</code> if this is an owner or super owner.\nThe virtual machine being used.\nAn amount of Wasm execution fuel.\nSpecializes an application ID for a given ABI.\nSpecializes a module ID for a given ABI.\nAdds a regular owner.\nSend the content of <code>Self</code> to the given hasher.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA number of write operations to be executed.\nEVM address of the signer.\nPublic key of the signer.\nPublic key of the signer.\nSignature of the value.\nSignature of the value.\nSignature of the value.\nThe block height in the parent at which this chain was …\nThe index of this chain among chains created at the same …\nThe parent of this chain.\nErrors that can be returned from signers.\nThe type of errors arising from operations on this <code>Signer</code>.\nIn-memory signer.\nA trait for signing keys.\nReturns whether the given <code>owner</code> is a known signer.\nCreates a signature for the given <code>value</code> using the provided …\nThe runtime available during execution of a query.\nInside tests, use the <code>MockServiceRuntime</code> instead of the …\nAdds an expected <code>http_request</code> call, and the response it …\nReturns the chain ID of the current application creator.\nReturns the ID of the current application.\nReturns the application parameters provided when the …\nAsserts that a blob with the given hash exists in storage.\nReturns the owners of accounts on this chain.\nReturns the current chain balance.\nReturns the ID of the current chain.\nReturns the argument unchanged.\nMakes an HTTP <code>request</code> as an oracle and returns the HTTP …\nCalls <code>U::from(self)</code>.\nReturns the key-value store to interface with storage.\nCreates a new <code>MockServiceRuntime</code> instance for a service.\nReturns the height of the next block that can be added to …\nReturns the balance of one of the accounts on this chain.\nReturns the balances of all accounts on the chain.\nQueries another application.\nReturns the list of operations scheduled since the most …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nFetches a blob from a given hash.\nReturns a storage context suitable for a root view.\nRuns an asynchronous entrypoint in a blocking manner, by …\nSchedules an operation to be included in the block being …\nSchedules an operation to be included in the block being …\nReturns the list of operations scheduled since the most …\nConfigures the application creator chain ID to return …\nConfigures the application ID to return during the test.\nConfigures the application parameters to return during the …\nConfigures the <code>blob</code> returned when fetching from the hash …\nConfigures the <code>blobs</code> returned when fetching from hashes …\nConfigures the chain balance to return during the test.\nConfigures the chain ID to return during the test.\nConfigures the block height to return during the test.\nConfigures the balance of one account on the chain to use …\nConfigures the balances on the chain to use during the …\nConfigures the handler for application queries made during …\nConfigures the system time to return during the test.\nRetrieves the current system time, i.e. the timestamp of …\nConfigures the application creator chain ID to return …\nConfigures the application ID to return during the test.\nConfigures the application parameters to return during the …\nConfigures the <code>blob</code> returned when fetching from the given …\nConfigures the <code>blobs</code> returned when fetching from hashes …\nConfigures the chain balance to return during the test.\nConfigures the chain ID to return during the test.\nConfigures the next block height to return during the test.\nConfigures the balance of one account on the chain to use …\nConfigures the balances on the chain to use during the …\nConfigures the handler for application queries made during …\nConfigures the system time to return during the test.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nExecute the incoming message.\nA reference to a single microchain inside a <code>TestValidator</code>.\nA helper type to build a block proposal using the builder …\nExecuting the service to handle the query failed.\nExecution of the service failed.\nA type for errors happening during execution.\nA handle to a running HTTP server.\nWhat to do with a message picked from the inbox.\nThe block with the mutation’s scheduled operations …\nThe GraphQL query for the mutation failed.\nThe outcome of the execution of a query.\nDo not execute the incoming message.\nThe <code>async_graphql::Request</code> failed to serialize to JSON.\nThe response returned from the service was not valid JSON.\nThe query request failed to serialize to JSON.\nThe service reported some errors.\nA minimal validator implementation suited for tests.\nFailure to perform a GraphQL mutation on an application on …\nFailure to perform a GraphQL query on an application on a …\nFailure to query an application’s service on a chain.\nErrors that can occur when executing a user application in …\nError type for worker operations.\nReads a list of <code>AccountOwner</code>s that have a non-zero balance …\nAdds a block to this microchain.\nAdds a block to this microchain, passing the blobs to be …\nAdds an existing <code>ActiveChain</code>.\nReturns the ID of the admin chain.\nReads all the non-zero account balances on this microchain.\nCompiles the crate in the <code>repository</code> path.\nReads the current shared balance available to all of the …\nUpdates the admin chain, creating a new epoch with an …\nReturns the <code>TestClock</code> of this validator.\nReturns the latest committee that this test validator is …\nCreates an application on this microchain, using the …\nReturns the current <code>Epoch</code> the chain is in.\nReturns the inner <code>ExecutionError</code> in this error.\nReturns the inner <code>ExecutionError</code> in this error.\nReturns the inner <code>ExecutionError</code> in this …\nSearches the Cargo manifest of the crate calling this …\nReturns a tuple with the loaded contract and service …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the <code>ActiveChain</code> reference to the microchain …\nReturns the height of the tip of this microchain.\nExecutes a GraphQL <code>mutation</code> on an <code>application</code> and proposes …\nExecutes a GraphQL <code>query</code> on an <code>application</code>’s state on …\nProcesses all new events from streams this chain …\nReceives all queued messages in all inboxes of this …\nReturns the hostname of this HTTP server.\nReturns the <code>ChainId</code> of this microchain.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether this chain has been closed.\nReturns whether this error is caused by an issue in the …\nReturns whether this error is caused by an issue in the …\nReturns whether this error is caused by an issue in the …\nReturns the <code>AccountSecretKey</code> of the active owner of this …\nReturns the keys this test validator uses for signing …\nReturns all messages logged so far.\nSets the mocked application creator chain ID.\nSets the mocked application ID.\nSets the mocked application parameters.\nSets the mocked application state.\nSets the mocked chain balance.\nSets the mocked chain ID.\nInitializes and returns a view context for using as the …\nSets the mocked system timestamp.\nMocks the <code>try_query_application</code> system API.\nCreates a new <code>ActiveChain</code> instance referencing a new empty …\nCreates a new <code>TestValidator</code>.\nCreates a new microchain and returns the <code>ActiveChain</code> that …\nCreates a new microchain and returns the <code>ActiveChain</code> that …\nReads the current account balance on this microchain of an …\nReads the current account balance on this microchain of …\nReturns the port this HTTP server is listening on.\nReturns the <code>AccountPublicKey</code> of the active owner of this …\nPublishes the bytecode files in the crate at …\nPublishes the module in the crate calling this method to …\nExecutes a <code>query</code> on an <code>application</code>’s state on this …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nSets the <code>AccountSecretKey</code> to use for signing new blocks.\nSpawns a task with an HTTP server serving the routes …\nCreates a <code>ContractRuntime</code> to use in tests.\nCreates a <code>ServiceRuntime</code> to use in tests.\nTries to add a block to this microchain.\nAttempts to execute a GraphQL <code>mutation</code> on an <code>application</code> …\nAttempts to execute a GraphQL <code>query</code> on an <code>application</code>’s …\nAttempts to execute a <code>query</code> on an <code>application</code>’s state on …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the URL string this HTTP server is listening on.\nAdds an application permissions change to this block.\nCreates a new <code>TestValidator</code> with the application of the …\nCreates a new <code>TestValidator</code> with a single microchain with …\nReceives all direct messages  that were sent to this chain …\nReceives all messages that were sent to this chain by the …\nAdds a native token transfer to this block.\nAdds a user <code>operation</code> to this block.\nAdds an operation to change this chain’s ownership.\nAdds an already serialized user <code>operation</code> to this block.\nConfigures the timestamp of this block.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nAn extension trait to block on a <code>Future</code> until it completes.\nThe type returned by the <code>Future</code>.\nA <code>Future</code> that returns <code>Poll::Pending</code> once and immediately …\nWaits for the <code>Future</code> to complete in a blocking manner.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nYields the current asynchronous task so that other tasks …\nArithmetic error\nBCS serialization error.\nAn alias to …\nAn alias to <code>linera_views::map_view::ByteMapView</code> that uses …\nAn alias to <code>linera_views::set_view::ByteSetView</code> that uses …\nAn alias to <code>linera_views::collection_view::CollectionView</code> …\nThe type of context stored in this view\nAn alias to …\nAn alias to <code>linera_views::map_view::CustomMapView</code> that …\nSometimes we need a serialization that is different from …\nAn alias to <code>linera_views::set_view::CustomSetView</code> that …\nThe database is corrupt: Entries don’t have the expected …\nInput output error.\nThe key must not be too long\nA type to interface with the key value storage provided to …\nThe view is loaded in the updates\nAn alias to <code>linera_views::log_view::LogView</code> that uses the …\nAn alias to <code>linera_views::map_view::MapView</code> that uses the …\nThe database is corrupt: Some entries are missing\nThe number of keys used for the initialization\nThe entry does not exist in memory\nThe view is not loaded in the updates\nThe values are incoherent.\nAn alias to <code>linera_views::queue_view::QueueView</code> that uses …\nAn alias to <code>linera_views::collection_view::ReadGuardedView</code> …\nAn alias to <code>linera_views::register_view::RegisterView</code> that …\nA <code>View</code> whose staged modifications can be saved in storage.\nAn alias to <code>linera_views::set_view::SetView</code> that uses the …\nErrors within the context can occur and are presented as …\nTokio errors can happen while joining.\nFailed to lock a reentrant collection entry since it is …\nA view gives exclusive access to read and write the data …\nMain error type for the crate.\nImplementation of <code>linera_views::context::Context</code> to be …\nClears the view. That can be seen as resetting to default. …\nObtains a mutable reference to the internal context.\nPersists changes to storage. This leaves the view still …\nReturns the argument unchanged.\nReturns the argument unchanged.\nDeserialize the vector\nReturns <code>true</code> if flushing this view would result in changes …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLoads a view\nReturns a new <code>KeyValueStore</code> that just keeps the storage …\nBuilds a trivial view that is already deleted\nLoads a view from the values\nCreates the keys needed for loading the view\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nDiscards all pending changes. After that <code>flush</code> should have …\nSaves the root view to the database context\nSerializes the value\nReturns a mocked <code>KeyValueStore</code> that shares the memory …\n<code>ToString::to_string</code>, but without panic on OOM.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nThe guard for the updates. It is needed so that it prevents\nThe key in question.\nThe guard for the updates.\nThe view obtained from the storage\nThe name of the backend that produced the error\nThe inner error")