searchState.loadedDescShard("der", 0, "RustCrypto: ASN.1 DER\n<code>APPLICATION</code>: types whose meaning is specific to an …\nApplication tag.\n<code>BIT STRING</code> tag: <code>3</code>.\n<code>BMPString</code> tag: <code>30</code>.\n<code>BOOLEAN</code> tag: <code>1</code>.\nClass of an ASN.1 tag.\n<code>CONTEXT-SPECIFIC</code>: types whose meaning is specific to a …\nContext-specific tag.\nDate-and-time type shared by multiple ASN.1 types (e.g. …\nDate-and-time related errors.\nDecoding trait.\nMarker trait for data structures that can be decoded from …\nPEM decoding trait.\nDecode the value part of a Tag-Length-Value encoded field, …\nDER ordering trait.\nASN.1 DER-encoded document.\nEncoding trait.\nPEM encoding trait.\nReference encoder: wrapper type which impls <code>Encode</code> for any …\nEncode the value part of a Tag-Length-Value encoded field, …\nReference value encoder: wrapper type which impls …\n<code>ENUMERATED</code> tag: <code>10</code>.\nContains the error value\nError type.\nError type.\n<code>EXPLICIT</code> tagging.\nThis error indicates a previous DER parsing operation …\nFile not found error.\nTypes which have a constant ASN.1 <code>Tag</code>.\n<code>GeneralizedTime</code> tag: <code>24</code>.\nASN.1 DER headers: tag + length component of TLV-encoded …\nIndefinite length.\nThis is the maximum date represented by the <code>DateTime</code> This …\n<code>IA5String</code> tag: <code>22</code>.\n<code>IMPLICIT</code> tagging.\nMessage is incomplete and does not contain all of the …\nLength type with support for indefinite lengths as used by …\nIndefinite length disallowed.\n<code>INTEGER</code> tag: <code>2</code>.\nI/O errors.\nASN.1-encoded length.\nIncorrect length for a given field.\nMaximum length currently supported: 256 MiB\nTag number <code>0</code>\nTag number <code>1</code>\nTag number <code>10</code>\nTag number <code>11</code>\nTag number <code>12</code>\nTag number <code>13</code>\nTag number <code>14</code>\nTag number <code>15</code>\nTag number <code>16</code>\nTag number <code>17</code>\nTag number <code>18</code>\nTag number <code>19</code>\nTag number <code>2</code>\nTag number <code>20</code>\nTag number <code>21</code>\nTag number <code>22</code>\nTag number <code>23</code>\nTag number <code>24</code>\nTag number <code>25</code>\nTag number <code>26</code>\nTag number <code>27</code>\nTag number <code>28</code>\nTag number <code>29</code>\nTag number <code>3</code>\nTag number <code>30</code>\nTag number <code>4</code>\nTag number <code>5</code>\nTag number <code>6</code>\nTag number <code>7</code>\nTag number <code>8</code>\nTag number <code>9</code>\nReader type used by <code>Reader::read_nested</code>.\nMessage is not canonically encoded.\n<code>NULL</code> tag: <code>5</code>.\n<code>NumericString</code> tag: <code>18</code>.\nLength of <code>1</code>\nLength of <code>1</code>.\n<code>OBJECT IDENTIFIER</code> tag: <code>6</code>.\n<code>OCTET STRING</code> tag: <code>4</code>.\nOID is improperly encoded.\nUnknown OID.\nContains the success value\nInteger overflow occurred (library bug!).\nMessage is longer than this library’s internal limits …\nPEM encoding errors.\n<code>Reader</code> type which decodes PEM on-the-fly.\n<code>Writer</code> type which outputs PEM-encoded data.\nPermission denied reading file.\n<code>PrintableString</code> tag: <code>19</code>.\n<code>PRIVATE</code>: types whose meaning is specific to a given …\nPrivate tag number.\nReader trait which reads DER-encoded input.\nReader does not support the requested operation.\n<code>REAL</code> tag: <code>9</code>.\nResult type.\nSecret <code>Document</code> type.\n<code>SEQUENCE</code> tag: <code>16</code>.\n<code>SET</code> and <code>SET OF</code> tag: <code>17</code>.\n<code>SET</code> cannot contain duplicates.\n<code>SET</code> ordering error: items not in canonical order.\n<code>Reader</code> which consumes an input byte slice.\n<code>Writer</code> which encodes DER into a mutable output byte slice.\nASN.1 tag\nASN.1 tags.\nTagging modes: <code>EXPLICIT</code> versus <code>IMPLICIT</code>.\nUnknown tag mode.\nASN.1 tag numbers (i.e. lower 5 bits of a <code>Tag</code>).\nInvalid tag number.\nUnexpected tag.\nUnknown/unsupported tag.\nTypes which have an ASN.1 <code>Tag</code>.\n<code>TeletexString</code> tag: <code>20</code>.\nUndecoded trailing data at end of message.\n<code>UNIVERSAL</code>: built-in types whose meaning is the same in all …\n<code>UTCTime</code> tag: <code>23</code>.\nUTF-8 errors.\n<code>UTF8String</code> tag: <code>12</code>.\nUnexpected value.\nDER value ordering trait.\n<code>VideotexString</code> tag: <code>21</code>.\n<code>VisibleString</code> tag: <code>26</code>.\nWriter trait which outputs encoded DER.\nLength of <code>0</code>\nLength of <code>0</code>.\nCreate an <code>APPLICATION</code> tag with this tag number.\nGet the ASN.1 DER-encoded bytes of this document.\nBorrow the inner serialized bytes of this document.\nModule containing all of the various ASN.1 built-in types …\nAssert that this <code>Tag</code> matches the provided expected tag.\nAnnotate an <code>ErrorKind</code> with context about where it occurred,\nGet the <code>Class</code> that corresponds to this <code>Tag</code>.\nAttempt to decode an ASN.1 <code>CONTEXT-SPECIFIC</code> field with the …\nAttempt to decode an ASN.1 <code>CONTEXT-SPECIFIC</code> field with the …\nCreate a <code>CONTEXT-SPECIFIC</code> tag with this tag number.\nEncode a <code>CONTEXT-SPECIFIC</code> field with the provided tag …\nGet the day.\nAttempt to decode this message using the provided decoder.\nDecode a value which impls the <code>Decode</code> trait.\nDecode a value which impls the <code>Decode</code> trait.\nTry to decode the inner ASN.1 DER message contained in this\nTry to decode the inner ASN.1 DER message as the given …\nAttempt to decode this message using the provided <code>Reader</code>.\nReturn an <code>Ordering</code> between <code>self</code> and <code>other</code> when serialized …\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode a value which impls the <code>Encode</code> trait.\nEncode the provided type as ASN.1 DER, storing the …\nEncode the provided type as ASN.1 DER.\nEncode this value to the provided byte slice, returning a …\nEncode this value to the provided byte slice, returning a …\nEncode this message as ASN.1 DER, appending it to the …\nEncode this message as ASN.1 DER, appending it to the …\nEncode value (sans <code>Tag</code>+<code>Length</code> header) as ASN.1 DER using …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nReturn an error with the given <code>ErrorKind</code>, annotating it …\nReturn an error with the given <code>ErrorKind</code>, annotating it …\nReturn an error with the given <code>ErrorKind</code>, annotating it …\nReturn an error with the given <code>ErrorKind</code>, annotating it …\nFinish decoding, returning the given value if there is no …\nFinish decoding, returning the given value if there is no …\nFinish encoding PEM, writing the post-encapsulation …\nFinish encoding to the buffer, returning a slice …\nGet the length of DER Tag-Length-Value (TLV) encoded data …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse <code>Self</code> from the provided DER-encoded byte slice.\nParse <code>Self</code> from the provided DER-encoded byte slice.\nTry to decode this type from PEM.\nDecode ASN.1 DER document from PEM.\nDecode ASN.1 DER document from PEM.\nInstantiate from <code>SystemTime</code>.\nCompute a <code>DateTime</code> from the given <code>Duration</code> since the …\nGet the <code>Header</code> used to encode this value.\nGet the <code>Header</code> used to encode this value.\nGet the hour.\nCreate a new <code>ErrorKind::Incomplete</code> for the given length.\nGet the length of the input.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert to a <code>SecretDocument</code>.\nConvert to an ASN.1 DER-encoded byte vector.\nIs this an application tag?\nDoes this tag represent a constructed (as opposed to …\nIs this a context-specific tag?\nIs this length definite?\nDid the decoding operation fail due to an error?\nDid the decoding operation fail due to an error?\nHave we read all of the input data?\nHave we read all of the input data?\nIs this length indefinite?\nIs this a private tag?\nIs this a universal tag?\nIs this length equal to zero?\nGet the <code>ErrorKind</code> which occurred.\nGet the length of the encoded ASN.1 DER in bytes.\nGet the length of the encoded ASN.1 DER in bytes.\nLength of the encoded value\nCreate an <code>Error</code> for an invalid <code>Length</code>.\nGet the minutes.\nGet the month.\nCreate a new PEM writer which outputs into the provided …\nCreate a new <code>DateTime</code> from the given UTC time components.\nCreate a new <code>Error</code>.\nCreate a new <code>Header</code> from a <code>Tag</code> and a specified length.\nCreate a new <code>Length</code> for any value which fits inside of a …\nCreate a definite length from a type which can be …\nCreate a new PEM reader which decodes data on-the-fly.\nCreate a new slice reader for the given byte slice.\nCreate a new tag number (const-friendly).\nCreate a new encoder with the given byte slice as a …\nCreate an <code>Error</code> for an non-canonical value with the ASN.1 …\nGet the <code>TagNumber</code> (lower 6-bits) for this tag.\nGet the octet encoding for this <code>Tag</code>.\nOffset within the original input stream.\nOffset within the original input stream.\nPeek at the next byte of input without modifying the …\nPeek forward in the input data, attempting to decode a …\nPeek at the next byte in the decoder and attempt to decode …\nPeek at the next byte in the decoder and attempt to decode …\nGet the position within the buffer.\nGet the position inside of the message where the error …\nCreate a <code>PRIVATE</code> tag with this tag number.\nRead a single byte.\nRead a single byte.\nRead ASN.1 DER document from a file.\nRead ASN.1 DER document from a file.\nAttempt to read input data, writing it into the provided …\nAttempt to read input data, writing it into the provided …\nRead nested data of the given length.\nRead nested data of the given length.\nRead PEM-encoded ASN.1 DER document from a file.\nRead PEM-encoded ASN.1 DER document from a file.\nAttempt to read data borrowed directly from the input as a …\nRead a byte vector of the given length.\nRead a byte vector of the given length.\nA module for working with referenced data.\nGet the number of bytes still remaining in the buffer.\nGet the number of bytes still remaining in the buffer.\nPerform saturating addition of two lengths.\nPerform saturating subtraction of two lengths.\nGet the seconds.\nRead an ASN.1 <code>SEQUENCE</code>, creating a nested <code>Reader</code> for the …\nRead an ASN.1 <code>SEQUENCE</code>, creating a nested <code>Reader</code> for the …\nEncode an ASN.1 <code>SEQUENCE</code> of the given length.\nGet the ASN.1 tag that this type is encoded with.\nTag representing the type of the encoded value\nObtain a slice of bytes contain a complete TLV production …\nObtain a slice of bytes contain a complete TLV production …\nReturn an allocated ASN.1 DER serialization as a byte …\nEncode this type as DER, returning a byte vector.\nEncode this type as DER, returning a byte vector.\nTry to encode this type as PEM.\nEncode ASN.1 DER document as a PEM string with …\nEncode ASN.1 DER document as a PEM string.\nConvert to <code>SystemTime</code>.\nReturn an ASN.1 DER-encoded byte vector.\nGet the PEM label which will be used in the encapsulation …\nGet the PEM label which will be used in the encapsulation …\nCreate an <code>Error</code> because the current tag was unexpected, …\nCompute <code>Duration</code> since <code>UNIX_EPOCH</code> from the given calendar …\nGet the inner value.\nReturn an <code>Ordering</code> between value portion of TLV-encoded …\nReturn an error for an invalid value with the given tag.\nCreate an <code>Error</code> for an invalid value with the ASN.1 type …\nCompute the length of this value (sans <code>Tag</code>+<code>Length</code> header) …\nWrite the given DER-encoded bytes as output.\nWrite a single byte.\nWrite a single byte.\nWrite ASN.1 DER document to a file.\nWrite ASN.1 DER document to a file.\nWrite PEM-encoded ASN.1 DER document to a file.\nWrite PEM-encoded ASN.1 DER document to a file.\nGet the year.\nActual tag encountered in the message.\nActual length of the message buffer currently being …\nRaw byte value of the tag.\nLength of the decoded data.\nTag the decoder was expecting (if there is a single such …\nExpected message length.\nOID value that was unrecognized by a parser for a …\nTotal length of the remaining data left in the buffer.\nTag of the value being decoded.\nTag of the value which is not canonically encoded.\nTag of the unexpected value.\nIs this tag constructed? (vs primitive).\nIs this tag constructed? (vs primitive).\nIs this tag constructed? (vs primitive).\nTag number.\nTag number.\nTag number.\nASN.1 <code>ANY</code>: represents any explicitly tagged ASN.1 value.\nASN.1 <code>ANY</code>: represents any explicitly tagged ASN.1 value.\nOwned form of ASN.1 <code>BIT STRING</code> type.\nIterator over the bits of a <code>BitString</code>.\nASN.1 <code>BIT STRING</code> type.\nASN.1 <code>BMPString</code> type.\nASN.1 <code>CHOICE</code> denotes a union of one or more possible …\nContext-specific field which wraps an owned inner value.\nContext-specific field reference.\nASN.1 <code>GeneralizedTime</code> type.\nASN.1 <code>IA5String</code> type.\nASN.1 <code>IA5String</code> type.\nSigned arbitrary precision ASN.1 <code>INTEGER</code> type.\nSigned arbitrary precision ASN.1 <code>INTEGER</code> reference type.\nLength of an RFC 5280-flavored ASN.1 DER-encoded <code>UtcTime</code>.\nMaximum size of a BER/DER-encoded OID in bytes.\nMaximum number of unused bits allowed.\nMaximum number of unused bits allowed.\nMaximum year that can be represented as a <code>UTCTime</code>.\n<code>AnyRef</code> representation of the ASN.1 <code>NULL</code> type.\nASN.1 <code>NULL</code> type.\nObject identifier (OID).\nASN.1 <code>OCTET STRING</code> type: owned form..\nASN.1 <code>OCTET STRING</code> type: borrowed form.\nASN.1 <code>PrintableString</code> type.\nASN.1 <code>PrintableString</code> type.\nMarker trait for ASN.1 <code>SEQUENCE</code>s.\nASN.1 <code>SEQUENCE OF</code> backed by an array.\nIterator over the elements of an <code>SequenceOf</code>.\nThe <code>SequenceRef</code> type provides raw access to the octets …\nASN.1 <code>SET OF</code> backed by an array.\nIterator over the elements of an <code>SetOf</code>.\nASN.1 <code>SET OF</code> backed by a <code>Vec</code>.\nASN.1 <code>TeletexString</code> type.\nASN.1 <code>TeletexString</code> type.\nUnsigned arbitrary precision ASN.1 <code>INTEGER</code> type.\nUnsigned arbitrary precision ASN.1 <code>INTEGER</code> reference type.\nASN.1 <code>UTCTime</code> type.\nASN.1 <code>UTF8String</code> type.\nASN.1 <code>VideotexString</code> type.\nAdd an element to this <code>SequenceOf</code>.\nAdd an item to this <code>SetOf</code>.\nAdd an element to this <code>SetOfVec</code>.\nReturn the arc with the given index, if it exists.\nIterate over the arcs (a.k.a. nodes) of an <code>ObjectIdentifier</code>…\nGet the BER/DER serialization of this OID as bytes.\nBorrow the inner byte slice.\nBorrow the inner byte slice.\nBorrow the encoded UCS-2 as bytes.\nBorrow the inner byte slice which contains the least …\nBorrow the inner byte slice which contains the least …\nBorrow the inner byte slice which contains the least …\nBorrow the inner byte slice which contains the least …\nBorrow the inner byte slice.\nBorrow the inner byte slice.\nBorrow the elements of this <code>SetOfVec</code> as a slice.\nGet the length of this <code>BIT STRING</code> in bits.\nGet the length of this <code>BIT STRING</code> in bits.\nIterator over the bits of this <code>BIT STRING</code>.\nIterator over the bits of this <code>BIT STRING</code>.\nGet the number of bytes/octets needed to represent this …\nIs the provided <code>Tag</code> decodable as a variant of this <code>CHOICE</code>?\nGet an iterator over characters in the string.\nGet an iterator over the <code>u16</code> codepoints.\nAttempt to decode this <code>AnyRef</code> type into the inner value.\nAttempt to decode this <code>Any</code> type into the inner value.\nAttempt to decode an <code>EXPLICIT</code> ASN.1 <code>CONTEXT-SPECIFIC</code> field …\nAttempt to decode an <code>IMPLICIT</code> ASN.1 <code>CONTEXT-SPECIFIC</code> field …\nParse <code>T</code> from this <code>OCTET STRING</code>’s contents.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nEncode the provided type as an <code>Any</code> value.\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nCompute the length of this value in bytes when encoded as …\nExtend a <code>SetOfVec</code> using an iterator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nParse an OID from a slice of <code>Arc</code> values (i.e. integers).\nParse an OID from from its BER/DER encoding.\nCreate a new ASN.1 <code>BIT STRING</code> from the given bytes.\nCreate a new ASN.1 <code>BIT STRING</code> from the given bytes.\nCreate a <code>GeneralizedTime</code> from a <code>DateTime</code>.\nCreate a <code>UtcTime</code> from a <code>DateTime</code>.\nCreate a new <code>SetOfVec</code> from the given iterator.\nInstantiate from <code>SystemTime</code>.\nInstantiate from <code>SystemTime</code>.\nCreate a new <code>BmpString</code> from its UCS-2 encoding.\nCreate a new <code>GeneralizedTime</code> given a <code>Duration</code> since …\nCreate a new <code>UtcTime</code> given a <code>Duration</code> since <code>UNIX_EPOCH</code> …\nCreate a new <code>BmpString</code> from a UTF-8 string.\nGet an element of this <code>SequenceOf</code>.\nGet the nth element from this <code>SetOf</code>.\nGet the nth element from this <code>SetOfVec</code>.\nIs the number of unused bits a value other than 0?\nIs the number of unused bits a value other than 0?\nInsert an item into this <code>SetOf</code>.\nInsert an item into this <code>SetOfVec</code>. Must be unique.\nInsert an item into this <code>SetOf</code>.\nInsert an item into this <code>SetOfVec</code>. Must be unique.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nObtain the inner bytes.\nTake ownership of the octet string.\nConvert this <code>SetOfVec</code> into the inner <code>Vec</code>.\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs the inner byte slice empty?\nIs this <code>SequenceOf</code> empty?\nIs this <code>SetOf</code> empty?\nIs this <code>SetOfVec</code> empty?\nIs this value an ASN.1 <code>NULL</code> value?\nIs this value an ASN.1 <code>NULL</code> value?\nIterate over the elements in this <code>SequenceOf</code>.\nIterate over the elements of this <code>SetOf</code>.\nIterate over the elements of this <code>SetOfVec</code>.\nGet the length of this <code>ObjectIdentifier</code> in arcs.\nGet the length of this <code>IntRef</code> in bytes.\nGet the length of this <code>Int</code> in bytes.\nGet the length of this <code>UintRef</code> in bytes.\nGet the length of this <code>Uint</code> in bytes.\nGet the length of the inner byte slice.\nGet the length of the inner byte slice.\nNumber of elements in this <code>SequenceOf</code>.\nNumber of elements in this <code>SetOf</code>.\nNumber of elements in this <code>SetOfVec</code>.\nParse an <code>ObjectIdentifier</code> from the dot-delimited string …\nCreate a new <code>AnyRef</code> from the provided <code>Tag</code> and DER bytes.\nCreate a new <code>Any</code> from the provided <code>Tag</code> and DER bytes.\nCreate a new ASN.1 <code>BIT STRING</code> from a byte slice.\nCreate a new ASN.1 <code>BIT STRING</code> from a byte slice.\nCreate a new <code>IA5String</code>.\nCreate a new <code>IA5String</code>.\nCreate a new <code>IntRef</code> from a byte slice.\nCreate a new <code>Int</code> from a byte slice.\nCreate a new <code>UintRef</code> from a byte slice.\nCreate a new <code>Uint</code> from a byte slice.\nCreate a new ASN.1 <code>OCTET STRING</code> from a byte slice.\nCreate a new ASN.1 <code>OCTET STRING</code>.\nCreate a new ASN.1 <code>PrintableString</code>.\nCreate a new ASN.1 <code>PrintableString</code>.\nCreate a new <code>SequenceOf</code>.\nCreate a new <code>SetOf</code>.\nCreate a new <code>SetOfVec</code>.\nCreate a new ASN.1 <code>TeletexString</code>.\nCreate a new ASN.1 <code>TeletexString</code>.\nCreate a new ASN.1 <code>UTF8String</code>.\nCreate a new ASN.1 <code>VideotexString</code>.\nParse an <code>ObjectIdentifier</code> from the dot-delimited string …\n<code>Any</code> representation of the ASN.1 <code>NULL</code> type.\nGet the parent OID of this one (if applicable).\nPush an additional arc onto this OID, returning the child …\nBorrow the raw bytes of this <code>BIT STRING</code>.\nBorrow the raw bytes of this <code>BIT STRING</code>.\nAttempt to decode this value an ASN.1 <code>SEQUENCE</code>, creating a …\nAttempt to decode this value an ASN.1 <code>SEQUENCE</code>, creating a …\nTag mode: <code>EXPLICIT</code> VS <code>IMPLICIT</code>.\nTag mode: <code>EXPLICIT</code> VS <code>IMPLICIT</code>.\nContext-specific tag number sans the leading <code>0b10000000</code> …\nContext-specific tag number sans the leading <code>0b10000000</code> …\nConvert this <code>GeneralizedTime</code> into a <code>DateTime</code>.\nConvert this <code>UtcTime</code> into a <code>DateTime</code>.\nConvert to <code>SystemTime</code>.\nConvert to <code>SystemTime</code>.\nGet the duration of this timestamp since <code>UNIX_EPOCH</code>.\nGet the duration of this timestamp since <code>UNIX_EPOCH</code>.\nGet the number of unused bits in this byte slice.\nGet the number of unused bits in the octet serialization …\nGet the raw value for this <code>AnyRef</code> type as a byte slice.\nAllow access to value\nValue of the field.\nValue of the field.\nThe resulting type referencing back to Self\nThe resulting type after obtaining ownership.\nA trait for borrowing data from an owned struct\nA trait for cloning a referenced structure and getting …\nCreates a new object referencing back to the self for …\nCreates a new object taking ownership of the data")