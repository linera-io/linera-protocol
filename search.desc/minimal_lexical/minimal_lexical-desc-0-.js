searchState.loadedDescShard("minimal_lexical", 0, "Fast, minimal float-parsing algorithm.\nMask to determine if a full-carry occurred (1 in bit above …\nExponent portion of a denormal float.\nBias of the exponet\nBitmask for the exponent, including the hidden bit.\nGeneric floating-point type, to be used in generic code …\nBitmask for the hidden bit in exponent, which is an …\nBias for marking an invalid extended float.\nLargest decimal exponent for a non-infinite value.\nBitmask for the mantissa (fraction), excluding the hidden …\nSize of the significand (mantissa) without hidden bit.\nMaximum number of digits that can contribute in the …\nMaximum exponent value in float.\nMaximum exponent that can be represented for a …\nMaximum exponent that for a fast path case, or …\nMinimum normal exponent value …\nMinimum exponent that for a fast path case, or …\nBitmask for the sign bit.\nSmallest decimal exponent for a non-zero value.\nGet exponent component from the float.\nConvert 64-bit integer to float.\nGet a small, integral power-of-radix for fast-path …\nReturns true if the float is a denormal.\nGet mantissa (significand) component from float.\nParse float from extracted float components.\nGet a small power-of-radix for fast-path multiplication.")