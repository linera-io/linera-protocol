searchState.loadedDescShard("revm_inspector", 0, "Inspector is a crate that provides a set of traits that …\nInspectCommitEvm is a API that allows inspecting similar …\nInspectEvm is a API that allows inspecting the EVM.\nEVM hooks into execution.\nInspector EVM trait. Extends the <code>EvmTr</code> trait with …\nTraits that extends the Frame with additional …\nExtends the journal with additional methods that are used …\nDummy Inspector, helpful as standalone replacement.\nCalled whenever a call to a contract is about to start.\nCalled whenever a call to a contract is about to start.\nCalled when a call to a contract has concluded.\nCalled when a call to a contract has concluded.\nCalled when a contract is about to be created.\nCalled when a contract is about to be created.\nCalled when a contract has been created.\nCalled when a contract has been created.\nReturns a tuple of mutable references to the context and …\nCalled when EOF creating is called.\nCalled when EOF creating is called.\nCalled when eof creating has ended.\nCalled when eof creating has ended.\nReturn the current Journaled state.\nReturn the mutable current Journaled state.\nReturns a reference to the frame input. Frame input is …\nReturns the argument unchanged.\nCalled before the interpreter is initialized.\nCalled before the interpreter is initialized.\nInspect the EVM with the given inspector and transaction.\nInspect the EVM with the given inspector and transaction.\nInspect the EVM with the given transaction and inspector …\nInspect the EVM with the given transaction and inspector …\nInspect the EVM with the current inspector and previous …\nInspect the EVM with the current inspector and previous …\nInspects commit with the given inspector and previous …\nInspects commit with the given inspector and previous …\nInspect the EVM with the current inspector and previous …\nInspect the EVM with the current inspector and previous …\nInspect the EVM with the current inspector and previous …\nInspect the EVM with the current inspector and previous …\nInspect the EVM with the given transaction.\nInspect the EVM with the given transaction.\nReturns a mutable reference to the inspector.\nInspector implementations.\nReturns a mutable reference to the interpreter.\nCalls <code>U::from(self)</code>.\nGet the journal entries that are created from last …\nCalled when a log is emitted.\nCalled when a log is emitted.\nGet all logs from the journal.\nIt runs the frame in inspection mode.\nRuns the inspector on the interpreter.\nCalled when a contract has been self-destructed with funds …\nCalled when a contract has been self-destructed with funds …\nSet the inspector for the EVM.\nCalled on each step of the interpreter.\nCalled on each step of the interpreter.\nCalled after <code>step</code> when the instruction has been executed.\nCalled after <code>step</code> when the instruction has been executed.\nTrait that extends <code>Handler</code> with inspection functionality.\nRun execution loop with inspection support\nInitialize first frame.\nRun inspection on frame.\nRun Interpreter loop with inspection support.\nEntry point for inspection.\nRun inspection on execution loop.\nRun inspection without catching error.\nHelper that keeps track of gas.\nSpend all gas if call failed.\nSpend all gas if create failed.\nReturns the argument unchanged.\nReturns the remaining gas.\nSets remaining gas to gas limit.\nCalls <code>U::from(self)</code>.\nReturns the last gas cost.\nCreate a new gas inspector.\nSets the remaining gas.\ncalculate last gas cost and remaining gas.")