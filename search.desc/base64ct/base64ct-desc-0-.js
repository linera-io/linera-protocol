searchState.loadedDescShard("base64ct", 0, "RustCrypto: Constant-Time Base64\nStandard Base64 encoding with <code>=</code> padding.\nbcrypt Base64 encoding.\n<code>crypt(3)</code> Base64 encoding.\n<code>crypt(3)</code> Base64 encoding for the following schemes.\nStandard Base64 encoding <em>without</em> padding.\nURL-safe Base64 encoding with <code>=</code> padding.\nURL-safe Base64 encoding <em>without</em> padding.\nCarriage return: <code>\\r</code> (Pre-OS X Macintosh)\nCarriage return + line feed: <code>\\r\\n</code> (Windows)\nStateful Base64 decoder with support for buffered, …\nStateful Base64 encoder with support for buffered, …\nBase64 encoding trait.\nGeneric error, union of <code>InvalidLengthError</code> and …\nInvalid encoding of provided Base64 string.\nInvalid encoding of provided Base64 string.\nInsufficient output buffer length.\nInsufficient output buffer length.\nLine feed: <code>\\n</code> (Unix OSes)\nLine endings: variants of newline characters that can be …\nGet the byte serialization of this <code>LineEnding</code>.\nDecode a Base64 string into the provided destination …\nFill the provided buffer with data decoded from Base64.\nDecode a Base64 string in-place.\nDecode all remaining Base64 data, placing the result into …\nDecode a Base64 string into a byte vector.\nEncode the input byte slice as Base64.\nEncode the provided buffer as Base64, writing it to the …\nEncode input byte slice into a <code>String</code> containing Base64.\nGet the length of Base64 produced by encoding the given …\nFinish encoding data, returning the resulting Base64 as a …\nFinish encoding data, returning the resulting Base64 as a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nHas all of the input data been decoded?\nGet the encoded length of this <code>LineEnding</code>.\nCreate a new encoder which writes output to the given byte …\nCreate a new decoder for a byte slice containing contiguous\nCreate a new encoder which writes line-wrapped output to …\nCreate a new decoder for a byte slice containing Base64 …\nGet the position inside of the output buffer where the …\nGet the length of the remaining data after Base64 decoding.")