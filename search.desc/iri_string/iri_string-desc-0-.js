searchState.loadedDescShard("iri_string", 0, "String types for RFC 3987 Internationalized Resource …\nURI/IRI builder.\nComponents of IRIs.\nConversion between URI/IRI types.\nUtilities for formatting (especially <code>Display</code> trait).\nPassword masker.\nNormalization.\nPercent encoding.\nURI and IRI resolvers.\nIRI specs.\nProcessor for RFC 6570 URI Template.\nURI and IRI types.\nValidators.\nA trait for borrowed IRI string types buildable by the …\nURI/IRI reference builder.\n<code>Display</code>-able IRI build result.\nPort builder.\nUserinfo builder.\nBuilds the proxy object that can be converted to the …\nReturns Ok<code>(())</code> if the IRI is normalizable by the RFC 3986 …\nReturns Ok<code>(())</code> if the IRI is normalizable by the RFC 3986 …\nReturns Ok<code>(())</code> if the IRI is normalizable by the RFC 3986 …\nReturns Ok<code>(())</code> if the IRI is normalizable by the RFC 3986 …\nSets the fragment.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSets the reg-name or IP address (i.e. host) without port.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the IP address as a host.\nCreates a builder with empty data.\nNormalizes the result using RFC 3986 syntax-based …\nSets the path.\nSets the port.\nSets the query.\nSets the scheme.\n<code>ToString::to_string</code>, but without panic on OOM.\nUnsets the authority.\nUnsets the fragment.\nStop normalizing the result.\nUnsets the port.\nUnsets the query.\nUnsets the scheme.\nUnsets the port.\nSets the userinfo.\nSubcomponents of authority.\nReturns the argument unchanged.\nCreates a new <code>AuthorityComponents</code> from the IRI.\nReturns the <code>host</code> part.\nCalls <code>U::from(self)</code>.\nReturns the <code>port</code> part, excluding the following <code>:</code>.\nReturns the <code>userinfo</code> part, excluding the following <code>@</code>.\nA resource identifier mapped to a URI of some kind.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nOutput buffer capacity overflow error.\nConversion target type.\nA trait for types that can be converted to a dedicated …\n<code>ToString</code>, but without panic.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConverts the value to the allocated string.\nAppends the data to the string.\nConverts the value to the allocated string.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nWrites to the bytes buffer.\nA wrapper of an IRI string that masks the non-empty …\nA wrapper of an IRI string that replaces the non-empty …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReplaces the password with the given arbitrary content.\nReplaces the password with the given arbitrary content.\nReplaces the password with the given arbitrary content.\nReplaces the password with the given arbitrary content.\nReplaces the password with the given arbitrary content.\nReplaces the password with the given arbitrary content.\nReplaces the password with the given arbitrary content.\nReplaces the password with the given arbitrary content.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nIRI normalization and resolution error.\nNormalized OR resolved IRI.\nReturns <code>Self</code> with normalization enabled.\nReturns <code>Self</code> with special normalization enabled.\nEnables the normalization.\nEnables the normalization that preserve relative path …\nChecks if the path is normalizable by RFC 3986 algorithm.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nA proxy to percent-encode a string.\nA proxy to percent-encode a string as a part of IRI.\nA proxy to percent-encode a string as a part of URI.\nPercent-encodes characters only if they cannot appear …\nReturns the argument unchanged.\nCreates an encoded string from a raw fragment.\nCreates an encoded string from a raw user name (inside …\nCreates an encoded string from a raw path.\nCreates an encoded string from a raw path segment.\nCreates an encoded string from a raw query.\nCreates an encoded string from a raw reg-name (i.e. …\nCreates an encoded string from a raw user name (inside …\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\nCreates a string consists of only <code>unreserved</code> string and …\nA resolver against the fixed base.\nReturns the authority.\nReturns the base.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreates a new resolver with the given base.\nReturns the path.\nReturns the query.\nReturns the query in a raw string slice.\nResolves the given reference against the fixed base.\nReturns the scheme.\nA type that represents specification of IRI.\nA trait for spec types.\nA type that represents specification of URI.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nError on conversion into a URI template type.\nTemplate construction and expansion error.\nTemplate expansion result.\nA borrowed slice of a URI template.\nAn owned slice of a URI template.\nAn iterator of variables in a URI template.\nDeprecated old name of <code>template::context::VarName</code>.\nAppends the template string.\nReturns the borrowed IRI string slice.\nReturns the template as a plain <code>&amp;str</code>.\nReturns the internal buffer capacity in bytes.\nTemplate expansion context.\nExpands the template with the given context.\nExpands the template with the given dynamic context.\nExpands the template into a string, with the given dynamic …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the source data.\nReturns whether the string is empty.\nReturns the template string length.\nCreates a new string.\nCreates a new string without validation.\nCreates a new string without validation.\nShrinks the capacity of the inner buffer to match its …\nSimple general-purpose context type.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the validation error.\nReturns an iterator of variables in the template.\nAssociative array visitor.\nAssociative array visitor.\nA trait for types that can behave as a static URI template …\nA trait for types that can behave as a dynamic (mutable) …\nA visit for template expansion to retrieve the value.\nList visitor.\nList visitor.\nResult of the visit.\nResult of the visit.\nResult of the visit.\nA visit for type checking.\nVariable name.\nA purpose of a visit.\nVariable visitor.\nReturns the varibale name.\nFinishes visiting the list.\nFinishes visiting the associative array.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>VarName</code> from the string.\nA callback that is called after the expansion of a URI …\nA callback that is called before the expansion of a URI …\nReturns the purpose of the visit.\nReturns the name of the variable to visit.\nVisits a variable.\nVisits an associative array variable.\nVisits a variable.\nVisits entries and finish.\nVisits an entry.\nVisits an item.\nVisits items and finish.\nVisits a list variable.\nVisits a string variable.\nVisits an undefined variable, i.e. indicates that the …\nAssociative array.\nList.\nSimple template expansion context.\nString value.\nUndefined (i.e. null).\nValue.\nRemoves all entries in the context.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a reference to the value for the key.\nInserts a variable.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new empty context.\nError on conversion into an IRI type.\nA type alias for <code>RiAbsoluteStr</code><code>&lt;</code><code>IriSpec</code><code>&gt;</code>.\nA type alias for <code>RiAbsoluteString</code><code>&lt;</code><code>IriSpec</code><code>&gt;</code>.\nA type alias for <code>RiFragmentStr</code><code>&lt;</code><code>IriSpec</code><code>&gt;</code>.\nA type alias for <code>RiFragmentString</code><code>&lt;</code><code>IriSpec</code><code>&gt;</code>.\nA type alias for <code>RiQueryStr</code><code>&lt;</code><code>IriSpec</code><code>&gt;</code>.\nA type alias for <code>RiQueryString</code><code>&lt;</code><code>IriSpec</code><code>&gt;</code>.\nA type alias for <code>RiReferenceStr</code><code>&lt;</code><code>IriSpec</code><code>&gt;</code>.\nA type alias for <code>RiReferenceString</code><code>&lt;</code><code>IriSpec</code><code>&gt;</code>.\nA type alias for <code>RiRelativeStr</code><code>&lt;</code><code>IriSpec</code><code>&gt;</code>.\nA type alias for <code>RiRelativeString</code><code>&lt;</code><code>IriSpec</code><code>&gt;</code>.\nA type alias for <code>RiStr</code><code>&lt;</code><code>IriSpec</code><code>&gt;</code>.\nA type alias for <code>RiString</code><code>&lt;</code><code>IriSpec</code><code>&gt;</code>.\nA borrowed slice of an absolute IRI without fragment part.\nAn owned string of an absolute IRI without fragment part.\nA borrowed slice of an IRI fragment (i.e. after the first <code>#</code>…\nAn owned string of an IRI fragment (i.e. after the first <code>#</code> …\nA borrowed slice of an IRI query (i.e. after the first <code>?</code> …\nAn owned string of an IRI fragment (i.e. after the first <code>#</code> …\nA borrowed string of an absolute IRI possibly with …\nAn owned string of an absolute IRI possibly with fragment …\nA borrowed slice of a relative IRI reference.\nAn owned string of a relative IRI reference.\nA borrowed string of an absolute IRI possibly with …\nAn owned string of an absolute IRI possibly with fragment …\nA type alias for <code>RiAbsoluteStr</code><code>&lt;</code><code>UriSpec</code><code>&gt;</code>.\nA type alias for <code>RiAbsoluteString</code><code>&lt;</code><code>UriSpec</code><code>&gt;</code>.\nA type alias for <code>RiFragmentStr</code><code>&lt;</code><code>UriSpec</code><code>&gt;</code>.\nA type alias for <code>RiFragmentString</code><code>&lt;</code><code>UriSpec</code><code>&gt;</code>.\nA type alias for <code>RiQueryStr</code><code>&lt;</code><code>UriSpec</code><code>&gt;</code>.\nA type alias for <code>RiQueryString</code><code>&lt;</code><code>UriSpec</code><code>&gt;</code>.\nA type alias for <code>RiReferenceStr</code><code>&lt;</code><code>UriSpec</code><code>&gt;</code>.\nA type alias for <code>RiReferenceString</code><code>&lt;</code><code>UriSpec</code><code>&gt;</code>.\nA type alias for <code>RiRelativeStr</code><code>&lt;</code><code>UriSpec</code><code>&gt;</code>.\nA type alias for <code>RiRelativeString</code><code>&lt;</code><code>UriSpec</code><code>&gt;</code>.\nA type alias for <code>RiStr</code><code>&lt;</code><code>UriSpec</code><code>&gt;</code>.\nA type alias for <code>RiString</code><code>&lt;</code><code>UriSpec</code><code>&gt;</code>.\nReturns the borrowed IRI string slice.\nReturns the borrowed IRI string slice.\nReturns the borrowed IRI string slice.\nReturns the borrowed IRI string slice.\nReturns the borrowed IRI string slice.\nReturns the borrowed IRI string slice.\nReturns <code>&amp;str</code>.\nReturns <code>&amp;str</code>.\nReturns <code>&amp;str</code>.\nReturns <code>&amp;str</code>.\nReturns <code>&amp;str</code>.\nReturns <code>&amp;str</code>.\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nReturns the authority components.\nReturns the authority components.\nReturns the authority components.\nReturns the authority components.\nReturns the authority.\nReturns the authority.\nReturns the authority.\nReturns the authority.\nReturns the internal buffer capacity in bytes.\nReturns the internal buffer capacity in bytes.\nReturns the internal buffer capacity in bytes.\nReturns the internal buffer capacity in bytes.\nReturns the internal buffer capacity in bytes.\nReturns the internal buffer capacity in bytes.\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nReturns Ok<code>(())</code> if the IRI is normalizable by the RFC 3986 …\nReturns Ok<code>(())</code> if the IRI is normalizable by the RFC 3986 …\nReturns the fragment part if exists.\nReturns the fragment part if exists.\nReturns the fragment part if exists.\nReturns the fragment part as a raw string slice if exists.\nReturns the fragment part as a raw string slice if exists.\nReturns the fragment part as a raw string slice if exists.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>&amp;RiFragmentStr</code> from the fragment part …\nCreates a new <code>&amp;RiQueryStr</code> from the query part prefixed by <code>?</code>…\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStrips the fragment part if exists, and returns an …\nSplits the IRI into an absolute IRI part and a fragment …\nReturns the string as <code>RiString</code>, if it is valid as an IRI.\nReturns the string as <code>RiRelativeString</code>, if it is valid as …\nReturns the source data.\nReturns whether the string is empty.\nReturns whether the string is empty.\nReturns whether the string is empty.\nReturns whether the string is empty.\nReturns whether the string is empty.\nReturns whether the string is empty.\nReturns <code>true</code> if the IRI is already normalized.\nReturns <code>true</code> if the IRI is already normalized.\nReturns <code>true</code> if the IRI is already normalized in the sense …\nReturns <code>true</code> if the IRI is already normalized in the sense …\nReturns <code>true</code> if the IRI is already normalized.\nReturns <code>true</code> if the IRI is already normalized in the sense …\nReturns the string length.\nReturns the string length.\nReturns the string length.\nReturns the string length.\nReturns the string length.\nReturns the string length.\nReturns the proxy to the IRI with password masking feature.\nReturns the proxy to the IRI with password masking feature.\nReturns the proxy to the IRI with password masking feature.\nReturns the proxy to the IRI with password masking feature.\nCreates a new string.\nCreates a new string.\nCreates a new string.\nCreates a new string.\nCreates a new string.\nCreates a new string.\nCreates a new string without validation.\nCreates a new string without validation.\nCreates a new string without validation.\nCreates a new string without validation.\nCreates a new string without validation.\nCreates a new string without validation.\nCreates a new string without validation.\nCreates a new string without validation.\nCreates a new string without validation.\nCreates a new string without validation.\nCreates a new string without validation.\nCreates a new string without validation.\nReturns the normalized IRI.\nReturns the normalized IRI.\nReturns the normalized IRI, but preserving dot segments in …\nReturns the normalized IRI, but preserving dot segments in …\nReturns the path.\nReturns the path.\nReturns the path.\nReturns the path.\nReturns the query.\nReturns the query.\nReturns the query.\nReturns the query.\nReturns the query in a raw string slice.\nReturns the query in a raw string slice.\nReturns the query as a raw string slice.\nReturns the query in a raw string slice.\nReplaces the non-empty password in <code>self</code> to the empty …\nReplaces the non-empty password in <code>self</code> to the empty …\nReplaces the non-empty password in <code>self</code> to the empty …\nReplaces the non-empty password in <code>self</code> to the empty …\nRemoves the password completely (including separator …\nRemoves the password completely (including separator …\nRemoves the password completely (including separator …\nRemoves the password completely (including separator …\nReturns resolved IRI against the given base IRI.\nReturns resolved IRI against the given base IRI.\nReturns the scheme.\nReturns the scheme.\nReturns the scheme.\nSets the fragment part to the given string.\nSets the fragment part to the given string.\nSets the fragment part to the given string.\nShrinks the capacity of the inner buffer to match its …\nShrinks the capacity of the inner buffer to match its …\nShrinks the capacity of the inner buffer to match its …\nShrinks the capacity of the inner buffer to match its …\nShrinks the capacity of the inner buffer to match its …\nShrinks the capacity of the inner buffer to match its …\nStrips the fragment part if exists, and returns …\nSplits the IRI into an absolute IRI part and a fragment …\nReturns the string as <code>&amp;RiStr</code>, if it is valid as an IRI.\nReturns the string as <code>&amp;RiRelativeStr</code>, if it is valid as an …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nPercent-encodes the IRI into a valid URI that identifies …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\nConverts an IRI into a URI without modification, if …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the validation error.\nResource identifier validation error.\nValidates absolute IRI.\nValidates IRI fragment.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nValidates IRI.\nValidates IRI reference.\nValidates IRI path.\nValidates IRI query.\nValidates relative reference.\n<code>ToString::to_string</code>, but without panic on OOM.")