searchState.loadedDescShard("sqlx_sqlite", 0, "<strong>SQLite</strong> database driver.\nSqlite database driver.\nOptions and flags which can be used to configure a SQLite …\nA connection to an open Sqlite database.\nAn alias for <code>Executor&lt;&#39;_, Database = Sqlite&gt;</code>.\nRefer to SQLite documentation for the meaning of the …\nRefer to SQLite documentation for the meaning of the …\nMemory buffer owned and allocated by SQLite. Freed on drop.\nAn alias for <code>Pool</code>, specialized for SQLite.\nAn alias for <code>PoolOptions</code>, specialized for SQLite.\nImplementation of <code>Row</code> for SQLite.\nRefer to SQLite documentation for the meaning of various …\nAn alias for <code>Transaction</code>, specialized for SQLite.\nImplementation of <code>TransactionManager</code> for SQLite.\nType information for a SQLite type.\nSet a soft limit on the number of rows that <code>ANALYZE</code> …\nReturns the underlying sqlite3* connection handle.\nSets the auto_vacuum setting for the database connection.\nSets a timeout value to wait when the database is locked, …\nThe extended result code.\nAdd a custom collation for comparing strings in SQL.\nSet the maximum number of commands to buffer for the …\nApply a collation to the open database.\nSets the access mode to create the database file if the …\nDeserialize a SQLite database from a buffer into the …\nLoad an extension at run-time when the database connection …\nLoad an extension with a specified entry point.\nSets the name of the database file.\nSet the enforcement of foreign key constraints.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the current name of the database file.\nSet to <code>true</code> to signal to SQLite that the database file is …\nSet the <code>SQLITE_OPEN_MEMORY</code> flag.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the journal mode for the database connection.\nLock the SQLite database handle out from the worker thread …\nSets the locking mode for the database connection.\nConstruct <code>Self</code> with default options.\nExecute <code>PRAGMA optimize;</code> on the SQLite connection before …\nSets the page_size setting for the database connection.\nEnsure the background worker thread is alive and accepting …\nSets custom initial pragma for the database connection.\nSets the access mode to open the database for read-only …\nRemoves the progress handler on a database connection. The …\nSet the maximum number of rows to buffer back to the …\nSerialize the given SQLite database schema using …\nSets the threading mode for the database connection.\nSets a commit hook that is invoked whenever a transaction …\nSets a progress handler that is invoked periodically …\nSets a rollback hook that is invoked whenever a …\nSet the <code>SQLITE_OPEN_SHAREDCACHE</code> flag.\nSets the capacity of the connection’s statement cache in …\nSets the synchronous setting for the database connection.\nProvide a callback to generate the name of the background …\nConversions between Rust and <strong>SQLite</strong> types.\nSets the <code>vfs</code> parameter of the database connection.")