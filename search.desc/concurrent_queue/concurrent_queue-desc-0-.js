searchState.loadedDescShard("concurrent_queue", 0, "A concurrent multi-producer multi-consumer queue.\nThe queue is empty and closed.\nThe queue is closed.\nA concurrent queue.\nThe queue is empty but not closed.\nError that occurs when force-pushing into a full queue.\nThe queue is full but not closed.\nError which occurs when popping from an empty queue.\nError which occurs when pushing into a full or closed …\nAn iterator that pops items from a <code>ConcurrentQueue</code>.\nCreates a new bounded queue.\nReturns the capacity of the queue.\nCloses the queue.\nPush an element into the queue, potentially displacing …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUnwraps the item that couldn’t be pushed.\nReturn the inner value that failed to be force-pushed.\nReturns <code>true</code> if the queue is closed.\nReturns <code>true</code> if the queue is empty and closed.\nReturns <code>true</code> if the queue is closed.\nReturns <code>true</code> if the queue is empty.\nReturns <code>true</code> if the queue is empty but not closed.\nReturns <code>true</code> if the queue is full.\nReturns <code>true</code> if the queue is full but not closed.\nReturns the number of items in the queue.\nAttempts to pop an item from the queue.\nAttempts to push an item into the queue.\nGet an iterator over the items in the queue.\nCreates a new unbounded queue.")