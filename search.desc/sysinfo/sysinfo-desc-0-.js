searchState.loadedDescShard("sysinfo", 0, "sysinfo  \nAbort signal from C abort function.\nTimer signal from C alarm function.\nTo refresh all processes.\nAlways update the related information.\nBus error (bad memory access).\nContains memory limits for the current process.\nChild stopped or terminated.\nGetting a component temperature information.\nInteracting with components.\nContinue if stopped.\nContains all the methods of the <code>Cpu</code> struct.\nUsed to determine what you want to refresh specifically on …\nLinux\nStruct containing a disk information.\nEnum containing the different supported kinds of disks.\nUsed to determine what you want to refresh specifically on …\nType containing read and written bytes.\nDisks interface.\nFloating point exception.\nA group id wrapping a platform specific type.\nType containing group information.\nInteracting with groups.\nHDD type.\nHangup detected on controlling terminal or death of …\nI/O now possible.\nIOT trap. A synonym for SIGABRT.\nReturns <code>true</code> if this OS is supported. Please refer to the …\nLinux\nIllegal instruction.\nInterrupt from keyboard.\nIp networks address for network interface.\nKernel thread.\nKill signal.\nA struct representing system load average value.\nFreeBSD\nThis is the minimum interval time used internally by …\nMAC address for network interface.\nUsed to determine which memory you want to refresh …\nGetting volume of received and transmitted data.\nInteracting with network interfaces.\nNever update the related information.\nOnly update the related information if it was not already …\nLinux\nProcess ID.\nBroken pipe: write to pipe with no readers.\nPollable event (Sys V). Synonym for IO\nPower failure (System V).\nStruct containing information of a process.\nUsed to determine what you want to refresh specifically on …\nEnum describing the different status of a process.\nThis enum allows you to specify if you want all processes …\nProfiling time expired.\nQuit from keyboard.\nUsed to determine what you want to refresh specifically on …\nRunning.\nSSD type.\nReturns the list of the supported signals on this system …\nInvalid memory reference.\nAn enum representing signals on UNIX-like systems.\nLinux\nTo refresh only the processes with the listed <code>Pid</code>.\nStop process.\nLinux\nBad argument to routine (SVr4).\nStructs containing system’s information such as …\nStop typed at terminal.\nTerminal input for background process.\nTerminal output for background process.\nTermination signal.\nEnum describing the different kind of threads.\nLinux\nTrace/breakpoint trap.\nA <code>MacAddr</code> with all bytes set to <code>0</code>.\nA user id wrapping a platform specific type.\nLinux\nUnknown type.\nUnknown.\nThis enum allows you to specify when you want the related …\nUrgent condition on socket.\nType containing user information.\nUser-defined signal 1.\nUser-defined signal 2.\nUser thread.\nInteracting with users.\nVirtual alarm clock.\nLinux\nLinux\nWindows resize signal.\nCPU time limit exceeded.\nFile size limit exceeded.\nLinux/FreeBSD/macOS\nThe ip of the network interface\nAllows to convert <code>Pid</code> into <code>u32</code>.\nReturns the amount of available RAM in bytes.\nReturns the available disk size, in bytes.\nReturns the time (in seconds) when the system booted since …\nReturns the CPU’s brand.\nRetrieves the limits for the current cgroup (if any), …\nReturns the command line.\nReturns the value of the “cmd” refresh kind.\nReturns the value of the “cpu” refresh kind.\nReturns the value of the “cpu” refresh kind.\nReturns the CPU architecture (eg. x86, amd64, aarch64, ……\nReturns the total CPU usage (in %). Notice that it might …\nReturns this CPU’s usage.\nReturns the value of the “cpu_usage” refresh kind.\nReturns the list of the CPUs.\nReturns the highest temperature before the component halts …\nReturns the current working directory.\nReturns the value of the “cwd” refresh kind.\nReturns number of bytes read and written to disk.\nReturns the value of the “disk_usage” refresh kind.\nReturns the distribution id as defined by os-release, or …\nReturns the effective group ID of the process.\nReturns the user ID of the effective owner of this process …\nReturns the environment variables of the process.\nReturns the value of the “environ” refresh kind.\nReturns the number of incoming errors since the last …\nReturns the number of outcoming errors since the last …\nCreates a new <code>DiskRefreshKind</code> with every refresh set to …\nCreates a new <code>ProcessRefreshKind</code> with every refresh set to …\nCreates a new <code>CpuRefreshKind</code> with every refresh set to <code>true</code>…\nCreates a new <code>MemoryRefreshKind</code> with every refresh set to …\nCreates a new <code>RefreshKind</code> with every refresh set to <code>true</code>/…\nReturns the path to the process.\nReturns the value of the “exe” refresh kind.\nAverage load within fifteen minutes.\nReturns the file system used on this disk (so for example: …\nAverage load within five minutes.\nReturns the amount of free RAM in bytes.\nFree memory (in bytes) for the current cgroup.\nReturns the amount of free SWAP in bytes.\nFree swap (in bytes) for the current cgroup.\nReturns the CPU’s frequency.\nReturns the value of the “frequency” refresh kind.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAllows to convert a <code>u32</code> into <code>Pid</code>.\nReturns the pid for the current process.\nReturns the <code>User</code> matching the given <code>user_id</code>.\nReturns “global” CPUs usage (aka the addition of all …\nReturns the process group ID of the process.\nReturns the group ID of the user.\nReturns the groups of the user.\nReturns the system hostname based off DNS.\nReturns the ID of the user.\nReturns the ID of the group.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the value of the “io_usage” refresh kind.\nReturns the Ip Networks associated to current interface.\nReturns <code>true</code> if the disk is read-only.\nReturns <code>true</code> if the disk is removable.\nChecks if this <code>MacAddr</code> has all bytes equal to <code>0</code>.\nReturns the system’s kernel version.\nSends <code>Signal::Kill</code> to the process (which is the only …\nSends the given <code>signal</code> to the process. If the signal doesn…\nReturns the kind of disk.\nReturns the value of the “kind” refresh kind.\nReturns the label of the component.\nReturns the components list.\nReturns the disks list.\nReturns the network interfaces map.\nReturns the users list.\nReturns the users list.\nReturns the components list.\nReturns the disks list.\nReturns the users list.\nReturns the groups list.\nReturns the system load average value.\nReturns the system long os version.\nReturns the MAC address associated to current interface.\nReturns the maximum temperature of the component (in …\nReturns the memory usage (in bytes).\nReturns the value of the “memory” refresh kind.\nReturns the value of the “memory” refresh kind.\nReturns the mount point of the disk (<code>/</code> for example).\nReturns the Maximum Transfer Unit (MTU) of the interface.\nReturns the disk name.\nReturns the system name.\nReturns the name of the process.\nReturns this CPU’s name.\nReturns the name of the user.\nReturns the name of the group.\nCreates a new empty <code>Components</code> type.\nCreates a new empty <code>Disks</code> type.\nCreates a new empty <code>Networks</code> type.\nCreates a new <code>System</code> instance with nothing loaded.\nCreates a new empty <code>Users</code> type.\nCreates a new empty <code>Groups</code> type.\nCreates a new <code>System</code> instance with everything loaded.\nCreates a new <code>Components</code> type with the components list …\nCreates a new <code>Disks</code> type with the disk list loaded.\nCreates a new <code>Networks</code> type with the network interfaces …\nCreates a new <code>Users</code> type with the user list loaded.\nCreates a new <code>Groups</code> type with the user list loaded.\nCreates a new <code>Disks</code> type with the disk list loaded and …\nCreates a new <code>System</code> instance and refresh the data …\nCreates a new <code>DiskRefreshKind</code> with every refresh set to …\nCreates a new <code>ProcessRefreshKind</code> with every refresh set to …\nCreates a new <code>CpuRefreshKind</code> with every refresh set to …\nCreates a new <code>MemoryRefreshKind</code> with every refresh set to …\nCreates a new <code>RefreshKind</code> with every refresh set to <code>false</code>/…\nAverage load within one minute.\nReturns the system version (e.g. for macOS this will …\nReturns the number of incoming packets since the last …\nReturns the number of outcoming packets since the last …\nReturns the parent PID.\nReturns the number of physical cores on the CPU or <code>None</code> if …\nReturns the PID of the process.\nThe netmask, prefix of the ipaddress\nReturns the process corresponding to the given <code>pid</code> or <code>None</code> …\nReturns the process list.\nReturns the value of the “processes” refresh kind.\nReturns an iterator of processes with exactly the given …\nReturns an iterator of process containing the given <code>name</code>.\nReturns the value of the “ram” refresh kind.\nNumber of read bytes since the last refresh.\nReturns the number of received bytes since the last …\nRefreshes the components list.\nRefreshes component.\nUpdates the disk’ information with everything loaded.\nRefreshes the listed disks’ information.\nRefreshes the network interfaces.\nThe user list will be emptied then completely recomputed.\nThe group list will be emptied then completely recomputed.\nRefreshes all system and processes information.\nRefreshes all information related to CPUs information.\nRefreshes CPUs frequency information.\nRefreshes the list of CPU.\nRefreshes CPUs specific information.\nRefreshes CPUs usage.\nRefreshes RAM and SWAP usage.\nRefreshes system memory specific information.\nGets all processes and updates their information.\nGets all processes and updates the specified information.\nUpdates the disk’s information corresponding to the …\nRefreshes the disks’ information according to the given …\nRefreshes according to the given <code>RefreshKind</code>. It calls the …\nReturns the path of the root directory.\nReturns the value of the “root” refresh kind.\nResident Set Size (RSS) (in bytes) for the current cgroup.\nReturns for how much time the process has been running (in …\nReturns the session ID for the current process or <code>None</code> if …\nThis function is only used on Linux targets, when the …\nReturns the time where the process was started (in …\nReturns the status of the process.\nReturns the value of the “storage” refresh kind.\nReturns the value of the “swap” refresh kind.\nTasks run by this process. If there are none, returns <code>None</code>.\nReturns the temperature of the component (in celsius …\nIf the process is a thread, it’ll return <code>Some</code> with the …\nReturns the total number of incoming errors.\nReturns the total number of outcoming errors.\nReturns the RAM size in bytes.\nTotal memory (in bytes) for the current cgroup.\nReturns the total number of incoming packets.\nReturns the total number of outcoming packets.\nTotal number of read bytes.\nReturns the total number of received bytes.\nReturns the total disk size, in bytes.\nReturns the SWAP size in bytes.\nReturns the total number of transmitted bytes.\nTotal number of written bytes.\nReturns the number of transmitted bytes since the last …\nReturns system uptime (in seconds).\nReturns number of bytes read and written by the disk\nReturns the amount of used RAM in bytes.\nReturns the amount of used SWAP in bytes.\nReturns the value of the “user” refresh kind. It will …\nReturns the ID of the owner user of this process or <code>None</code> …\nReturns the CPU’s vendor id.\nReturns the virtual memory usage (in bytes).\nWait for process termination.\nSets the value of the “cmd” refresh kind.\nSets the value of the “cpu” refresh kind to <code>true</code>.\nSets the value of the “cpu” refresh kind to <code>Some(...)</code>.\nSets the value of the “cpu_usage” refresh kind to <code>true</code>.\nSets the value of the “cwd” refresh kind.\nSets the value of the “disk_usage” refresh kind to <code>true</code>…\nSets the value of the “environ” refresh kind.\nSets the value of the “exe” refresh kind.\nSets the value of the “frequency” refresh kind to <code>true</code>.\nSets the value of the “io_usage” refresh kind to <code>true</code>.\nSets the value of the “kind” refresh kind to <code>true</code>.\nSets the value of the “memory” refresh kind to <code>true</code>.\nSets the value of the “memory” refresh kind to …\nSets the value of the “processes” refresh kind to …\nSets the value of the “ram” refresh kind to <code>true</code>.\nSets the value of the “root” refresh kind.\nSets the value of the “storage” refresh kind to <code>true</code>.\nSets the value of the “swap” refresh kind to <code>true</code>.\nSets the value of the “user” refresh kind.\nSets the value of the “cmd” refresh kind to …\nSets the value of the “cpu” refresh kind to <code>false</code>.\nSets the value of the “cpu” refresh kind to <code>None</code>.\nSets the value of the “cpu_usage” refresh kind to <code>false</code>…\nSets the value of the “cwd” refresh kind to …\nSets the value of the “disk_usage” refresh kind to …\nSets the value of the “environ” refresh kind to …\nSets the value of the “exe” refresh kind to …\nSets the value of the “frequency” refresh kind to <code>false</code>…\nSets the value of the “io_usage” refresh kind to <code>false</code>.\nSets the value of the “kind” refresh kind to <code>false</code>.\nSets the value of the “memory” refresh kind to <code>false</code>.\nSets the value of the “memory” refresh kind to <code>None</code>.\nSets the value of the “processes” refresh kind to <code>None</code>.\nSets the value of the “ram” refresh kind to <code>false</code>.\nSets the value of the “root” refresh kind to …\nSets the value of the “storage” refresh kind to <code>false</code>.\nSets the value of the “swap” refresh kind to <code>false</code>.\nSets the value of the “user” refresh kind to …\nNumber of written bytes since the last refresh.")