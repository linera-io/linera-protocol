searchState.loadedDescShard("arbitrary", 0, "The <code>Arbitrary</code> trait crate.\nGenerate arbitrary structured values from raw, …\nNo choices were provided to the Unstructured::choose call\nContains the error value\nAn enumeration of buffer creation errors\nThe input bytes were not of the right format\nError indicating that the maximum recursion depth has been …\nThere was not enough underlying data to fulfill some …\nContains the success value\nA <code>Result</code> with the error type fixed as <code>arbitrary::Error</code>.\nA source of unstructured data.\nGenerate an arbitrary value of <code>Self</code> from the given …\nGenerate an arbitrary value of <code>Self</code> from the entirety of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUtilities for working with and combining the results of …\nGet a size hint for how many bytes out of an <code>Unstructured</code> …\nGet a size hint for how many bytes out of an <code>Unstructured</code> …\nWrappers around raw, unstructured bytes.\nTake the sum of the <code>lhs</code> and <code>rhs</code> size hints.\nTake the sum of all of the given size hints.\nTake the minimum of the lower bounds and maximum of the …\nTake the maximum of the <code>lhs</code> and <code>rhs</code> size hints.\nProtects against potential infinite recursion when …\nProtects against potential infinite recursion when …\nUtility iterator produced by <code>Unstructured::arbitrary_iter</code>\nUtility iterator produced by …\nA trait that is implemented for all of the primitive …\nA source of unstructured data.\nGenerate an arbitrary instance of <code>A</code>.\nProvide an iterator over elements for constructing a …\nGet the number of elements to insert when building up a …\nCall the given function an arbitrary number of times.\nProvide an iterator over elements for constructing a …\nProvide <code>size</code> bytes from the underlying raw data.\nChoose one of the given choices.\nChoose a value in <code>0..len</code>.\nChoose one of the given iterator choices.\nFill a <code>buffer</code> with bytes from the underlying raw data.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGenerate an integer within the given range.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs the underlying unstructured data exhausted?\nGet the number of remaining bytes of underlying data that …\nCreate a new <code>Unstructured</code> from the given raw data.\nPeek at <code>size</code> number of bytes of the underlying raw input.\nGenerate a boolean according to the given ratio.\nConsume all of the rest of the remaining underlying bytes.")