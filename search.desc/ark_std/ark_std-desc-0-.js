searchState.loadedDescShard("ark_std", 0, "Defines a multiplicative identity element for <code>Self</code>.\nDefines an additive identity element for <code>Self</code>.\nReturns an iterator over <code>chunk_size</code> elements of the slice …\nReturns an iterator over <code>chunk_size</code> mutable elements of …\nCreates parallel iterator if <code>parallel</code> feature is enabled. …\nCreates parallel iterator over refs if <code>parallel</code> feature is …\nCreates parallel iterator over mut refs if <code>parallel</code> …\nReturns <code>true</code> if <code>self</code> is equal to the multiplicative …\nReturns <code>true</code> if <code>self</code> is equal to the additive identity.\nA base library for interfacing with streams of vectors and …\nReturns the ceiling of the base-2 logarithm of <code>x</code>.\nReturns the multiplicative identity element of <code>Self</code>, <code>1</code>.\nThis module contains macros for logging to stdout a trace …\nSets <code>self</code> to the multiplicative identity element of <code>Self</code>, <code>1</code>…\nSets <code>self</code> to the additive identity element of <code>Self</code>, <code>0</code>.\nShould be used only for tests, not for any real world …\nReturns the additive identity element of <code>Self</code>, <code>0</code>.\nThe type of the element being streamed.\nThe type of the iterator being generated.\nThe trait <code>Iterable</code> represents a streamable object that can …\nStream that goes over an <code>[ExactSizeIterator]</code> in reverse …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if the stream is empty, else <code>false</code>.\nReturn the iterator associated to the current instance.\nReturn a hint on the length of the stream.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")