searchState.loadedDescShard("region", 0, "Cross-platform virtual memory API.\nA handle to an owned region of memory.\nExecute access; this may not be allowed depending on DEP.\nContains the error value\nA collection of possible errors.\nA supplied parameter is invalid.\nA RAII implementation of a scoped lock.\nA macOS kernel call failed\nNo access allowed at all.\nContains the success value\nA procfs region could not be parsed.\nA RAII implementation of a scoped protection guard.\nA bitflag of zero or more protection attributes.\nAn iterator over the <code>Region</code>s that encompass an address …\nRead access; writing and/or executing data will panic.\nRead and execute shorthand.\nRead and write shorthand.\nRead, write and execute shorthand.\nA descriptor for a mapped memory region.\nThe result type used by this library.\nA system call failed.\nThe queried memory is unmapped.\nWrite access; this flag alone may not be supported on all …\nWrite and execute shorthand.\nReturns the set containing all flags.\nAllocates one or more pages of memory, with a defined …\nAllocates one or more pages of memory, at a specific …\nReturns a mutable pointer to the allocation’s base …\nReturns a mutable pointer to the region’s base address.\nReturns two mutable raw pointers spanning the allocation’…\nReturns two mutable raw pointers spanning the region’s …\nReturns a pointer to the allocation’s base address.\nReturns a pointer to the region’s base address.\nReturns two raw pointers spanning the allocation’s …\nReturns two raw pointers spanning the region’s address …\nReturns a range spanning the allocation’s address space.\nReturns a range spanning the region’s address space.\nReturns the intersection between the two sets of flags.\nDisables all flags disabled in the set.\nReturns the union of the two sets of flags.\nAdds the set of flags.\nReturns the raw value of the flags currently stored.\nReturns the left flags, but with all the right flags …\nToggles the set of flags.\nReturns the complement of this set of flags.\nReturns <code>true</code> if all of the flags in <code>other</code> are contained …\nReturns the difference between the flags in <code>self</code> and <code>other</code>.\nReturns an empty set of flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from underlying bit representation, unless that …\nConvert from underlying bit representation, dropping any …\nConvert from underlying bit representation, preserving all …\nInserts the specified flags in-place.\nReturns the intersection between the flags in <code>self</code> and …\nReturns <code>true</code> if there are flags common to both <code>self</code> and …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if all flags are currently set.\nReturns whether the region is committed or not.\nReturns whether region is empty or not.\nReturns <code>true</code> if no flags are currently stored.\nReturns whether the region is executable or not.\nReturns whether the region is guarded or not.\nReturns whether the region is readable or not.\nReturns whether the region is shared between processes or …\nReturns whether the region is writable or not.\nReturns the size of the allocation in bytes.\nReturns the size of the region in bytes.\nLocks one or more memory regions to RAM.\nAdvances the iterator and returns the next region.\nReturns the complement of this set of flags.\nPage related functions.\nChanges the memory protection of one or more pages.\nTemporarily changes the memory protection of one or more …\nReturns the protection attributes of the region.\nQueries the OS with an address, returning the region it …\nQueries the OS for mapped regions that overlap with the …\nRemoves the specified flags in-place.\nInserts or removes the specified flags depending on the …\nReturns the set difference of the two sets of flags.\nDisables all flags enabled in the set.\nReturns the symmetric difference between the flags in <code>self</code> …\nToggles the specified flags in-place.\nReturns the union of between the flags in <code>self</code> and <code>other</code>.\nUnlocks one or more memory regions from RAM.\nRounds an address up to its closest page boundary.\nRounds an address down to its closest page boundary.\nReturns the operating system’s page size.")