searchState.loadedDescShard("alloy_network_primitives", 0, "alloy-network-primitives\nBlock JSON-RPC response.\nAn iterator over the transaction hashes of a block.\nBlock Transactions depending on the boolean attribute of …\nDetermines how the <code>transactions</code> field of block should be …\nFull transactions\nInclude full transaction objects: BlockTransactions::Full\nOnly hashes\nOnly include hashes: BlockTransactions::Hashes\nHeader type\nHeader JSON-RPC response.\nReceipt JSON-RPC response.\nTransaction type\nTransaction builder type supporting EIP-4844 transaction …\nTransaction builder type supporting EIP-7702 transaction …\nTransaction JSON-RPC response. Aggregates transaction data …\nSpecial case for uncle response.\nFallibly cast to a slice of hashes.\nFallibly cast to a slice of transactions.\nGet the EIP-7702 authorization list for the transaction.\nBlob gas price paid by the eip-4844 transaction.\nBlob gas used by the eip-4844 transaction.\nGets the EIP-4844 blob sidecar of the transaction.\nHash of the block this transaction was included within.\nBlock hash\nNumber of the block this transaction was included within.\nBlock number\nCalculate the transaction root for the full transactions.\nAddress of the created contract, or <code>None</code> if the …\nConverts <code>self</code> into <code>Hashes</code>.\nConverts <code>self</code> into <code>Hashes</code> if the given <code>condition</code> is true.\nReturns the cumulative gas used at this receipt.\nEffective gas price.\nReturns the first transaction if the transactions are full.\nAddress of the sender.\nSender of the transaction\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGas Price, this is the RPC format for <code>max_fee_per_gas</code>, …\nGas Price, this is the RPC format for <code>max_fee_per_gas</code>, …\nGas used by this transaction alone.\nBlock hash\nReturns an iterator over references to the transaction …\nBlock header\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts <code>self</code> into <code>Hashes</code>.\nConverts <code>self</code> into <code>Hashes</code> if the given <code>condition</code> is true.\nReturns an iterator over the transactions (if any). This …\nConsumes the type and returns the transactions as a vector.\nWhether the block has no transactions.\nReturns true if the enum variant is used for full …\nReturns true if this is <code>BlockTransactionsKind::Full</code>\nCheck if the enum variant is used for hashes.\nReturns true if this is <code>BlockTransactionsKind::Hashes</code>\nReturns true if the enum variant is used for an uncle …\nReturns an iterator over the transaction hashes.\nReturns the number of transactions.\nConverts the transaction type by applying a function to …\nGet the max fee per blob gas for the transaction.\nMax BaseFeePerGas the user is willing to pay. For …\nMax BaseFeePerGas the user is willing to pay. For …\nCreates a new <code>BlockTransactions::Hashes</code> variant from the …\nReturns the <code>other</code> field from <code>WithOtherFields</code> type.\nReturns the <code>other</code> field from <code>WithOtherFields</code> type.\nSets the EIP-7702 authorization list.\nSets the EIP-4844 blob sidecar of the transaction.\nSet the max fee per blob gas  for the transaction.\nThe post-transaction state root (pre Byzantium)\nStatus of the transaction.\nAddress of the receiver.\nTransaction Hash.\nIndex within the block.\nTransaction Index\nTransaction type format for RPC. This field is included …\nTransaction type format for RPC. This field is included …\nBlock transactions\nMutable reference to block transactions\nAttempts to unwrap the <code>Self::Full</code> variant.\nConverts the transaction type by applying a fallible …\nHash of the transaction\nReturns an iterator over the transactions (if any). This …\nReturns an instance of BlockTransactions with the Uncle …\nBuilder-pattern method for setting the authorization list.\nBuilder-pattern method for setting the authorization list.\nBuilder-pattern method for setting the EIP-4844 blob …\nBuilder-pattern method for setting the EIP-4844 blob …\nBuilder-pattern method for setting max fee per blob gas .\nBuilder-pattern method for setting max fee per blob gas .")