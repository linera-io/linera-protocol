searchState.loadedDescShard("linera_base", 0, "This module provides a common set of types and library …\nAn error trying to parse the hex-digits of a BCS-encoded …\nThis module defines the notion of Application Binary …\nDefines a GraphQL scalar type using the hex-representation …\nCommand functionality used for spawning child processes.\nDefine the cryptographic primitives used by the Linera …\nCore data-types used in the Linera protocol.\nDefines a GraphQL scalar with a description string.\nObject-safe conversion traits.\nA macro for asserting that a condition is true, returning …\nReturns the argument unchanged.\nA wrapper for hashable types to memoize the hash.\nFormats a byte sequence as a hexadecimal string, and …\nApplies <code>hex_debug</code> to a slice of byte vectors.\nTypes used when performing HTTP requests.\nCore identifiers used by the Linera protocol.\nCalls <code>U::from(self)</code>.\nListens for shutdown signals, and notifies the …\nStructures defining the set of owners and super owners, as …\nFunctionality for obtaining some free port.\nThis module defines utility functions for interacting with …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nAbstractions over tasks that can be used natively or on …\nAbstractions over time that can be used natively or on the …\nThis module provides unified handling for tracing …\nOpenTelemetry integration for tracing with OTLP export and …\n<code>ToString::to_string</code>, but without panic on OOM.\nThe virtual machines being supported.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA trait that includes all the types exported by a Linera …\nThe contract types to import.\nThe service types to import.\nA trait that includes all the types exported by a Linera …\nThe type of operation executed by the application.\nThe type of a query receivable by the application’s …\nThe response type of the application’s service.\nThe response type of an application call.\nA trait that includes all the types exported by a Linera …\nMarker trait to help importing contract types.\nMarker trait to help importing service types.\nHow the <code>Operation</code> is deserialized\nHow the <code>Response</code> is deserialized\nHow the <code>Operation</code> is serialized\nHow the <code>Response</code> is serialized\nExtension trait for <code>tokio::process::Command</code>.\nRetrieves the path from the binary parent.\nObtains the current binary parent\nDescription used for error reporting.\nObtains the version from the message.\nAttempts to resolve the path and test the version of the …\nSame as <code>resolve_binary</code> but gives the option to specify a …\nSpawns and waits for process to finish executing. Will not …\nSimilar to <code>tokio::process::Command::output</code> but does not …\nSimilar to <code>tokio::process::Command::spawn</code> but sets …\nThe public key of a chain owner. The corresponding private …\nThe private key of a chain owner.\nThe signature of a chain owner.\nActivate the blanket implementation of <code>Hashable</code> based on …\nActivate the blanket implementation of <code>Signable</code> based on …\nError type for cryptographic errors.\nA Keccak256 value.\nA vector of cryptographic hashes. This is used to …\nWrapper around <code>rand::CryptoRng</code> and <code>rand::RngCore</code>.\nEd25519\nEd25519 public key.\nEd25519 secret key.\nEd25519 signature.\nAn Ed25519 signature public key.\nAn Ed25519 secret key.\nAn Ed25519 signature.\nA secp256k1 public key.\nEVM secp256k1\nEVM secp256k1 public key.\nEVM secp256k1 secret key.\nEVM secp256k1 signature.\nA secp256k1 secret key.\nA secp256k1 signature.\nSomething that we know how to hash and sign.\nSomething that we know how to hash.\nsecp256k1\nsecp256k1 public key.\nsecp256k1 secret key.\nsecp256k1 signature.\nA secp256k1 public key.\nA secp256k1 secret key.\nA secp256k1 signature.\nSignature scheme used for the public key.\nA BCS-signable struct for testing.\nThe key pair of a validator.\nThe public key of a validator.\nThe private key of a validator.\nThe signature of a validator.\nReturns an EVM address for the public key.\nReturns an EVM address for the public key.\nReturns bytes of the public key.\nReturns bytes of the signature.\nReads the bytes of the hash value.\nReturns the bytes of the public key in compressed …\nReturns the byte representation of the signature.\nReturns the bytes of the public key in compressed …\nReturns the byte representation of the signature.\nReturns the byte representation of the public key.\nChecks a signature.\nChecks a signature.\nChecks a signature.\nChecks a signature against a recovered public key.\nCopies the key pair, <strong>including the secret key</strong>.\nCopies the key pair, <strong>including the secret key</strong>.\nCopies the key pair, <strong>including the secret key</strong>.\nCopies the secret key.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDecodes the bytes into the public key. Expects the bytes …\nDecodes the bytes into the public key. Expects the bytes …\nParses bytes to a public key.\nParses bytes to a signature.\nCreates a signature from the bytes. Expects the signature …\nCreates a signature from the bytes. Expects the signature …\nParses the byte representation of the public key.\nParses the byte representation of the signature.\nGenerates a new key pair using the operating system’s …\nGenerates a new key pair.\nGenerates a new key pair.\nGenerates a new key pair using the operating system’s …\nGenerates a new key pair from the given RNG. Use with care.\nGenerates a new key pair from the given RNG. Use with care.\nGenerates a new key pair from the given RNG. Use with care.\nGenerates a new Evm Secp256k1 key pair from the given RNG. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nForce the last 12 bytes of the hash to be zeroes. This is …\nComputes a signature.\nComputes a hash.\nComputes a secp256k1 signature for <code>prehash</code> using the given …\nComputes a secp256k1 signature for <code>value</code> using the given …\nCreates a new <code>TestString</code> with the given string.\nReturns the <code>AccountOwner</code> of the account that signed the …\nObtains the public key of a key pair.\nReturns a public key for the given secret key.\nReturns a public key for the given secret key.\nReturns the public key corresponding to this secret key.\nPublic key.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nRecovers the public key from the signature and the value.\nReturns the signature scheme of the public key.\nSecret key.\nCreates a signature for the <code>value</code> using provided <code>secret</code>.\nComputes a signature from a prehash.\nComputes a signature from a prehash.\nComputes a signature from a prehash.\nCreates a signature for the <code>value</code>.\nAn interface for cryptographic signers that can be used by …\nReturns the hash of <code>TestString(s)</code>, for testing purposes.\nA fake public key used for testing.\nA fake public key used for testing.\nA fake public key used for testing.\nA fake public key used for testing.\nReturns byte representation of the signatures.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nThe name of the type.\nReturns the bytes that represent the <code>integers</code> in …\nVerifies the signature for the <code>value</code> using the provided …\nVerifies a batch of signatures.\nVerifies a batch of signatures.\nVerifies a batch of signatures.\nSend the content of <code>Self</code> to the given hasher.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nEVM address of the signer.\nPublic key of the signer.\nPublic key of the signer.\nSignature of the value.\nSignature of the value.\nSignature of the value.\nErrors that can be returned from signers.\nThe type of errors arising from operations on this <code>Signer</code>.\nIn-memory signer.\nA trait for signing keys.\nReturns whether the given <code>owner</code> is a known signer.\nReturns whether the given <code>owner</code> is a known signer.\nReturns the argument unchanged.\nGenerates a new key pair from Signer’s RNG. Use with …\nCalls <code>U::from(self)</code>.\nReturns the public key corresponding to the given <code>owner</code>.\nCreates a new <code>InMemorySigner</code> seeded with <code>prng_seed</code>. If …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nCreates a signature for the given <code>value</code> using the provided …\nCreates a signature for the given <code>value</code> using the provided …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA non-negative amount of tokens.\nDescription of a user application.\nPermissions for applications on a chain.\nAn error type for arithmetic errors.\nAn assertion oracle that passed.\nA blob of binary data, with its hash.\nA successful read or write of a blob.\nA blob of binary data.\nA block height to identify blocks in a chain.\nAllows converting <code>BlockHeight</code> ranges to inclusive tuples …\nA WebAssembly module’s bytecode.\nInitial chain configuration and chain origin.\nWhat created a chain.\nThe chain was created by a call from another chain.\nA compressed module bytecode (WebAssembly or EVM).\nThe base-10 exponent representing how much a token can be …\nA type for errors happening during decompression.\nA number identifying the configuration of the chain (aka …\nAn event recorded in a block.\nAn event was read.\nAn event exists.\nThe initial fast round.\nThe response from an HTTP request.\nThe initial configuration for a new chain.\nCompressed bytecode is invalid, and could not be …\nThe maximum value.\nThe maximum value.\nThe maximum value.\nThe N-th multi-leader round.\nA description of the current Linera network to be stored …\nOne token.\nA record of a single oracle response.\nResources that an application may spend during the …\nThe chain was created by the genesis configuration.\nAn identifier for successive attempts to decide a value in …\nThe block’s validation round.\nA request to send a message.\nThe response from a service query.\nThe N-th single-leader round.\nAn update for a stream with new events.\nA duration in microseconds.\nA timestamp, in microseconds since the Unix epoch.\nThe N-th round where the validators rotate as leaders.\nThe zero value.\nThe zero value.\nThe zero value.\nThe zero epoch.\nThe chain ID of the admin chain.\nThe index of the application among those created in the …\nThe initial application permissions.\nReturns this <code>TimeDelta</code> as a <code>Duration</code>.\nReturns this <code>TimeDelta</code> as a number of microseconds.\nWhether the message is authenticated.\nThe initial chain balance.\nA number of blob bytes to publish.\nA number of blob bytes to read.\nReturns the type of data represented by this blob’s …\nA number of blobs to publish.\nA number of blobs to read.\nHeight of the block that created this application.\nGets a reference to the blob’s bytes.\nGets a reference to the inner blob’s bytes.\nBytes of the bytecode.\nA number of bytes read from runtime.\nA number of bytes to read.\nA number of bytes to write.\nThese applications are allowed to perform calls to …\nReturns whether the given application can call services.\nReturns whether the given application is allowed to change …\nReturns whether the given application is allowed to close …\nReturns whether operations with the given application ID …\nReturns whether the given application can make HTTP …\nThe publishing chain.\nThese applications are allowed to change the application …\nThese applications are allowed to close the current chain.\nCompresses the <code>Bytecode</code> into a <code>CompressedBytecode</code>.\nCompressed bytes of the bytecode.\nReturns a reference to the <code>InitialChainConfig</code> of the chain.\nReturns a reference to the inner <code>BlobContent</code>, without the …\nGets the <code>BlobId</code> of the contract\nThe chain ID that created the application.\nDecompresses a <code>CompressedBytecode</code> into a <code>Bytecode</code>.\nReturns <code>true</code> if the decompressed size does not exceed the …\nReturns the <code>TimeDelta</code> between <code>other</code> and <code>self</code>, or zero if …\nThe destination of the message.\nReturns the <code>Duration</code> between <code>other</code> and <code>self</code>, or zero if …\nThe epoch in which the chain is created.\nAn amount of EVM execution fuel.\nIf this is <code>None</code>, all system operations and application …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns an <code>Amount</code> corresponding to that many attotokens.\nReturns the given duration, rounded to the nearest …\nReturns an <code>Amount</code> corresponding to that many microtokens, …\nReturns the given number of microseconds as a <code>TimeDelta</code>.\nReturns an <code>Amount</code> corresponding to that many millitokens, …\nReturns the given number of milliseconds as a <code>TimeDelta</code>.\nReturns an <code>Amount</code> corresponding to that many nanotokens, …\nReturns the given number of seconds as a <code>TimeDelta</code>.\nReturns an <code>Amount</code> corresponding to that many tokens, or …\nHash of the blob containing the genesis committee.\nHash of the network’s genesis config.\nGenesis timestamp.\nThe grant resources forwarded with the message.\nA number of HTTP requests to be performed.\nReturns the <code>ChainId</code> based on this <code>ChainDescription</code>.\nA content-addressed blob ID i.e. the hash of the <code>Blob</code>.\nReturns the ID of this event record, given the publisher …\nThe event index, i.e. the number of events in the stream …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets the <code>Arc&lt;Box&lt;[u8]&gt;&gt;</code> directly without cloning.\nMoves ownership of the blob of binary data\nSerializes the internal <code>Message</code> type into raw bytes.\nConverts a <code>BlobContent</code> into <code>Vec&lt;u8&gt;</code> without cloning if …\nWhether the chain was created by another chain.\nWhether the chain was created by another chain.\nReturns whether the blob is of <code>BlobType::Committee</code> variant.\nWhether the round is the fast round.\nWhether the round is a multi-leader round.\nWhether the message is tracked.\nReturns whether this amount is 0.\nLoads data blob from a file.\nLoad bytecode from a Wasm module file.\nHelper function to obtain the 64 least significant bits of …\nThese applications are allowed to perform HTTP requests.\nAt least one operation or incoming message from each of …\nThe highest number of an active epoch at the time of …\nThe message itself.\nThe size of the messages to be sent.\nA number of messages to be sent.\nReturns the number of microseconds since the Unix epoch.\nThe lowest number of an active epoch at the time of …\nThe unique ID of the bytecode to use for the application.\nReturns the round number if this is a multi-leader round, …\nThe name of the network.\nCreates a new <code>ChainDescription</code>.\nCreates a new <code>Bytecode</code> instance using the provided <code>bytes</code>.\nCreates a new <code>BlobContent</code> from the provided bytes and …\nComputes the hash and returns the hashed blob for the …\nCreates a new application description <code>BlobContent</code> from a …\nCreates a new application description <code>Blob</code> from the …\nCreates a new chain description <code>BlobContent</code> from a …\nCreates a new chain description <code>Blob</code> from a …\nCreates a new committee <code>BlobContent</code> from the provided …\nCreates a new committee <code>Blob</code> from the provided bytes.\nCreates a new contract bytecode <code>BlobContent</code> from the …\nCreates a new contract bytecode <code>Blob</code> from the provided …\nCreates a new data <code>BlobContent</code> from the provided bytes.\nCreates a new data <code>Blob</code> from the provided bytes.\nCreates a new contract bytecode <code>BlobContent</code> from the …\nCreates a new contract bytecode <code>BlobContent</code> from the …\nReturns the indices of all new events in the stream.\nCreates new <code>ApplicationPermissions</code> where the given …\nCreates a new service bytecode <code>BlobContent</code> from the …\nCreates a new service bytecode <code>Blob</code> from the provided …\nCreates new <code>ApplicationPermissions</code> where the given …\nCreates a blob from ud and content without checks\nCreates a blob without checking that the hash actually …\nThe index of the next event, i.e. the lowest for which no …\nReturns the current time according to the system clock.\nThe index of a round amongst the rounds of the same …\nReturns the <code>ChainOrigin</code> describing who created this chain.\nThe ownership configuration of the new chain.\nThe parameters of the application.\nThe lowest index of a new event. See …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nA number of read operations to be executed.\nRequired dependencies.\nReturns the root chain number, if this is a root chain.\nSaturating addition.\nSaturating addition.\nSaturating addition.\nReturns the timestamp that is <code>duration</code> later than <code>self</code>.\nSaturating in-place addition.\nSaturating in-place addition.\nSaturating in-place addition.\nDivides this by the other amount. If the other is 0, it …\nSaturating multiplication.\nSaturating multiplication.\nSaturating multiplication.\nSaturating subtraction.\nSaturating subtraction.\nSaturating subtraction.\nReturns the timestamp that is <code>duration</code> earlier than <code>self</code>.\nReturns a timestamp <code>micros</code> microseconds earlier than <code>self</code>, …\nA number of service-as-oracle requests to be performed.\nGets the <code>BlobId</code> of the service\nAn increase in the amount of storage space.\nThe ID of the stream this event belongs to.\nThe stream ID.\nReturns the timestamp of when the chain was created.\nGets the serialized bytes for this <code>ApplicationDescription</code>.\nReturns the range as a tuple of inclusive bounds. If the …\nChecked addition.\nChecked addition.\nChecked addition.\nChecked in-place addition.\nChecked in-place addition.\nChecked in-place addition.\nChecked in-place increment.\nChecked in-place increment.\nChecked in-place increment.\nTries to add one to this epoch’s number. Returns an …\nChecked increment.\nChecked increment.\nChecked increment.\nTries to return an epoch with a number increased by one. …\nChecked multiplication.\nChecked multiplication.\nChecked multiplication.\nChecked in-place multiplication.\nChecked in-place multiplication.\nChecked in-place multiplication.\nChecked subtraction.\nChecked subtraction.\nChecked subtraction.\nChecked in-place subtraction.\nChecked in-place subtraction.\nChecked in-place subtraction.\nChecked decrement.\nChecked decrement.\nChecked decrement.\nTries to return an epoch with a number decreased by one. …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nThe category of the round as a string.\nHelper function to obtain the 64 most significant bits of …\nThe payload data.\nAn amount of Wasm execution fuel.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA number of write operations to be executed.\nThe block height in the parent at which this chain was …\nThe index of this chain among chains created at the same …\nThe parent of this chain.\nAn object-safe version of <code>std::convert::Into</code>.\nConverts a boxed object into the target type.\nWrapper type around hashed instance of <code>T</code> type.\nReturns the argument unchanged.\nReturns the hash.\nReturns a reference to the value, without the hash.\nCalls <code>U::from(self)</code>.\nConsumes the hashed value and returns the value without …\nCreates an instance of <code>Hashed</code> with the given <code>value</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nCreates an instance of <code>Hashed</code> with the given <code>hash</code> value.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA CONNECT request.\nA DELETE request.\nA GET request.\nA HEAD request.\nA header for an HTTP request or response.\nThe method used in an HTTP request.\nA OPTIONS request.\nA PATCH request.\nA POST request.\nA PUT request.\nAn HTTP request.\nA response for an HTTP request.\nA TRACE request.\nThe body of the request.\nThe body of the response.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an HTTP GET <code>Request</code> for a <code>url</code>.\nThe headers that should be included in the request.\nThe headers included in the response.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe <code>Method</code> used for the HTTP request.\nThe header name.\nCreates an HTTP <code>Response</code> with a user defined <code>status_code</code>.\nCreates a new <code>Header</code> with the provided <code>name</code> and <code>value</code>.\nCreates an HTTP <code>Response</code> with an OK status code and the …\nCreates an HTTP POST <code>Request</code> for a <code>url</code> with a <code>payload</code> that…\nCreates an HTTP POST <code>Request</code> for a <code>url</code> with a body that’…\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nThe status code of the HTTP response.\nCreates an HTTP <code>Response</code> with an Unauthorized status code.\nThe URL this request is intended to.\nThe value of the header.\nAdds a header to this <code>Request</code>.\nAdds a header to this <code>Response</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nAn account.\nAn account owner.\n20-byte account EVM-compatible address.\n32-byte account address.\nA blob containing an application description.\nA unique identifier for a user application from a blob.\nA content-addressed blob ID i.e. the hash of the …\nThe type of the blob. Should be a 1:1 mapping of the types …\nReturns the default chain address.\nA blob containing a chain description.\nThe unique identifier (UID) of a chain. This is currently …\nA blob containing a committee of validators.\nA blob containing compressed contract Wasm bytecode.\nA generic data blob.\nHash of a data blob.\nAn event identifier.\nA blob containing compressed EVM bytecode.\nA unique identifier for an application.\nThe result of an <code>events_from_index</code>.\nA unique identifier for a module.\nShort addresses reserved for the protocol.\nA blob containing compressed service Wasm bytecode.\nAn event stream ID.\nThe name of an event stream.\nThe system application.\nA user application.\nThe hash of the <code>ApplicationDescription</code> this refers to.\nThe application that can add events to this stream.\nThe type of the blob.\nAn address used exclusively for tests\nGets all bytecode <code>BlobId</code>s of the module\nConverts the <code>ApplicationId</code> into an Ethereum-compatible …\nCreates an <code>Account</code> representing the balance shared by a …\nThe chain of the account.\nThe ID of the chain that generated this event.\nThe hash of the blob containing the contract bytecode.\nGets the <code>BlobId</code> of the contract\nConverts the application ID to the ID of the blob …\nThe event being returned.\nConverts the <code>ApplicationId</code> into an Ethereum Address.\nForgets the ABI of an application ID (if any).\nForgets the ABI of a module ID (if any).\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe hash of the blob.\nThe index of the found event.\nThe event index, i.e. the number of events in the stream …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTurns the stream name into bytes.\nTests if the account is the chain address.\nReturns whether the blob is of <code>BlobType::Committee</code> variant.\nReturns whether the <code>ApplicationId</code> is the one of an EVM …\nCreates a new <code>Account</code> with the given chain ID and owner.\nCreates a new <code>BlobId</code> from a <code>CryptoHash</code>. This must be a …\nCreates an application ID from the application description …\nCreates a module ID from contract/service hashes and the …\nThe owner of the account.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nThe hash of the blob containing the service bytecode.\nGets the <code>BlobId</code> of the service\nThe size of the <code>AccountOwner</code>.\nThe ID of the stream this event belongs to.\nThe name of this stream: an application can have multiple …\nCreates a system stream ID with the given name.\nGets the EVM address if possible\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns the <code>ApplicationId</code>, or <code>None</code> if it is <code>System</code>.\nThe virtual machine being used.\nSpecializes an application ID for a given ABI.\nSpecializes a module ID for a given ABI.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nErrors that can happen when verifying the authentication …\nRepresents the owner(s) of a chain.\nErrors that can happen when attempting to change the …\nErrors that can happen when attempting to close a chain.\nThe application wasn’t allowed to close the chain.\nThe application wasn’t allowed to change the application …\nOperations on this account are not permitted in the …\nThe timeout configuration: how long fast, multi-leader and …\nReturns an iterator over all super owners, followed by all …\nThe duration of the first single-leader and all …\nThe age of an incoming tracked or protected message after …\nThe duration of the fast round.\nReturns the first consensus round for this configuration.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns whether there are any owners or super owners or it …\nReturns whether the given owner a super owner and there …\nThe number of rounds in which all owners are allowed to …\nCreates a <code>ChainOwnership</code> with the specified regular owners.\nReturns the round following the specified one, if any.\nWhether the multi-leader rounds are unrestricted, i.e. not …\nThe regular owners, with their weights that determine how …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReturns the duration of the given round.\nCreates a <code>ChainOwnership</code> with a single regular owner.\nCreates a <code>ChainOwnership</code> with a single super owner.\nSuper owners can propose fast blocks in the first round, …\nThe timeout configuration: how long fast, multi-leader and …\nThe duration by which the timeout increases after each …\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nReturns <code>true</code> if this is an owner or super owner.\nAdds a regular owner.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nProvides a local endpoint that is currently available\nProvides a port that is currently not used\nA guard for an active latency measurement.\nAn extension trait for metrics that can be used to measure …\nConstruct the bucket interval exponentially starting from …\nConstruct the latencies exponentially starting from 0.001 …\nFinishes the measurement, updates the <code>Metric</code> and returns …\nUpdates the metric with measured latency in <code>milliseconds</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstruct the bucket interval linearly starting from a …\nStarts measuring the latency, finishing when the returned …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nWrapper around Prometheus <code>register_histogram!</code> macro which …\nWrapper around Prometheus <code>register_histogram_vec!</code> macro …\nWrapper around Prometheus <code>register_int_counter!</code> macro …\nWrapper around Prometheus <code>register_int_counter_vec!</code> macro …\nWrapper around Prometheus <code>register_int_gauge_vec!</code> macro …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA new task running in a different thread.\nThe type of a future awaiting another thread.\nThe stream of inputs available to the spawned task.\nA type that satisfies the send/receive bounds, but can …\nThe type of a future awaiting another task.\nTypes that can be <em>explicitly</em> sent to a new thread. This …\nThe type of errors that can result from sending a message …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWaits for the task to complete and returns its output.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nSends a message to the task.\nSpawns a new task, potentially on the current thread.\nSpawns a blocking task on a new thread with a stream of …\n<code>ToString::to_string</code>, but without panic on OOM.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nA <code>Duration</code> type to represent a span of time, typically …\nA measurement of a monotonically nondecreasing clock. …\nThe maximum duration.\nThe duration of one microsecond.\nThe duration of one millisecond.\nThe duration of one nanosecond.\nThe duration of one second.\nA measurement of the system clock, useful for talking to …\nAn error returned from the <code>duration_since</code> and <code>elapsed</code> …\nAn error which can be returned when converting a …\nAn anchor in time which can be used to create new …\nAn anchor in time which can be used to create new …\nA duration of zero time.\nComputes the absolute difference between <code>self</code> and <code>other</code>.\nPanics\nPanics\nReturns the total number of whole microseconds contained …\nReturns the total number of whole milliseconds contained …\nReturns the number of milliseconds contained by this …\nReturns the number of milliseconds contained by this …\nReturns the total number of nanoseconds contained by this …\nReturns the number of <em>whole</em> seconds contained by this …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns the number of seconds contained by this <code>Duration</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nChecked <code>Duration</code> addition. Computes <code>self + other</code>, …\nChecked <code>Duration</code> division. Computes <code>self / other</code>, …\nReturns the amount of time elapsed from another instant to …\nChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f32</code>.\nDivides <code>Duration</code> by <code>Duration</code> and returns <code>f64</code>.\nDivides <code>Duration</code> by <code>f32</code>.\nDivides <code>Duration</code> by <code>f64</code>.\nReturns the positive duration which represents how far …\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed from an earlier point …\nReturns the amount of time elapsed since this instant.\nReturns the difference from this system time to the …\nEncode this value as ASN.1 DER using the provided <code>Writer</code>.\nCompute the length of this value in bytes when encoded as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a new <code>Duration</code> from the specified number of days.\nCreates a new <code>Duration</code> from the specified number of hours.\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of whole …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of …\nCreates a new <code>Duration</code> from the specified number of weeks.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this <code>Duration</code> spans no time.\nMultiplies <code>Duration</code> by <code>f32</code>.\nMultiplies <code>Duration</code> by <code>f64</code>.\nCreates a new <code>Duration</code> from the specified number of whole …\nReturns an instant corresponding to “now”.\nReturns the system time corresponding to “now”.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nSaturating <code>Duration</code> addition. Computes <code>self + other</code>, …\nReturns the amount of time elapsed from another instant to …\nSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, …\nSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, …\nReturns the amount of time elapsed from another instant to …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in whole …\nReturns the fractional part of this <code>Duration</code>, in …\nUtilities for tracking time.\nThe checked version of <code>from_secs_f32</code>.\nThe checked version of <code>from_secs_f64</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nTicks as fast as possible until caught up.\nTick at multiples of <code>period</code> from when <code>tick</code> was called, …\nA <code>Duration</code> type to represent a span of time, typically …\nA measurement of a monotonically nondecreasing clock. …\nInterval returned by <code>interval</code> and <code>interval_at</code>.\nDefines the behavior of an <code>Interval</code> when it misses a tick.\nSkips missed ticks and tick on the next multiple of <code>period</code> …\nFuture returned by <code>sleep</code> and <code>sleep_until</code>.\nFuture returned by <code>timeout</code> and <code>timeout_at</code>.\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> …\nReturns the amount of time elapsed from another instant to …\nReturns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> …\nReturns the instant at which the future will complete.\nReturns <code>MissedTickBehavior::Burst</code>.\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed since this instant was …\nTime error types.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate a <code>tokio::time::Instant</code> from a <code>std::time::Instant</code>.\nGets a mutable reference to the underlying value in this …\nGets a reference to the underlying value in this timeout.\nCreates new <code>Interval</code> that yields with interval of <code>period</code>. …\nCreates new <code>Interval</code> that yields with interval of <code>period</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes this timeout, returning the underlying value.\nConvert the value into a <code>std::time::Instant</code>.\nReturns <code>true</code> if <code>Sleep</code> has elapsed.\nReturns the <code>MissedTickBehavior</code> strategy currently being …\nReturns an instant corresponding to “now”.\nReturns the period of the interval.\nPolls for the next instant in the interval to be reached.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nResets the interval to complete one period after the …\nResets the <code>Sleep</code> instance to a new deadline.\nResets the interval after the specified <code>std::time::Duration</code>…\nResets the interval to a <code>crate::time::Instant</code> deadline.\nResets the interval immediately.\nReturns the amount of time elapsed from another instant to …\nSets the <code>MissedTickBehavior</code> strategy that should be used.\nWaits until <code>duration</code> has elapsed.\nWaits until <code>deadline</code> is reached.\nCompletes when the next instant in the interval has been …\nRequires a <code>Future</code> to complete before the specified …\nRequires a <code>Future</code> to complete before the specified instant …\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nErrors returned by <code>Timeout</code>.\nErrors encountered by the timer implementation.\nCreates an error representing a timer at capacity.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates an error representing a misconfigured timer.\nReturns <code>true</code> if the error was caused by the timer being at …\nReturns <code>true</code> if the error was caused by the timer being …\nReturns <code>true</code> if the error was caused by the timer being …\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nCreates an error representing a shutdown timer.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nInitializes tracing in a standard way.\nGuard that flushes Chrome trace file when dropped.\nBuilds a Chrome trace layer and guard.\nBuilds an OpenTelemetry layer with the opentelemetry.skip …\nInitializes tracing with Chrome Trace JSON exporter.\nInitializes tracing with OpenTelemetry OTLP exporter.\nThe Evm virtual machine\nThe possible types of queries for an EVM contract\nError caused by invalid VM runtimes\nA request to schedule an operation that can mutate the …\nA request to schedule operations that can mutate the …\nA read-only query.\nThe virtual machine runtime\nThe Wasm virtual machine\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\nReads <code>length</code> bytes from memory from the provided <code>location</code>.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.\nWrites the <code>bytes</code> to memory at the provided <code>location</code>.")