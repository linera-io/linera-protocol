searchState.loadedDescShard("aws_smithy_types", 0, "Protocol-agnostic types for smithy-rs.\nJSON array\nBinary Blob Type\nJSON boolean\nDocument Type\n64-bit floating-point value.\nSigned 64-bit integer value. The wrapped value is <em>always</em> …\nJSON null\nA number type that implements Javascript / JSON semantics, …\nJSON number\nJSON object\nUnsigned 64-bit integer value.\nJSON string\nReturns the inner array value if this <code>Document</code> is an array.\nReturns the mutable inner array value if this <code>Document</code> is …\nReturns the inner boolean value if this <code>Document</code> is a …\nReturns <code>Some(())</code> if this <code>Document</code> is a null.\nReturns the inner number value if this <code>Document</code> is a …\nReturns the inner map value if this <code>Document</code> is an object.\nReturns the mutable inner map value if this <code>Document</code> is an …\nReturns the inner string value if this <code>Document</code> is a …\nA thin wrapper over <code>base64-simd</code>\nTypes for representing the body of an HTTP request or …\nByteStream Abstractions\nTypes that allow users to indicate their preferences for …\nA typemap for storing configuration. Layers and layered …\nDateTime type for representing Smithy timestamps.\nSmithy Endpoint Types\nErrors for Smithy codegen\nTypes relevant to event stream …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the <code>Blob</code> and returns a <code>Vec&lt;u8&gt;</code> with its contents.\nReturns <code>true</code> if this <code>Document</code> is an array.\nReturns <code>true</code> if this <code>Document</code> is a bool.\nReturns <code>true</code> if this <code>Document</code> is a boolean.\nReturns <code>true</code> if this <code>Document</code> is a number.\nReturns <code>true</code> if this <code>Document</code> is an object.\nReturns <code>true</code> if this <code>Document</code> is a string.\nCreates a new blob from the given <code>input</code>.\nUtilities for formatting and parsing primitives\nThis module defines types that describe when to retry …\nUTF-8 string byte buffer representation with validation …\nThis module defines types that describe timeouts that can …\nConverts to an <code>f32</code> lossily. Use <code>Number::try_from</code> to make …\nConverts to an <code>f64</code> lossily. Use <code>Number::try_from</code> to make …\nUtilities for type erasure.\nFailure to decode a base64 value.\nDecode <code>input</code> from base64 using the standard base64 alphabet\nEncode <code>input</code> into base64 using the standard base64 alphabet\nReturns the base64 representation’s length for the given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nA generic, boxed error that’s <code>Send</code> and <code>Sync</code>\nSdkBody type\nIf possible, return a reference to this body as <code>&amp;[u8]</code>\nReturn the length, in bytes, of this SdkBody. If this …\nCreate an empty SdkBody for requests and responses that don…\nReturns the argument unchanged.\nConstruct an <code>SdkBody</code> from a type that implements …\nConstruct an <code>SdkBody</code> from a type that implements …\nThis module is named after the <code>http-body</code> version number …\nAdapters to use http-body 1.0 bodies with SdkBody &amp; …\nCalls <code>U::from(self)</code>.\nReturn <code>true</code> if this SdkBody is streaming, <code>false</code> if it is …\nGiven a function to modify an <code>SdkBody</code>, run that function …\nUpdate this <code>SdkBody</code> with <code>map</code>. <strong>This function MUST NOT alter </strong>…\nConstruct an explicitly retryable SDK body\nWhen an SdkBody is read, the inner data must be consumed. …\nAttempt to clone this SdkBody. This will fail if the inner …\nNon-contiguous Binary Data Storage\nStream of binary data\nRead this number of bytes exactly. Returns an error if the …\nBuilder for creating <code>ByteStreams</code> from a file/path, with …\nThe length (in bytes) to read. Determines whether or not a …\nRead up to this number of bytes. May read less than the …\nSpecify the size of the buffer used to read the file (in …\nReturns a <code>ByteStream</code> from this builder.\nReturns a reference to the data if it is already available …\nRead all the data from this <code>ByteStream</code> into memory\nErrors related to bytestreams.\nSets the file to read from.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConstruct a <code>ByteStream</code> from a type that implements …\nConstruct a <code>ByteStream</code> from a type that implements …\nCreate a ByteStream that streams data from the filesystem\nCreate a new <code>ByteStream</code> from a static byte slice.\nThis module is named after the <code>http-body</code> version number …\nAdapters to use http-body 1.0 bodies with SdkBody &amp; …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert this <code>ByteStream</code> into a struct that implements …\nConvert this buffer into <code>Bytes</code>.\nConsume the <code>ByteStream</code>, returning the wrapped SdkBody.\nConvert this buffer into an <code>Iterator</code> of underlying …\nSpecify the length to read (in bytes).\nGiven a function to modify an <code>SdkBody</code>, run it on the …\nCreate a new <code>FsBuilder</code> (using a default read buffer of …\nCreate a new <code>ByteStream</code> from an <code>SdkBody</code>.\nReturn the next item in the <code>ByteStream</code>.\nSpecify the offset to start reading from (in bytes)\nSets the path to read from.\nAttempt to pull out the next value of this stream, …\nReturns a <code>FsBuilder</code>, allowing you to build a <code>ByteStream</code> …\nReturn the bounds on the remaining length of the <code>ByteStream</code>…\nConvert this buffer into a <code>Vec&lt;u8&gt;</code>\nConsume and return the next item in the <code>ByteStream</code> or …\nAn error occurred in the byte stream\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDetermines when a checksum will be calculated for request …\nDetermines when checksum validation will be performed on …\nUnknown setting for <code>request_checksum_calculation</code>\nUnknown setting for <code>response_checksum_validation</code>\nCaulculate request checksums only when they are required.\nValidate response checksums only when they are required.\nCalculate request checksums when they are supported.\nValidate response checksums when they are supported.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe unknown value\nThe unknown value\nIterator of items returned by <code>StoreAppend</code>\n<code>CloneableLayer</code> allows itself to be cloned. This is useful …\nLayered configuration structure\n<code>FrozenLayer</code> is the immutable and shareable form of <code>Layer</code>.\nIterator of items returned from <code>ConfigBag</code>.\nA named layer comprising a config bag\nDenote the returned type when loaded from the config bag\nTrait that marks the implementing types as able to be …\nTrait defining how types can be stored and loaded from the …\nStore an item in the config bag by effectively appending …\nStore an item in the config bag by replacing the existing …\nDenote the stored type when stored into the config bag\nSpecify how an item is stored in the config bag, e.g. …\nAdd a new layer with <code>name</code> after freezing the top layer so …\nCreate a new config bag “base”.\nClears the value of type <code>T</code> from the config bag\nClears the value of type <code>T</code> from the config bag\nConverts this layer into a frozen layer that can no longer …\nConverts this layer into a frozen layer that can no longer …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturn a mutable reference to <code>T</code> if found within the config …\nReturn a mutable reference to <code>T</code> if found within the …\nReturns a mutable reference to <code>T</code> if it is stored in the …\nReturns a mutable reference to <code>T</code> if it is stored in the …\nReturn a mutable reference to the interceptor state.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns true if this layer is empty.\nLoad a value (or values) of type <code>T</code> depending on how <code>T</code> …\nLoad a storable item from the bag\nCreate a returned type from an iterable of items\nCreates a new <code>CloneableLayer</code> with a given name\nCreate a new Layer with a given name\nCreate a <code>ConfigBag</code> consisting of the given layers.\nAdd the given layer to the config bag.\nAdd a frozen/shared layer to the config bag.\nReturn a value (or values) of type <code>T</code> depending on how it …\nStores <code>item</code> of type <code>T</code> into the config bag, appending it to …\nThis can only be used for types that use <code>StoreAppend</code>\nStores <code>item</code> of type <code>T</code> into the config bag, overriding a …\nStores <code>item</code> of type <code>T</code> into the config bag, overriding a …\nStores <code>item</code> of type <code>T</code> into the config bag, overriding a …\nStores <code>item</code> of type <code>T</code> into the config bag, overriding a …\nAttempts to convert this bag directly into a <code>Layer</code> if no …\nRemoves <code>T</code> from this bag\nRemove <code>T</code> from this bag\nAdd another layer to this configuration bag\nChanges the name of this layer.\nFailure to convert a <code>DateTime</code> to or from another type.\nDateTime in time.\nRFC-3339 Date Time. If the date time has an offset, an …\nError returned when date-time formatting fails.\nError returned when date-time parsing fails.\nRFC-3339 Date Time. Offsets are supported. e.g. …\nNumber of seconds since the Unix epoch formatted as a …\nFormats for representing a <code>DateTime</code> in the Smithy …\nDate format used by the HTTP <code>Date</code> header, specified in …\nReturns the number of nanoseconds since the Unix epoch …\nReturns the <code>DateTime</code> value as an <code>f64</code> representing the …\nFormats the <code>DateTime</code> to a string using the given <code>format</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a <code>DateTime</code> from a number of seconds and a …\nCreates a <code>DateTime</code> from a number of milliseconds since the …\nCreates a <code>DateTime</code> from a number of nanoseconds since the …\nCreates a <code>DateTime</code> from a number of seconds since the Unix …\nCreates a <code>DateTime</code> from a number of seconds and sub-second …\nCreates a <code>DateTime</code> from an <code>f64</code> representing the number of …\nParses a <code>DateTime</code> from a string using the given <code>format</code>.\nReturns true if sub-second nanos is greater than zero.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRead 1 date of <code>format</code> from <code>s</code>, expecting either <code>delim</code> or EOF\nReturns the epoch seconds component of the <code>DateTime</code>.\nSet the seconds component of this <code>DateTime</code>.\nSet the “sub-second” nanoseconds of this <code>DateTime</code>.\nReturns the sub-second nanos component of the <code>DateTime</code>.\nConverts the <code>DateTime</code> to the number of milliseconds since …\nBuilder for <code>Endpoint</code>\nSmithy Endpoint Type\nConstructs an <code>Endpoint</code> from this builder\nA builder for <code>Endpoint</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nAdds a header to the endpoint\nReturns the headers associated with this endpoint\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this endpoint back into a <code>Builder</code>\nReturns the properties associated with this endpoint\nAdds a property to the endpoint\nReturns the URL of this endpoint\nSet the URL of the Endpoint\nThe error type returned when conversion into an integer …\nError wrapper that displays error context\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nError metadata\nErrors for operations\nProvides a <code>Display</code> impl for an <code>Error</code> that outputs the full …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBuilder for <code>ErrorMetadata</code>.\nEmpty error metadata\nGeneric Error type\nTrait to retrieve error metadata from a result\nCreates the error.\nCreates an <code>Error</code> builder.\nReturns the error code if it’s available.\nReturns the error code.\nSets the error code.\nSet a custom field on the error metadata\nReturns additional information about the error if it’s …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts an <code>Error</code> into a builder.\nReturns the error message, if there is one.\nReturns the error message.\nSets the error message.\nReturns error metadata, which includes the error code, …\nAn error occurred attempting to build an <code>Operation</code> from an …\nAn error that occurs when serialization of an operation …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConstruct a build error for an invalid field\nConstruct a build error for a missing field\nConstruct a build error from another underlying error\nAn error that occurs when serialization of an operation …\nRepresents a boolean value.\nRepresents a byte value.\nRepresents a byte array value.\nMessage was decoded into a valid frame, but failed to …\nEvent Stream header.\nEvent Stream frame header value.\nRepresents an int16 value.\nRepresents an int32 value.\nRepresents an int64 value.\nMessage failed to be decoded into a valid frame. The raw …\nEvent Stream message.\nRaw message from an event stream receiver when a response …\nRepresents a string value.\nRepresents a timestamp value.\nRepresents a uuid value.\nAdds a header to the message.\nIf the <code>HeaderValue</code> is a <code>Bool</code>, returns the associated <code>bool</code>. …\nIf the <code>HeaderValue</code> is a <code>Byte</code>, returns the associated <code>i8</code>. …\nIf the <code>HeaderValue</code> is a <code>ByteArray</code>, returns the associated …\nIf the <code>HeaderValue</code> is an <code>Int16</code>, returns the associated <code>i16</code>…\nIf the <code>HeaderValue</code> is an <code>Int32</code>, returns the associated <code>i32</code>…\nIf the <code>HeaderValue</code> is an <code>Int64</code>, returns the associated <code>i64</code>…\nIf the <code>HeaderValue</code> is a <code>String</code>, returns the associated …\nIf the <code>HeaderValue</code> is a <code>Timestamp</code>, returns the associated …\nIf the <code>HeaderValue</code> is a <code>Uuid</code>, returns the associated <code>u128</code>. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns all headers.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a <code>RawMessage</code> for failure to decode a message into …\nReturns the header name.\nCreates a new header with the given <code>name</code> and <code>value</code>.\nCreates a new message with the given <code>payload</code>. Headers can …\nCreates a message with the given <code>headers</code> and <code>payload</code>.\nReturns the payload bytes.\nReturns the header value.\nPrimitive Type Encoder\nSealed trait for custom parsing of primitive types\nAn error during primitive parsing\nEncodes a Smithy primitive as a string.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nParses a Smithy primitive from a string.\nAn experimental retry mode that includes the functionality …\nDoesn’t count against any budgets. This could be …\nRetry the associated request due to a known <code>ErrorKind</code>.\nType of error that occurred when making a request.\nAn Explicit retry (e.g. from <code>x-amz-retry-after</code>).\nTrait that provides an <code>ErrorKind</code> and an error code.\nMode for connection re-establishment\nReconnect on <code>ErrorKind::TransientError</code>\nRetry configuration for requests.\nBuilder for <code>RetryConfig</code>.\n<code>RetryKind</code> describes how a request MAY be retried for a …\nSpecifies how failed requests should be retried.\nFailure to parse a <code>RetryMode</code> from string.\nDisable reconnect on error\nServer error that isn’t explicitly throttling but is …\nThe standard set of retry rules across AWS SDKs. This mode …\nAn error where the server explicitly told the client to …\nA connection-level error.\nThe response was successful, so no retry is necessary.\nThe response was a failure that should <em>not</em> be retried.\nCreates a default <code>RetryConfig</code> with <code>RetryMode::Adaptive</code> and …\nBuilds a <code>RetryConfig</code>.\nReturns the <code>code</code> for this error if one exists\nCreates a <code>RetryConfig</code> that has retries disabled.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns true if retry is enabled with this config\nSet the initial_backoff duration. This duration should be …\nReturns the backoff multiplier duration.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSets the max attempts. This value must be greater than …\nReturns the max attempts.\nSet the max_backoff duration. This duration should be …\nReturns the max backoff duration.\nSets the retry mode.\nReturns the retry mode.\nCreates a new builder.\nSet the <code>ReconnectMode</code> for the retry strategy\nReturns the <code>ReconnectMode</code>\nReturns the <code>ErrorKind</code> when the error is modeled as …\nSet the initial_backoff duration. This duration should be …\nSets the max attempts. This value must be greater than …\nSet the max_backoff duration. This duration should be …\nSets the retry mode.\nSet the <code>ReconnectMode</code> for the retry strategy\nCreates a default <code>RetryConfig</code> with <code>RetryMode::Standard</code> and …\nMerge two builders together. Values from <code>other</code> will only …\nReturns <code>true</code> if retry strategies should use a static …\nSet the multiplier used when calculating backoff times as …\nSet the maximum number of times a request should be tried, …\nSet the maximum backoff time.\nSet the <code>ReconnectMode</code> for the retry strategy\nSet this config’s retry mode.\nHint to the retry strategy whether to use a static …\nUTF-8 string byte buffer representation with validation …\nReturns the underlying <code>Bytes</code> representation.\nReturns the <code>StrBytes</code> value as a <code>&amp;str</code>.\nCreates a <code>StrBytes</code> from a <code>&amp;str</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nTries to create a <code>StrBytes</code> from a slice, or returns a …\nMerger which merges timeout config settings when loading.\nConfiguration subset of <code>TimeoutConfig</code> for operation …\nTop-level configuration for timeouts\nBuilder for <code>TimeoutConfig</code>.\nBuilds a <code>TimeoutConfig</code>.\nReturns a builder to create a <code>TimeoutConfig</code>.\nSets the connect timeout.\nReturns this config’s connect timeout.\nDisables the connect timeout\nDisables the operation_attempt timeout\nDisables the operation timeout\nDisables the read timeout\nReturns a timeout config with all timeouts disabled.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns true if any of the possible timeouts are set.\nReturns true if any of the possible timeouts are set.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConverts this <code>TimeoutConfig</code> into a builder.\nCreates a new builder with no timeouts set.\nSets the operation attempt timeout.\nReturns this config’s operation attempt timeout.\nReturns this config’s operation attempt timeout.\nSets the operation timeout.\nReturns this config’s operation timeout.\nReturns this config’s operation timeout.\nSets the read timeout.\nReturns this config’s read timeout.\nSets the connect timeout.\nSets the operation attempt timeout.\nSets the operation timeout.\nSets the read timeout.\nFill any unfilled values in <code>self</code> from <code>other</code>.\nMerges two timeout config builders together.\nReturns a builder equivalent of this <code>TimeoutConfig</code>.\nAbstraction over <code>Box&lt;dyn T + Send + Sync&gt;</code> that provides …\nA new-type around <code>Box&lt;dyn Error + Debug + Send + Sync&gt;</code> …\nOften, when testing the orchestrator or its components, it…\nReturns a <code>TypeErasedError</code> with a fake/test value with the …\nDowncast into a <code>Box&lt;T&gt;</code>, or return <code>Self</code> if it is not a <code>T</code>.\nDowncast into a <code>Box&lt;T&gt;</code>, or return <code>Self</code> if it is not a <code>T</code>.\nDowncast as a <code>&amp;mut T</code>, or return <code>None</code> if it is not a <code>T</code>.\nDowncast as a <code>&amp;mut T</code>, or return <code>None</code> if it is not a <code>T</code>.\nDowncast as a <code>&amp;T</code>, or return <code>None</code> if it is not a <code>T</code>.\nDowncast as a <code>&amp;T</code>, or return <code>None</code> if it is not a <code>T</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>TypeErasedBox</code> from <code>value</code> of type <code>T</code>\nCreate a new <code>TypeErasedError</code> from <code>value</code> of type <code>T</code>\nCreate a new cloneable <code>TypeErasedBox</code> from the given <code>value</code>.\nAttempts to clone this box.")