searchState.loadedDescShard("static_assertions_next", 0, "Banner\nAsserts that the types’ alignments are equal.\nAsserts that the types’ alignments are greater than or …\nAsserts that the types’ alignments are greater than each …\nAsserts that the types’ alignments are less than or …\nAsserts that the types’ alignments are less than each …\nAsserts that the types’ alignments are <strong>not</strong> equal.\nAsserts that a given configuration is set.\nAsserts that the types’ alignments are equal.\nAsserts that types are equal in alignment.\nAsserts that values pointed to are equal in size.\nAsserts that values pointed to are equal in size.\nAsserts that the type has the given fields.\nAsserts that the type implements a logical trait …\nAsserts that the type implements <em>all</em> of the given traits.\nAsserts that the type implements <em>any</em> of the given traits.\nAsserts that the type does <strong>not</strong> implement <em>all</em> of the given …\nAsserts that the type does <strong>not</strong> implement <em>any</em> of the given …\nAsserts that the type implements exactly one in a set of …\nAsserts that the type does <strong>not</strong> implement <em>all</em> of the given …\nAsserts that the type does <strong>not</strong> implement <em>any</em> of the given …\nAsserts that the traits support dynamic dispatch (…\nAsserts that types are equal in size.\nAsserts that values pointed to are equal in size.\nAsserts that values are equal in size.\nAsserts that the trait is a child of all of the other …\nAsserts that the trait is a child of one or more of the …\nAsserts that the trait is a parent of all of the other …\nAsserts that <em>all</em> types in a list are equal to each other.\nAsserts that <em>all</em> types are <strong>not</strong> equal to each other.\nAsserts that constant expressions evaluate to <code>true</code>.\nAsserts that constants are equal in value.\nAsserts that constants of type <code>usize</code> are equal in value.\nAsserts that constants are less than or equal to each …\nAsserts that constants are greater than each other.\nAsserts that constants are less than or equal to each …\nAsserts that constants are less than each other.\nAsserts that constants are <strong>not</strong> equal in value.\nReturns <code>true</code> if the type does implement a logical trait …")