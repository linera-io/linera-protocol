[workspace]
members = [
    "linera-base",
    "linera-chain",
    "linera-client",
    "linera-core",
    "linera-ethereum",
    "linera-execution",
    "linera-explorer",
    "linera-indexer/example",
    "linera-indexer/graphql-client",
    "linera-indexer/lib",
    "linera-indexer/plugins",
    "linera-rpc",
    "linera-sdk",
    "linera-sdk-derive",
    "linera-service",
    "linera-service-graphql-client",
    "linera-storage",
    "linera-storage-service",
    "linera-summary",
    "linera-views",
    "linera-views-derive",
    "linera-witty",
    "linera-witty-macros",
    "linera-witty/test-modules",
]
exclude = ["examples", "scripts"]
resolver = "2"

[workspace.package]
version = "0.14.0"
authors = ["Linera <contact@linera.io>"]
repository = "https://github.com/linera-io/linera-protocol"
homepage = "https://linera.dev"
license = "Apache-2.0"
edition = "2021"

[workspace.dependencies]
heck = "0.4.1"
anyhow = "1.0.80"
assert_matches = "1.5.0"
async-graphql = "=7.0.2"
async-graphql-axum = "=7.0.2"
async-graphql-derive = "=7.0.2"
async-lock = "3.3.0"
async-trait = "0.1.77"
async-tungstenite = { version = "0.22", features = ["tokio-runtime"] }
aws-config = "1.1.7"
aws-sdk-dynamodb = "1.16.0"
aws-sdk-s3 = "1.17.0"
aws-smithy-http = "0.60.6"
aws-types = "1.1.7"
aws-smithy-types = "1.1.7"
axum = "0.7.4"
base64 = "0.22.0"
bcs = "0.1.6"
bincode = "1.3.3"
bytes = "1.5.0"
cargo_metadata = "0.18.1"
cargo_toml = "0.19.2"
cfg-if = "1.0.0"
cfg_aliases = "0.2.1"
chrono = { version = "0.4.35", default-features = false }
clap = { version = "4", features = ["cargo", "derive", "env"] }
clap-markdown = "0.1.3"
colored = "2.1.0"
comfy-table = "7.1.0"
convert_case = "0.6.0"
criterion = { version = "0.5.1", default-features = false }
custom_debug_derive = "0.6.1"
dashmap = "5.5.3"
derive_more = "1.0.0"
dirs = "5.0.1"
dyn-clone = "1.0.17"
ed25519-dalek = { version = "2.1.1", default-features = false, features = [
    "batch",
    "fast",
    "serde",
    "zeroize",
] }
either = "1.10.0"
ethers = { version = "2.0.14", features = ["solc"] }
flarch = "0.7.0"
frunk = "0.4.2"
fs-err = "2.11.0"
fs4 = "0.8.2"
fs_extra = "1.3.0"
futures = "0.3.30"
genawaiter = "0.99.1"
generic-array = { version = "0.14.7", features = ["serde"] }
getrandom = "0.2.12"
git2 = "0.19.0"
hex = "0.4.3"
http = "1.1.0"
humantime = "2.1.0"
glob = "0.3.1"
gloo-storage = "0.3.0"
gloo-utils = "0.2.0"
indexed_db_futures = "0.4.1"
insta = "1.36.1"
is-terminal = "0.4.12"
alloy = { version = "0.9.2", default-features = false }
alloy-signer-local = "0.9.2"
log = "0.4.21"
lru = "0.12.3"
linked-hash-map = "0.5.6"
num-bigint = "0.4.3"
num-traits = "0.2.18"
octocrab = "0.42.1"
oneshot = "0.1.6"
port-selector = "0.1.6"
prettyplease = "0.2.16"
prometheus = "0.13.3"
proc-macro-error = "1.0.4"
proc-macro2 = "1.0"
proptest = { version = "1.4.0", default-features = false, features = ["alloc"] }
prost = "0.13.2"
quote = "1.0"
rand = { version = "0.8.5", default-features = false }
rand_chacha = { version = "0.3.1", default-features = false }
rand_distr = { version = "0.4.3", default-features = false }
ruzstd = "0.7.1"
k8s-openapi = { version = "0.21.1", features = ["v1_28"] }
pathdiff = "0.2.1"
kube = "0.88.1"
rcgen = "0.12.1"
reqwest = { version = "0.11.24", default-features = false, features = [
    "rustls-tls",
] }
rocksdb = "0.21.0"
scylla = "0.15.1"
semver = "1.0.22"
serde = { version = "1.0.197", features = ["derive"] }
serde_bytes = "0.11.14"
serde_json = "1.0.114"
serde_yaml = "0.8.26"
serde-name = "0.2.1"
serde-reflection = "0.3.6"
serde-wasm-bindgen = "0.6.5"
sha3 = "0.10.8"
similar-asserts = "1.5.0"
static_assertions = "1.1.0"
stdext = "0.3.3"
syn = "2.0.52"
tempfile = "3.10.1"
test-case = "3.3.1"
test-log = { version = "0.2.15", default-features = false, features = [
    "trace",
] }
test-strategy = "0.3.1"
thiserror = "1.0.65"
thiserror-context = "0.1.1"
tonic = { version = "0.12.3", default-features = false }
tonic-build = { version = "0.12.3", default-features = false }
tonic-health = "0.12"
tonic-reflection = "0.12"
tonic-web = "0.12"
tonic-web-wasm-client = "0.6.0"
tokio = "1.36.0"
tokio-stream = "0.1.14"
tokio-test = "0.4.3"
tokio-util = "0.7.10"
toml = "0.8.10"
tower-http = "0.5.2"
tower = "0.4.13"
tracing = { version = "0.1.40", features = ["release_max_level_debug"] }
tracing-subscriber = { version = "0.3.18", default-features = false, features = [
    "env-filter",
] }
tracing-web = "0.1.3"
trait-variant = "0.1.1"
url = "2.4"
wasm-bindgen = "0.2.92"
wasm-bindgen-futures = "0.4.42"
wasm-bindgen-test = "0.3.42"
wasm-encoder = "0.24.1"
wasm-instrument = "0.4.0"
wasm_thread = "0.3.0"
wasmer = { package = "linera-wasmer", version = "4.4.0-linera.6", default-features = false }
wasmer-compiler-singlepass = { package = "linera-wasmer-compiler-singlepass", version = "4.4.0-linera.6", default-features = false, features = [
    "std",
    "unwind",
    "avx",
] }
wasmparser = "0.101.1"
wasmtime = { version = "25.0.0", default-features = false, features = [
    "cranelift",
    "runtime",
    "std",
] }
wasmtimer = "0.2.0"
webassembly-test = "0.1.0"
web-sys = "0.3.69"
js-sys = "0.3.70"
web-time = "1.1.0"
wit-bindgen = "0.24.0"
zstd = "0.13.2"

linera-base = { version = "0.14.0", path = "./linera-base" }
linera-chain = { version = "0.14.0", path = "./linera-chain" }
linera-client = { version = "0.14.0", path = "./linera-client" }
linera-core = { version = "0.14.0", path = "./linera-core", default-features = false }
linera-ethereum = { version = "0.14.0", path = "./linera-ethereum", default-features = false }
linera-execution = { version = "0.14.0", path = "./linera-execution", default-features = false }
linera-indexer = { version = "0.14.0", path = "./linera-indexer/lib" }
linera-indexer-graphql-client = { version = "0.14.0", path = "./linera-indexer/graphql-client" }
linera-indexer-plugins = { version = "0.14.0", path = "./linera-indexer/plugins" }
linera-rpc = { version = "0.14.0", path = "./linera-rpc" }
linera-sdk = { version = "0.14.0", path = "./linera-sdk" }
linera-storage = { version = "0.14.0", path = "./linera-storage", default-features = false }
linera-storage-service = { version = "0.14.0", path = "./linera-storage-service", default-features = false }
linera-version = { version = "0.14.0", path = "./linera-version" }
linera-views = { version = "0.14.0", path = "./linera-views", default-features = false }
linera-views-derive = { version = "0.14.0", path = "./linera-views-derive" }
linera-witty = { version = "0.14.0", path = "./linera-witty" }
linera-witty-macros = { version = "0.14.0", path = "./linera-witty-macros" }
linera-witty-test-modules = { version = "0.14.0", path = "./linera-witty/test-modules" }
linera-sdk-derive = { version = "0.14.0", path = "./linera-sdk-derive" }
linera-service = { version = "0.14.0", path = "./linera-service", default-features = false }
linera-service-graphql-client = { version = "0.14.0", path = "./linera-service-graphql-client" }

counter = { path = "./examples/counter" }
meta-counter = { path = "./examples/meta-counter" }
ethereum-tracker = { path = "./examples/ethereum-tracker" }
fungible = { path = "./examples/fungible" }
native-fungible = { path = "./examples/native-fungible" }
non-fungible = { path = "./examples/non-fungible" }
crowd-funding = { path = "./examples/crowd-funding" }
matching-engine = { path = "./examples/matching-engine" }
social = { path = "./examples/social" }
amm = { path = "./examples/amm" }

[profile.release]
lto = "thin"
debug = true

[profile.bench]
debug = true

# This section is experimental and requires to build `cargo-all-features` from the fork
# repository: https://github.com/ma2bd/cargo-all-features
[workspace.metadata.cargo-all-features]
skip_optional_dependencies = true
max_combination_size = 1

# Make sure to compile VMs with high optimization level
[profile.dev.package.linera-wasmer]
opt-level = 3

[profile.dev.package.wasmparser]
opt-level = 3

[profile.dev.package.wasmtime]
opt-level = 3

[patch.crates-io.indexed_db_futures]
version = "0.4.1"
git = "https://github.com/Twey/rust-indexed-db"
branch = "no-uuid-wasm-bindgen"

[patch.crates-io.wasm_thread]
git = "https://github.com/Twey/wasm_thread"
branch = "post-message"
