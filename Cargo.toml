[workspace]
members = [
        "linera-base",
        "linera-chain",
        "linera-core",
        "linera-execution",
        "linera-rpc",
        "linera-sdk",
        "linera-sdk/wasm-tests",
        "linera-service",
        "linera-storage",
        "linera-views",
        "linera-views-derive",
        "linera-witty",
        "linera-witty/test-modules",
        "linera-witty-macros",
        "linera-explorer",
]
exclude = [
        "examples",
        "scripts",
]
resolver = "2"

[workspace.dependencies]
heck = "0.4.1"
anyhow = "1.0.57"
async-graphql = "5.0.7"
async-graphql-axum = "5.0.5"
async-lock = "2.6.0"
async-stream = "0.3.5"
async-trait = "=0.1.58"
aws-config = "0.14.0"
aws-sdk-dynamodb = "0.14.0"
aws-sdk-s3 = "0.14.0"
aws-smithy-http = "0.44.0"
aws-types = "0.14.0"
scylla = "0.8.1"
axum = "0.6.2"
bcs = "0.1.3"
bincode = "1.3.3"
bytes = "1.2.1"
cargo_toml = "0.15.2"
chrono = "0.4.23"
colored = "2.0.0"
comfy-table = "6.1.4"
convert_case = "0.6.0"
criterion = "0.4.0"
custom_debug_derive = "0.5.1"
dashmap = "5.4.0"
derive_more = "0.99.17"
dirs = "5.0.0"
ed25519 = "1.2.0"
ed25519-dalek = { version = "1.0.1", features = ["batch", "serde"] }
either = "1.9.0"
frunk = "0.4.2"
futures = "0.3.24"
generic-array = { version = "0.14.4", features = ["serde"] }
hex = "0.4.3"
http = "0.2.7"
log = "0.4.17"
lru = "0.9.0"
metrics = "0.21.0"
metrics-exporter-tcp = "0.8.0"
metrics-util = "0.15.0"
linked-hash-map = "0.5.3"
once_cell = "1.17.1"
parse_duration = "2.1.1"
proc-macro-error = "1.0.4"
proc-macro2 = "1.0"
proptest = "1.0.0"
prost = "0.11"
quote = "1.0"
rand = "0.8.5"
rand07 = { package = "rand", version = "0.7.3" }
reqwest = "0.11.14"
rocksdb = "0.19.0"
serde = { version = "1.0.152", features = ["derive"] }
serde_bytes = "0.11.8"
serde_json = "1.0.93"
serde_yaml = "0.8.21"
serde-name = "0.2.0"
serde-reflection = "0.3.5"
sha3 = "0.10.6"
similar-asserts = "1.1.0"
static_assertions = "1.1.0"
structopt = "0.3.23"
syn = "1.0.107"
tempfile = "3.2.0"
test-case = "3.0.0"
test-log = { version = "0.2.11", default-features = false, features = ["trace"] }
test-strategy = "0.2.0"
thiserror = "1.0.38"
tonic = "0.8"
tonic-build = "0.8"
tonic-health = "0.8"
tokio = "1.25.0"
tokio-stream = "0.1.11"
tokio-test = "0.4.2"
tokio-util = "0.6.9"
toml = "0.7.3"
tower-http = "0.4.0"
tracing = "0.1.37"
tracing-subscriber = { version = "0.3.16", default-features = false, features = ["env-filter"] }
wasm-encoder = "0.24.1"
wasmer = { version = "=3.1.1", features = ["singlepass"] }
wasmer-middlewares = "3.1.1"
wasmer-vm = { version = "=3.1.1" }
wasmparser = "0.101.1"
wasmtime = "1.0"
wit-bindgen-guest-rust = { version = "0.2.0", package = "linera-wit-bindgen-guest-rust" }
wit-bindgen-host-wasmer-rust = { version = "0.2.0", package = "linera-wit-bindgen-host-wasmer-rust" }
wit-bindgen-host-wasmtime-rust = { version = "0.2.0", package = "linera-wit-bindgen-host-wasmtime-rust" }

linera-base = { version = "0.3.0", path = "./linera-base" }
linera-chain = { version = "0.3.0", path = "./linera-chain" }
linera-core = { version = "0.3.0", path = "./linera-core", default-features = false }
linera-execution = { version = "0.3.0", path = "./linera-execution", default-features = false }
linera-rpc = { version = "0.3.0", path = "./linera-rpc" }
linera-storage = { version = "0.3.0", path = "./linera-storage", default-features = false }
linera-views = { version = "0.3.0", path = "./linera-views", default-features = false }
linera-views-derive = { version = "0.3.0", path = "./linera-views-derive" }
linera-witty = { version = "0.3.0", path = "./linera-witty" }
linera-witty-macros = { version = "0.3.0", path = "./linera-witty-macros" }
linera-service = { version = "0.3.0", path = "./linera-service" }

counter = { path = "./examples/counter" }
meta-counter = { path = "./examples/meta-counter" }
reentrant-counter = { path = "./examples/reentrant-counter" }
fungible = { path = "./examples/fungible" }
crowd-funding = { path = "./examples/crowd-funding" }
matching-engine = { path = "./examples/matching-engine" }
social = { path = "./examples/social" }

[profile.release]
debug = true

[profile.bench]
debug = true

# This section is experimental and requires to build `cargo-all-features` from the fork
# repository: https://github.com/ma2bd/cargo-all-features
[workspace.metadata.cargo-all-features]
skip_optional_dependencies = true
max_combination_size = 1

# Make sure to compile VMs with high optimization level
[profile.dev.package.wasmer]
opt-level = 3

[profile.dev.package.wasmer-middlewares]
opt-level = 3

[profile.dev.package.wasmparser]
opt-level = 3

[profile.dev.package.wasmtime]
opt-level = 3
