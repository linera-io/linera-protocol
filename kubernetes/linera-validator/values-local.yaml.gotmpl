# Values for charts linera-validator for local validators.

# Linera
lineraImage: {{ env "LINERA_HELMFILE_LINERA_IMAGE" | default "linera:latest" }}
lineraImagePullPolicy: Never
logLevel: "debug"
proxyPort: 19100
metricsPort: 21100
numShards: {{ env "LINERA_HELMFILE_SET_NUM_SHARDS" | default 10 }}

# Loki
loki-stack:
  loki:
    enabled: true
    isDefault: false
    persistence:
      enabled: true
      size: 1Gi
    config:
      limits_config:
        reject_old_samples_max_age: 24h
  promtail:
    enabled: true
    config:
      clients:
        - url: http://linera-core-loki:3100/loki/api/v1/push

# Prometheus/Grafana
kube-prometheus-stack:
  grafana:
    sidecar:
      dashboards:
        enabled: true
        label: grafana_dashboard
        labelValue: "1"
    persistence:
      enabled: true
      size: 1Gi
    plugins:
      - grafana-piechart-panel
  prometheus:
    prometheusSpec:
      {{- if .Values.writeToGrafanaCloud }}
      scrapeInterval: 90s
      remoteWrite:
        - url: https://prometheus-prod-13-prod-us-east-0.grafana.net/api/prom/push
          basicAuth:
            username:
              name: grafana-cloud-auth-secret
              key: username
            password:
              name: grafana-cloud-auth-secret
              key: password
          writeRelabelConfigs:
            - sourceLabels: [__name__]
              regex: (apiextensions|apiserver|csi|kube|kubelet|kubernetes|node|prober|prometheus|rest|storage|volume|etcd|net|grafana|authentication|code|workqueue|cluster|go|alertmanager|authorization|namespace|scrape|up|field|registered|process|scylla).+
              action: drop
            - regex: endpoint|instance|namespace|pod|prometheus|prometheus_replica|service|name|resource|id
              action: labeldrop
      externalLabels:
        validator: {{ .Values.validatorLabel }}
      {{- end }}
      retention: 2d
      retentionSize: 1GB
      storageSpec:
        volumeClaimTemplate:
          spec:
            storageClassName: standard
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 1Gi
      # Instruct prometheus operator to search for any ServiceMonitor
      serviceMonitorSelector: {}
      serviceMonitorNamespaceSelector: {}
      # This prevents from adding any Helm label to serviceMonitorSelector if
      # above is empty.
      serviceMonitorSelectorNilUsesHelmValues: false
      # Relabelings needed for Scylla dashboards
      additionalScrapeConfigs:
        - job_name: scylla
          relabel_configs:
          - source_labels: [ __address__ ]
            regex: '([^:]+)'
            target_label: __address__
            replacement: '${1}:9180'
          - source_labels: [ __address__ ]
            regex: '(.*):.+'
            target_label: instance
            replacement: '${1}'
          metric_relabel_configs:
            - source_labels: [ version ]
              regex: '(.+)'
              target_label: CPU
              replacement: 'cpu'
            - source_labels: [ version ]
              regex: '(.+)'
              target_label: CQL
              replacement: 'cql'
            - source_labels: [ version ]
              regex: '(.+)'
              target_label: OS
              replacement: 'os'
            - source_labels: [ version ]
              regex: '(.+)'
              target_label: IO
              replacement: 'io'
            - source_labels: [ version ]
              regex: '(.+)'
              target_label: Errors
              replacement: 'errors'
            - regex: 'help|exported_instance|type'
              action: labeldrop
            - source_labels: [ version ]
              regex: '([0-9]+\.[0-9]+)(\.?[0-9]*).*'
              replacement: '$1$2'
              target_label: svr

# Environment
environment: "kind"

# Validator
validator:
  serverConfig: {{ env "LINERA_HELMFILE_SET_SERVER_CONFIG" | default "working/server_1.json" }}
  genesisConfig: {{ env "LINERA_HELMFILE_SET_GENESIS_CONFIG" | default "working/genesis.json" }}
