environments:
  default:
    values:
      - writeToGrafanaCloud: {{ env "LINERA_WRITE_TO_GRAFANA_CLOUD" | default "false" }}
        validatorLabel: {{ env "LINERA_VALIDATOR_LABEL" | default (printf "local-%s" (env "USER")) }}
        usingLocalSsd: {{ env "LINERA_HELMFILE_SET_USING_LOCAL_SSD" | default "false" }}
        kubeContext: {{ env "LINERA_HELMFILE_SET_KUBE_CONTEXT" | default "" }}
        kubeConfigPath: {{ env "KUBECONFIG" | default "" }}

helmDefaults:
  wait: true
  recreatePods: false
  kubeContext: {{ .Values.kubeContext | quote }}

{{- if .Values.usingLocalSsd }}
hooks:
  - events: ["prepare"]
    showlogs: true
    command: bash
    args:
      - -c
      - |
        set -euxo pipefail

        kube_args=(
          {{- if .Values.kubeContext }}
          --context {{ .Values.kubeContext }}
          {{- end }}
          {{- if .Values.kubeConfigPath }}
          --kubeconfig {{ .Values.kubeConfigPath }}
          {{- end }}
        )

        echo "Ensuring RAID0 and Localâ€‘CSI driver are setup..."

        kubectl "${kube_args[@]}" apply -f ./scylla-setup/gke-daemonset-raid-disks.yaml
        kubectl "${kube_args[@]}" -n default rollout status daemonset/gke-raid-disks

        kubectl "${kube_args[@]}" apply -f ./scylla-setup/local-csi-driver
        kubectl "${kube_args[@]}" -n local-csi-driver rollout status daemonset.apps/local-csi-driver --timeout=5m

        kubectl "${kube_args[@]}" apply -f ./scylla-setup/local-ssd-sc.yaml
{{- end }}

---

repositories:
  - name: scylla
    url: https://scylla-operator-charts.storage.googleapis.com/stable
  - name: jetstack
    url: https://charts.jetstack.io
  - name: prometheus-community
    url: https://prometheus-community.github.io/helm-charts
  - name: grafana
    url: https://grafana.github.io/helm-charts

releases:
  - name: linera-core
    namespace: default
    chart: .
    timeout: 900
    needs:
      - scylla/scylla
    values:
      {{ if .Values.writeToGrafanaCloud -}}
      - grafanaCloudUsername: {{ fetchSecretValue (env "LINERA_GRAFANA_CLOUD_USERNAME_SECRET") | quote }}
        grafanaCloudAPIToken: {{ fetchSecretValue (env "LINERA_GRAFANA_CLOUD_API_TOKEN_SECRET") | quote }}
      {{- end }}
      - writeToGrafanaCloud: {{ .Values.writeToGrafanaCloud }}
      - {{ env "LINERA_HELMFILE_VALUES_LINERA_CORE" | default "values-local.yaml.gotmpl" }}
    set:
      - name: crds.enabled
        value: "true"
  - name: scylla
    version: v1.16.0
    namespace: scylla
    chart: scylla/scylla
    timeout: 900
    needs:
      - scylla-manager/scylla-manager
      - scylla-operator/scylla-operator
    values:
      - {{ env "LINERA_HELMFILE_VALUES_SCYLLA" | default "scylla.values.yaml.gotmpl" }}
  - name: scylla-manager
    version: v1.16.0
    namespace: scylla-manager
    chart: scylla/scylla-manager
    timeout: 900
    needs:
      - scylla-operator/scylla-operator
    values:
      - {{ env "LINERA_HELMFILE_VALUES_SCYLLA_MANAGER" | default "scylla-manager.values.yaml" }}
  - name: scylla-operator
    version: v1.16.0
    namespace: scylla-operator
    chart: scylla/scylla-operator
    timeout: 900
    needs:
      - cert-manager/cert-manager
    values:
      - {{ env "LINERA_HELMFILE_VALUES_SCYLLA_OPERATOR" | default "scylla-operator.values.yaml" }}
  - name: cert-manager
    version: v1.17.0
    namespace: cert-manager
    chart: jetstack/cert-manager
    timeout: 900
    set:
      - name: crds.enabled
        value: "true"
