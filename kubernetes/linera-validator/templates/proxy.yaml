apiVersion: v1
kind: Service
metadata:
  annotations:
    cloud.google.com/app-protocols: '{"linera-port":"HTTP2"}'
    cloud.google.com/backend-config: '{"default": "proxy-backend-config"}'
  name: proxy
  labels:
    app: proxy
spec:
  ports:
    - port: {{ .Values.proxyPort }}
      name: linera-port
      targetPort: {{ .Values.proxyPort }}
    - port: {{ .Values.metricsPort }}
      name: metrics
  selector:
    app: proxy
  clusterIP: None

---
apiVersion: v1
kind: Service
metadata:
  name: proxy-internal
  labels:
    app: proxy
spec:
  ports:
    - port: 20100
      name: proxy-internal
  clusterIP: None
  selector:
    app: proxy
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: proxy
spec:
  serviceName: "proxy-internal"
  selector:
    matchLabels:
      app: proxy
  replicas: {{ .Values.numProxies }}
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: proxy
    spec:
      terminationGracePeriodSeconds: 10
      initContainers:
        - name: linera-proxy-initializer
          image: {{ .Values.lineraImage }}
          imagePullPolicy: {{ .Values.lineraImagePullPolicy }}
          command:
            - sh
            - -c
            - |
              while true; do
                ./linera storage check-existence --storage "scylladb:tcp:scylla-client.scylla.svc.cluster.local:9042"
                status=$?
                if [ "$status" -eq 0 ]; then
                  echo "Database already exists, no need to initialize."
                  exit 0
                else
                  if [ "$status" -eq 1 ]; then
                    echo "Database does not exist, retrying in 5 seconds..."
                  else
                    echo "An unexpected error occurred (status: $status), retrying in 5 seconds..."
                  fi
                  sleep 5
                fi
              done
          env:
            - name: RUST_LOG
              value: {{ .Values.logLevel }}
            - name: RUST_BACKTRACE
              value: "1"
            - name: LINERA_OTLP_EXPORTER_ENDPOINT
              value: {{ .Values.otlpExporterEndpoint }}
      containers:
        - name: linera-proxy
          imagePullPolicy: {{ .Values.lineraImagePullPolicy }}
          image: {{ .Values.lineraImage }}
          ports:
            - containerPort: {{ .Values.proxyPort }}
              name: linera-port
            - containerPort: 20100
              name: private-port
          command:
            - sh
            - -c
            - |
              ORDINAL="${HOSTNAME##*-}"
              exec ./linera-proxy \
                --storage scylladb:tcp:scylla-client.scylla.svc.cluster.local:9042 \
                --storage-replication-factor {{ .Values.storageReplicationFactor | quote }} \
                --id "$ORDINAL" \
                /config/server.json
          env:
            - name: RUST_LOG
              value: {{ .Values.logLevel }}
            - name: LINERA_OTLP_EXPORTER_ENDPOINT
              value: {{ .Values.otlpExporterEndpoint }}
          volumeMounts:
            - name: config
              mountPath: "/config"
              readOnly: true
      volumes:
        - name: config
          configMap:
            name: validator-config
            items:
              - key: serverConfig
                path: server.json
              - key: genesisConfig
                path: genesis.json
