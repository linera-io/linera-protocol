(function() {
    var type_impls = Object.fromEntries([["linera_sdk",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ClonableView-for-QueueView%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#153-156\">Source</a><a href=\"#impl-ClonableView-for-QueueView%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"linera_views/views/trait.ClonableView.html\" title=\"trait linera_views::views::ClonableView\">ClonableView</a> for <a class=\"struct\" href=\"linera_views/views/queue_view/struct.QueueView.html\" title=\"struct linera_views::views::queue_view::QueueView\">QueueView</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"linera_views/context/trait.Context.html\" title=\"trait linera_views::context::Context\">Context</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#158\">Source</a><a href=\"#method.clone_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_views/views/trait.ClonableView.html#tymethod.clone_unchecked\" class=\"fn\">clone_unchecked</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linera_views/views/queue_view/struct.QueueView.html\" title=\"struct linera_views::views::queue_view::QueueView\">QueueView</a>&lt;C, T&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class='docblock'>Creates a clone of this view, sharing the underlying storage context but prone to\ndata races which can corrupt the view state.</div></details></div></details>","ClonableView","linera_sdk::views::aliases::QueueView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ContainerType-for-QueueView%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#499\">Source</a><a href=\"#impl-ContainerType-for-QueueView%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"async_graphql/resolver_utils/container/trait.ContainerType.html\" title=\"trait async_graphql::resolver_utils::container::ContainerType\">ContainerType</a> for <a class=\"struct\" href=\"linera_views/views/queue_view/struct.QueueView.html\" title=\"struct linera_views::views::queue_view::QueueView\">QueueView</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"linera_views/context/trait.Context.html\" title=\"trait linera_views::context::Context\">Context</a>,\n    T: <a class=\"trait\" href=\"async_graphql/base/trait.OutputType.html\" title=\"trait async_graphql::base::OutputType\">OutputType</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve_field\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#499\">Source</a><a href=\"#method.resolve_field\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"async_graphql/resolver_utils/container/trait.ContainerType.html#tymethod.resolve_field\" class=\"fn\">resolve_field</a>(\n    &amp;self,\n    ctx: &amp;<a class=\"struct\" href=\"async_graphql/context/struct.ContextBase.html\" title=\"struct async_graphql::context::ContextBase\">ContextBase</a>&lt;'_, &amp;<a class=\"struct\" href=\"async_graphql_parser/pos/struct.Positioned.html\" title=\"struct async_graphql_parser::pos::Positioned\">Positioned</a>&lt;<a class=\"struct\" href=\"async_graphql_parser/types/executable/struct.Field.html\" title=\"struct async_graphql_parser::types::executable::Field\">Field</a>&gt;&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"async_graphql_value/enum.ConstValue.html\" title=\"enum async_graphql_value::ConstValue\">ConstValue</a>&gt;, <a class=\"struct\" href=\"async_graphql/error/struct.ServerError.html\" title=\"struct async_graphql::error::ServerError\">ServerError</a>&gt;</h4></section></summary><div class='docblock'>Resolves a field value and outputs it as a json value\n<code>async_graphql::Value</code>. <a href=\"async_graphql/resolver_utils/container/trait.ContainerType.html#tymethod.resolve_field\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.find_entity\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#499\">Source</a><a href=\"#method.find_entity\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"async_graphql/resolver_utils/container/trait.ContainerType.html#method.find_entity\" class=\"fn\">find_entity</a>(\n    &amp;self,\n    ctx: &amp;<a class=\"struct\" href=\"async_graphql/context/struct.ContextBase.html\" title=\"struct async_graphql::context::ContextBase\">ContextBase</a>&lt;'_, &amp;<a class=\"struct\" href=\"async_graphql_parser/pos/struct.Positioned.html\" title=\"struct async_graphql_parser::pos::Positioned\">Positioned</a>&lt;<a class=\"struct\" href=\"async_graphql_parser/types/executable/struct.Field.html\" title=\"struct async_graphql_parser::types::executable::Field\">Field</a>&gt;&gt;,\n    params: &amp;<a class=\"enum\" href=\"async_graphql_value/enum.ConstValue.html\" title=\"enum async_graphql_value::ConstValue\">ConstValue</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"async_graphql_value/enum.ConstValue.html\" title=\"enum async_graphql_value::ConstValue\">ConstValue</a>&gt;, <a class=\"struct\" href=\"async_graphql/error/struct.ServerError.html\" title=\"struct async_graphql::error::ServerError\">ServerError</a>&gt;</h4></section></summary><div class='docblock'>Find the GraphQL entity with the given name from the parameter. <a href=\"async_graphql/resolver_utils/container/trait.ContainerType.html#method.find_entity\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.collect_all_fields\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_graphql/resolver_utils/container.rs.html#45-51\">Source</a><a href=\"#method.collect_all_fields\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/resolver_utils/container/trait.ContainerType.html#method.collect_all_fields\" class=\"fn\">collect_all_fields</a>&lt;'a&gt;(\n    &amp;'a self,\n    ctx: &amp;<a class=\"struct\" href=\"async_graphql/context/struct.ContextBase.html\" title=\"struct async_graphql::context::ContextBase\">ContextBase</a>&lt;'a, &amp;'a <a class=\"struct\" href=\"async_graphql_parser/pos/struct.Positioned.html\" title=\"struct async_graphql_parser::pos::Positioned\">Positioned</a>&lt;<a class=\"struct\" href=\"async_graphql_parser/types/executable/struct.SelectionSet.html\" title=\"struct async_graphql_parser::types::executable::SelectionSet\">SelectionSet</a>&gt;&gt;,\n    fields: &amp;mut <a class=\"struct\" href=\"async_graphql/resolver_utils/container/struct.Fields.html\" title=\"struct async_graphql::resolver_utils::container::Fields\">Fields</a>&lt;'a&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"async_graphql/error/struct.ServerError.html\" title=\"struct async_graphql::error::ServerError\">ServerError</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h4></section></summary><div class='docblock'>Collect all the fields of the container that are queried in the\nselection set. <a href=\"async_graphql/resolver_utils/container/trait.ContainerType.html#method.collect_all_fields\">Read more</a></div></details></div></details>","ContainerType","linera_sdk::views::aliases::QueueView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-QueueView%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#51\">Source</a><a href=\"#impl-Debug-for-QueueView%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"linera_views/views/queue_view/struct.QueueView.html\" title=\"struct linera_views::views::queue_view::QueueView\">QueueView</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#51\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","linera_sdk::views::aliases::QueueView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-HashableView-for-QueueView%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#451-454\">Source</a><a href=\"#impl-HashableView-for-QueueView%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"linera_views/views/trait.HashableView.html\" title=\"trait linera_views::views::HashableView\">HashableView</a> for <a class=\"struct\" href=\"linera_views/views/queue_view/struct.QueueView.html\" title=\"struct linera_views::views::queue_view::QueueView\">QueueView</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"linera_views/context/trait.Context.html\" title=\"trait linera_views::context::Context\">Context</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Hasher\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#456\">Source</a><a href=\"#associatedtype.Hasher\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"linera_views/views/trait.HashableView.html#associatedtype.Hasher\" class=\"associatedtype\">Hasher</a> = <a class=\"struct\" href=\"digest/core_api/wrapper/struct.CoreWrapper.html\" title=\"struct digest::core_api::wrapper::CoreWrapper\">CoreWrapper</a>&lt;<a class=\"struct\" href=\"sha3/struct.Sha3_256Core.html\" title=\"struct sha3::Sha3_256Core\">Sha3_256Core</a>&gt;</h4></section></summary><div class='docblock'>How to compute hashes.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#458\">Source</a><a href=\"#method.hash_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"linera_views/views/trait.HashableView.html#tymethod.hash_mut\" class=\"fn\">hash_mut</a>(\n    &amp;mut self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;<a class=\"struct\" href=\"linera_views/views/queue_view/struct.QueueView.html\" title=\"struct linera_views::views::queue_view::QueueView\">QueueView</a>&lt;C, T&gt; as <a class=\"trait\" href=\"linera_views/views/trait.HashableView.html\" title=\"trait linera_views::views::HashableView\">HashableView</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/views/trait.HashableView.html#associatedtype.Hasher\" title=\"type linera_views::views::HashableView::Hasher\">Hasher</a> as <a class=\"trait\" href=\"linera_views/views/trait.Hasher.html\" title=\"trait linera_views::views::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/views/trait.Hasher.html#associatedtype.Output\" title=\"type linera_views::views::Hasher::Output\">Output</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class='docblock'>Same as <code>hash</code> but guaranteed to be wait-free.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#462\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"linera_views/views/trait.HashableView.html#tymethod.hash\" class=\"fn\">hash</a>(\n    &amp;self,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;&lt;<a class=\"struct\" href=\"linera_views/views/queue_view/struct.QueueView.html\" title=\"struct linera_views::views::queue_view::QueueView\">QueueView</a>&lt;C, T&gt; as <a class=\"trait\" href=\"linera_views/views/trait.HashableView.html\" title=\"trait linera_views::views::HashableView\">HashableView</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/views/trait.HashableView.html#associatedtype.Hasher\" title=\"type linera_views::views::HashableView::Hasher\">Hasher</a> as <a class=\"trait\" href=\"linera_views/views/trait.Hasher.html\" title=\"trait linera_views::views::Hasher\">Hasher</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/views/trait.Hasher.html#associatedtype.Output\" title=\"type linera_views::views::Hasher::Output\">Output</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class='docblock'>Computes the hash of the values. <a href=\"linera_views/views/trait.HashableView.html#tymethod.hash\">Read more</a></div></details></div></details>","HashableView","linera_sdk::views::aliases::QueueView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputType-for-QueueView%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#499\">Source</a><a href=\"#impl-OutputType-for-QueueView%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"async_graphql/base/trait.OutputType.html\" title=\"trait async_graphql::base::OutputType\">OutputType</a> for <a class=\"struct\" href=\"linera_views/views/queue_view/struct.QueueView.html\" title=\"struct linera_views::views::queue_view::QueueView\">QueueView</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"linera_views/context/trait.Context.html\" title=\"trait linera_views::context::Context\">Context</a>,\n    T: <a class=\"trait\" href=\"async_graphql/base/trait.OutputType.html\" title=\"trait async_graphql::base::OutputType\">OutputType</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#499\">Source</a><a href=\"#method.type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.OutputType.html#tymethod.type_name\" class=\"fn\">type_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Type the name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#499\">Source</a><a href=\"#method.create_type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.OutputType.html#tymethod.create_type_info\" class=\"fn\">create_type_info</a>(registry: &amp;mut Registry) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Create type information in the registry and return qualified typename.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#499\">Source</a><a href=\"#method.resolve\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"async_graphql/base/trait.OutputType.html#tymethod.resolve\" class=\"fn\">resolve</a>(\n    &amp;self,\n    ctx: &amp;<a class=\"struct\" href=\"async_graphql/context/struct.ContextBase.html\" title=\"struct async_graphql::context::ContextBase\">ContextBase</a>&lt;'_, &amp;<a class=\"struct\" href=\"async_graphql_parser/pos/struct.Positioned.html\" title=\"struct async_graphql_parser::pos::Positioned\">Positioned</a>&lt;<a class=\"struct\" href=\"async_graphql_parser/types/executable/struct.SelectionSet.html\" title=\"struct async_graphql_parser::types::executable::SelectionSet\">SelectionSet</a>&gt;&gt;,\n    _field: &amp;<a class=\"struct\" href=\"async_graphql_parser/pos/struct.Positioned.html\" title=\"struct async_graphql_parser::pos::Positioned\">Positioned</a>&lt;<a class=\"struct\" href=\"async_graphql_parser/types/executable/struct.Field.html\" title=\"struct async_graphql_parser::types::executable::Field\">Field</a>&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"async_graphql_value/enum.ConstValue.html\" title=\"enum async_graphql_value::ConstValue\">ConstValue</a>, <a class=\"struct\" href=\"async_graphql/error/struct.ServerError.html\" title=\"struct async_graphql::error::ServerError\">ServerError</a>&gt;</h4></section></summary><div class='docblock'>Resolve an output value to <code>async_graphql::Value</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.qualified_type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_graphql/base.rs.html#74\">Source</a><a href=\"#method.qualified_type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.OutputType.html#method.qualified_type_name\" class=\"fn\">qualified_type_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Qualified typename.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.introspection_type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_graphql/base.rs.html#82\">Source</a><a href=\"#method.introspection_type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.OutputType.html#method.introspection_type_name\" class=\"fn\">introspection_type_name</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Introspection type name <a href=\"async_graphql/base/trait.OutputType.html#method.introspection_type_name\">Read more</a></div></details></div></details>","OutputType","linera_sdk::views::aliases::QueueView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-QueueView%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#179-182\">Source</a><a href=\"#impl-QueueView%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, C, T&gt; <a class=\"struct\" href=\"linera_views/views/queue_view/struct.QueueView.html\" title=\"struct linera_views::views::queue_view::QueueView\">QueueView</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"linera_views/context/trait.Context.html\" title=\"trait linera_views::context::Context\">Context</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.front\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#205\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/views/queue_view/struct.QueueView.html#tymethod.front\" class=\"fn\">front</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Reads the front value, if any.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>queue = QueueView::load(context).<span class=\"kw\">await</span>.unwrap();\nqueue.push_back(<span class=\"number\">34</span>);\nqueue.push_back(<span class=\"number\">42</span>);\n<span class=\"macro\">assert_eq!</span>(queue.front().<span class=\"kw\">await</span>.unwrap(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">34</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.back\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#228\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/views/queue_view/struct.QueueView.html#tymethod.back\" class=\"fn\">back</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;T&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Reads the back value, if any.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>queue = QueueView::load(context).<span class=\"kw\">await</span>.unwrap();\nqueue.push_back(<span class=\"number\">34</span>);\nqueue.push_back(<span class=\"number\">42</span>);\n<span class=\"macro\">assert_eq!</span>(queue.back().<span class=\"kw\">await</span>.unwrap(), <span class=\"prelude-val\">Some</span>(<span class=\"number\">42</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.delete_front\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#249\">Source</a><h4 class=\"code-header\">pub fn <a href=\"linera_views/views/queue_view/struct.QueueView.html#tymethod.delete_front\" class=\"fn\">delete_front</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Deletes the front value, if any.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>queue = QueueView::load(context).<span class=\"kw\">await</span>.unwrap();\nqueue.push_back(<span class=\"number\">34 </span><span class=\"kw\">as </span>u128);\nqueue.delete_front();\n<span class=\"macro\">assert_eq!</span>(queue.elements().<span class=\"kw\">await</span>.unwrap(), Vec::&lt;u128&gt;::new());</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_back\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#270\">Source</a><h4 class=\"code-header\">pub fn <a href=\"linera_views/views/queue_view/struct.QueueView.html#tymethod.push_back\" class=\"fn\">push_back</a>(&amp;mut self, value: T)</h4></section></summary><div class=\"docblock\"><p>Pushes a value to the end of the queue.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>queue = QueueView::load(context).<span class=\"kw\">await</span>.unwrap();\nqueue.push_back(<span class=\"number\">34</span>);\nqueue.push_back(<span class=\"number\">37</span>);\n<span class=\"macro\">assert_eq!</span>(queue.elements().<span class=\"kw\">await</span>.unwrap(), <span class=\"macro\">vec!</span>[<span class=\"number\">34</span>, <span class=\"number\">37</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.count\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#286\">Source</a><h4 class=\"code-header\">pub fn <a href=\"linera_views/views/queue_view/struct.QueueView.html#tymethod.count\" class=\"fn\">count</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Reads the size of the queue.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>queue = QueueView::load(context).<span class=\"kw\">await</span>.unwrap();\nqueue.push_back(<span class=\"number\">34</span>);\n<span class=\"macro\">assert_eq!</span>(queue.count(), <span class=\"number\">1</span>);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.extra\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#291\">Source</a><h4 class=\"code-header\">pub fn <a href=\"linera_views/views/queue_view/struct.QueueView.html#tymethod.extra\" class=\"fn\">extra</a>(&amp;self) -&gt; &amp;&lt;C as <a class=\"trait\" href=\"linera_views/context/trait.Context.html\" title=\"trait linera_views::context::Context\">Context</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/context/trait.Context.html#associatedtype.Extra\" title=\"type linera_views::context::Context::Extra\">Extra</a></h4></section></summary><div class=\"docblock\"><p>Obtains the extra data.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_front\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#330\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/views/queue_view/struct.QueueView.html#tymethod.read_front\" class=\"fn\">read_front</a>(&amp;self, count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Reads the <code>count</code> next values in the queue (including staged ones).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>queue = QueueView::load(context).<span class=\"kw\">await</span>.unwrap();\nqueue.push_back(<span class=\"number\">34</span>);\nqueue.push_back(<span class=\"number\">42</span>);\n<span class=\"macro\">assert_eq!</span>(queue.read_front(<span class=\"number\">1</span>).<span class=\"kw\">await</span>.unwrap(), <span class=\"macro\">vec!</span>[<span class=\"number\">34</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_back\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#370\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/views/queue_view/struct.QueueView.html#tymethod.read_back\" class=\"fn\">read_back</a>(&amp;self, count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Reads the <code>count</code> last values in the queue (including staged ones).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>queue = QueueView::load(context).<span class=\"kw\">await</span>.unwrap();\nqueue.push_back(<span class=\"number\">34</span>);\nqueue.push_back(<span class=\"number\">42</span>);\n<span class=\"macro\">assert_eq!</span>(queue.read_back(<span class=\"number\">1</span>).<span class=\"kw\">await</span>.unwrap(), <span class=\"macro\">vec!</span>[<span class=\"number\">42</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.elements\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#406\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/views/queue_view/struct.QueueView.html#tymethod.elements\" class=\"fn\">elements</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;T&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Reads all the elements</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>queue = QueueView::load(context).<span class=\"kw\">await</span>.unwrap();\nqueue.push_back(<span class=\"number\">34</span>);\nqueue.push_back(<span class=\"number\">37</span>);\n<span class=\"macro\">assert_eq!</span>(queue.elements().<span class=\"kw\">await</span>.unwrap(), <span class=\"macro\">vec!</span>[<span class=\"number\">34</span>, <span class=\"number\">37</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#445\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_views/views/queue_view/struct.QueueView.html#tymethod.iter_mut\" class=\"fn\">iter_mut</a>(&amp;'a mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/collections/vec_deque/iter_mut/struct.IterMut.html\" title=\"struct alloc::collections::vec_deque::iter_mut::IterMut\">IterMut</a>&lt;'a, T&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Gets a mutable iterator on the entries of the queue</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">let </span><span class=\"kw-2\">mut </span>queue = QueueView::load(context).<span class=\"kw\">await</span>.unwrap();\nqueue.push_back(<span class=\"number\">34</span>);\n<span class=\"kw\">let </span><span class=\"kw-2\">mut </span>iter = queue.iter_mut().<span class=\"kw\">await</span>.unwrap();\n<span class=\"kw\">let </span>value = iter.next().unwrap();\n<span class=\"kw-2\">*</span>value = <span class=\"number\">42</span>;\n<span class=\"macro\">assert_eq!</span>(queue.elements().<span class=\"kw\">await</span>.unwrap(), <span class=\"macro\">vec!</span>[<span class=\"number\">42</span>]);</code></pre></div>\n</div></details></div></details>",0,"linera_sdk::views::aliases::QueueView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeName-for-QueueView%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#488\">Source</a><a href=\"#impl-TypeName-for-QueueView%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"async_graphql/base/trait.TypeName.html\" title=\"trait async_graphql::base::TypeName\">TypeName</a> for <a class=\"struct\" href=\"linera_views/views/queue_view/struct.QueueView.html\" title=\"struct linera_views::views::queue_view::QueueView\">QueueView</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    T: <a class=\"trait\" href=\"async_graphql/base/trait.OutputType.html\" title=\"trait async_graphql::base::OutputType\">OutputType</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#489\">Source</a><a href=\"#method.type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.TypeName.html#tymethod.type_name\" class=\"fn\">type_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Returns a GraphQL type name.</div></details></div></details>","TypeName","linera_sdk::views::aliases::QueueView"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-View-for-QueueView%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#60-63\">Source</a><a href=\"#impl-View-for-QueueView%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"linera_sdk/views/trait.View.html\" title=\"trait linera_sdk::views::View\">View</a> for <a class=\"struct\" href=\"linera_views/views/queue_view/struct.QueueView.html\" title=\"struct linera_views::views::queue_view::QueueView\">QueueView</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"linera_views/context/trait.Context.html\" title=\"trait linera_views::context::Context\">Context</a>,\n    T: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.NUM_INIT_KEYS\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#65\">Source</a><a href=\"#associatedconstant.NUM_INIT_KEYS\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"linera_sdk/views/trait.View.html#associatedconstant.NUM_INIT_KEYS\" class=\"constant\">NUM_INIT_KEYS</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a> = 1usize</h4></section></summary><div class='docblock'>The number of keys used for the initialization</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Context\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#67\">Source</a><a href=\"#associatedtype.Context\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"linera_sdk/views/trait.View.html#associatedtype.Context\" class=\"associatedtype\">Context</a> = C</h4></section></summary><div class='docblock'>The type of context stored in this view</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.context\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#69\">Source</a><a href=\"#method.context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.context\" class=\"fn\">context</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;C</a></h4></section></summary><div class='docblock'>Obtains a mutable reference to the internal context.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pre_load\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#73\">Source</a><a href=\"#method.pre_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.pre_load\" class=\"fn\">pre_load</a>(context: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;C</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class='docblock'>Creates the keys needed for loading the view</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.post_load\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#77\">Source</a><a href=\"#method.post_load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.post_load\" class=\"fn\">post_load</a>(\n    context: C,\n    values: &amp;[<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;&gt;],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linera_views/views/queue_view/struct.QueueView.html\" title=\"struct linera_views::views::queue_view::QueueView\">QueueView</a>&lt;C, T&gt;, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class='docblock'>Loads a view from the values</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.rollback\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#89\">Source</a><a href=\"#method.rollback\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.rollback\" class=\"fn\">rollback</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Discards all pending changes. After that <code>flush</code> should have no effect to storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.has_pending_changes\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#95\">Source</a><a href=\"#method.has_pending_changes\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"linera_sdk/views/trait.View.html#tymethod.has_pending_changes\" class=\"fn\">has_pending_changes</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <a href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\" title=\"primitive bool\"><code>true</code></a> if flushing this view would result in changes to the persistent storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.flush\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#105\">Source</a><a href=\"#method.flush\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.flush\" class=\"fn\">flush</a>(&amp;mut self, batch: &amp;mut <a class=\"struct\" href=\"linera_views/batch/struct.Batch.html\" title=\"struct linera_views::batch::Batch\">Batch</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class='docblock'>Persists changes to storage. This leaves the view still usable and is essentially neutral to the\nprogram running. Crash-resistant storage implementations are expected to accumulate the desired\nchanges in the <code>batch</code> variable first. If the view is dropped without calling <code>flush</code>, staged\nchanges are simply lost.\nThe returned boolean indicates whether the operation removes the view or not.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#147\">Source</a><a href=\"#method.clear\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#tymethod.clear\" class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Clears the view. That can be seen as resetting to default. If the clear is followed\nby a flush then all the relevant data is removed on the storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/mod.rs.html#56-74\">Source</a><a href=\"#method.load\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#method.load\" class=\"fn\">load</a>(\n    context: Self::<a class=\"associatedtype\" href=\"linera_sdk/views/trait.View.html#associatedtype.Context\" title=\"type linera_sdk::views::View::Context\">Context</a>,\n) -&gt; impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a></h4></section></summary><div class='docblock'>Loads a view</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_views/views/mod.rs.html#105\">Source</a><a href=\"#method.new\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_sdk/views/trait.View.html#method.new\" class=\"fn\">new</a>(context: Self::<a class=\"associatedtype\" href=\"linera_sdk/views/trait.View.html#associatedtype.Context\" title=\"type linera_sdk::views::View::Context\">Context</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"linera_sdk/views/enum.ViewError.html\" title=\"enum linera_sdk::views::ViewError\">ViewError</a>&gt;</h4></section></summary><div class='docblock'>Builds a trivial view that is already deleted</div></details></div></details>","View","linera_sdk::views::aliases::QueueView"],["<section id=\"impl-ObjectType-for-QueueView%3CC,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_views/views/queue_view.rs.html#499\">Source</a><a href=\"#impl-ObjectType-for-QueueView%3CC,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;C, T&gt; <a class=\"trait\" href=\"async_graphql/base/trait.ObjectType.html\" title=\"trait async_graphql::base::ObjectType\">ObjectType</a> for <a class=\"struct\" href=\"linera_views/views/queue_view/struct.QueueView.html\" title=\"struct linera_views::views::queue_view::QueueView\">QueueView</a>&lt;C, T&gt;<div class=\"where\">where\n    C: <a class=\"trait\" href=\"linera_views/context/trait.Context.html\" title=\"trait linera_views::context::Context\">Context</a>,\n    T: <a class=\"trait\" href=\"async_graphql/base/trait.OutputType.html\" title=\"trait async_graphql::base::OutputType\">OutputType</a> + <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> + <a class=\"trait\" href=\"serde/de/trait.DeserializeOwned.html\" title=\"trait serde::de::DeserializeOwned\">DeserializeOwned</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section>","ObjectType","linera_sdk::views::aliases::QueueView"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[53109]}