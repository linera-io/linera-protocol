(function() {
    var type_impls = Object.fromEntries([["octocrab",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Buffer%3CReq,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tower/buffer/service.rs.html#24-26\">Source</a><a href=\"#impl-Buffer%3CReq,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Req, F&gt; <a class=\"struct\" href=\"tower/buffer/service/struct.Buffer.html\" title=\"struct tower::buffer::service::Buffer\">Buffer</a>&lt;Req, F&gt;<div class=\"where\">where\n    F: 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/tower/buffer/service.rs.html#49-54\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tower/buffer/service/struct.Buffer.html#tymethod.new\" class=\"fn\">new</a>&lt;S&gt;(service: S, bound: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>) -&gt; <a class=\"struct\" href=\"tower/buffer/service/struct.Buffer.html\" title=\"struct tower::buffer::service::Buffer\">Buffer</a>&lt;Req, F&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;Req, Future = F&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    &lt;S as <a class=\"trait\" href=\"tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;Req&gt;&gt;::<a class=\"associatedtype\" href=\"tower_service/trait.Service.html#associatedtype.Error\" title=\"type tower_service::Service::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    Req: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"tower/buffer/service/struct.Buffer.html\" title=\"struct tower::buffer::service::Buffer\"><code>Buffer</code></a> wrapping <code>service</code>.</p>\n<p><code>bound</code> gives the maximal number of requests that can be queued for the service before\nbackpressure is applied to callers.</p>\n<p>The default Tokio executor is used to run the given service, which means that this method\nmust be called while on the Tokio runtime.</p>\n<h5 id=\"a-note-on-choosing-a-bound\"><a class=\"doc-anchor\" href=\"#a-note-on-choosing-a-bound\">§</a>A note on choosing a <code>bound</code></h5>\n<p>When <a href=\"tower/buffer/service/struct.Buffer.html\" title=\"struct tower::buffer::service::Buffer\"><code>Buffer</code></a>’s implementation of <a href=\"tower_service/trait.Service.html#tymethod.poll_ready\" title=\"method tower_service::Service::poll_ready\"><code>poll_ready</code></a> returns <a href=\"https://doc.rust-lang.org/1.86.0/core/task/poll/enum.Poll.html#variant.Ready\" title=\"variant core::task::poll::Poll::Ready\"><code>Poll::Ready</code></a>, it reserves a\nslot in the channel for the forthcoming <a href=\"tower_service/trait.Service.html#tymethod.call\" title=\"method tower_service::Service::call\"><code>call</code></a>. However, if this call doesn’t arrive,\nthis reserved slot may be held up for a long time. As a result, it’s advisable to set\n<code>bound</code> to be at least the maximum number of concurrent requests the <a href=\"tower/buffer/service/struct.Buffer.html\" title=\"struct tower::buffer::service::Buffer\"><code>Buffer</code></a> will see.\nIf you do not, all the slots in the buffer may be held up by futures that have just called\n<a href=\"tower_service/trait.Service.html#tymethod.poll_ready\" title=\"method tower_service::Service::poll_ready\"><code>poll_ready</code></a> but will not issue a <a href=\"tower_service/trait.Service.html#tymethod.call\" title=\"method tower_service::Service::call\"><code>call</code></a>, which prevents other senders from issuing new\nrequests.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pair\" class=\"method\"><a class=\"src rightside\" href=\"src/tower/buffer/service.rs.html#66-71\">Source</a><h4 class=\"code-header\">pub fn <a href=\"tower/buffer/service/struct.Buffer.html#tymethod.pair\" class=\"fn\">pair</a>&lt;S&gt;(service: S, bound: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>) -&gt; (<a class=\"struct\" href=\"tower/buffer/service/struct.Buffer.html\" title=\"struct tower::buffer::service::Buffer\">Buffer</a>&lt;Req, F&gt;, Worker&lt;S, Req&gt;)<div class=\"where\">where\n    S: <a class=\"trait\" href=\"tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;Req, Future = F&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    &lt;S as <a class=\"trait\" href=\"tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;Req&gt;&gt;::<a class=\"associatedtype\" href=\"tower_service/trait.Service.html#associatedtype.Error\" title=\"type tower_service::Service::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,\n    Req: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h4></section></summary><div class=\"docblock\"><p>Creates a new <a href=\"tower/buffer/service/struct.Buffer.html\" title=\"struct tower::buffer::service::Buffer\"><code>Buffer</code></a> wrapping <code>service</code>, but returns the background worker.</p>\n<p>This is useful if you do not want to spawn directly onto the tokio runtime\nbut instead want to use your own executor. This will return the <a href=\"tower/buffer/service/struct.Buffer.html\" title=\"struct tower::buffer::service::Buffer\"><code>Buffer</code></a> and\nthe background <code>Worker</code> that you can then spawn.</p>\n</div></details></div></details>",0,"octocrab::OctocrabService"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Buffer%3CReq,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tower/buffer/service.rs.html#133-136\">Source</a><a href=\"#impl-Clone-for-Buffer%3CReq,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Req, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"tower/buffer/service/struct.Buffer.html\" title=\"struct tower::buffer::service::Buffer\">Buffer</a>&lt;Req, F&gt;<div class=\"where\">where\n    Req: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tower/buffer/service.rs.html#138\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"tower/buffer/service/struct.Buffer.html\" title=\"struct tower::buffer::service::Buffer\">Buffer</a>&lt;Req, F&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","octocrab::OctocrabService"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Buffer%3CReq,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tower/buffer/service.rs.html#18\">Source</a><a href=\"#impl-Debug-for-Buffer%3CReq,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Req, F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"tower/buffer/service/struct.Buffer.html\" title=\"struct tower::buffer::service::Buffer\">Buffer</a>&lt;Req, F&gt;<div class=\"where\">where\n    Req: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tower/buffer/service.rs.html#18\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","octocrab::OctocrabService"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Service%3CReq%3E-for-Buffer%3CReq,+F%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/tower/buffer/service.rs.html#87-91\">Source</a><a href=\"#impl-Service%3CReq%3E-for-Buffer%3CReq,+F%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Req, Rsp, F, E&gt; <a class=\"trait\" href=\"tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;Req&gt; for <a class=\"struct\" href=\"tower/buffer/service/struct.Buffer.html\" title=\"struct tower::buffer::service::Buffer\">Buffer</a>&lt;Req, F&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Rsp, E&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;&gt;,\n    Req: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'static,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Response\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/tower/buffer/service.rs.html#93\">Source</a><a href=\"#associatedtype.Response\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"tower_service/trait.Service.html#associatedtype.Response\" class=\"associatedtype\">Response</a> = Rsp</h4></section></summary><div class='docblock'>Responses given by the service.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/tower/buffer/service.rs.html#94\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"tower_service/trait.Service.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt;</h4></section></summary><div class='docblock'>Errors produced by the service.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Future\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/tower/buffer/service.rs.html#95\">Source</a><a href=\"#associatedtype.Future\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"tower_service/trait.Service.html#associatedtype.Future\" class=\"associatedtype\">Future</a> = <a class=\"struct\" href=\"tower/buffer/future/struct.ResponseFuture.html\" title=\"struct tower::buffer::future::ResponseFuture\">ResponseFuture</a>&lt;F&gt;</h4></section></summary><div class='docblock'>The future response value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poll_ready\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tower/buffer/service.rs.html#97\">Source</a><a href=\"#method.poll_ready\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"tower_service/trait.Service.html#tymethod.poll_ready\" class=\"fn\">poll_ready</a>(\n    &amp;mut self,\n    cx: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/task/wake/struct.Context.html\" title=\"struct core::task::wake::Context\">Context</a>&lt;'_&gt;,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/task/poll/enum.Poll.html\" title=\"enum core::task::poll::Poll\">Poll</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, &lt;<a class=\"struct\" href=\"tower/buffer/service/struct.Buffer.html\" title=\"struct tower::buffer::service::Buffer\">Buffer</a>&lt;Req, F&gt; as <a class=\"trait\" href=\"tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;Req&gt;&gt;::<a class=\"associatedtype\" href=\"tower_service/trait.Service.html#associatedtype.Error\" title=\"type tower_service::Service::Error\">Error</a>&gt;&gt;</h4></section></summary><div class='docblock'>Returns <code>Poll::Ready(Ok(()))</code> when the service is able to process requests. <a href=\"tower_service/trait.Service.html#tymethod.poll_ready\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.call\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/tower/buffer/service.rs.html#110\">Source</a><a href=\"#method.call\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"tower_service/trait.Service.html#tymethod.call\" class=\"fn\">call</a>(&amp;mut self, request: Req) -&gt; &lt;<a class=\"struct\" href=\"tower/buffer/service/struct.Buffer.html\" title=\"struct tower::buffer::service::Buffer\">Buffer</a>&lt;Req, F&gt; as <a class=\"trait\" href=\"tower_service/trait.Service.html\" title=\"trait tower_service::Service\">Service</a>&lt;Req&gt;&gt;::<a class=\"associatedtype\" href=\"tower_service/trait.Service.html#associatedtype.Future\" title=\"type tower_service::Service::Future\">Future</a></h4></section></summary><div class='docblock'>Process the request and return the response asynchronously. <a href=\"tower_service/trait.Service.html#tymethod.call\">Read more</a></div></details></div></details>","Service<Req>","octocrab::OctocrabService"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[19866]}