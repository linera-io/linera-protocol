(function() {
    var type_impls = Object.fromEntries([["linera_base",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Secp256k1Signature\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#63\">Source</a><a href=\"#impl-Clone-for-Secp256k1Signature\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#63\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","linera_base::crypto::ValidatorSignature"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Secp256k1Signature\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#466-470\">Source</a><a href=\"#impl-Debug-for-Secp256k1Signature\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#467-469\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","linera_base::crypto::ValidatorSignature"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Secp256k1Signature\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#439-457\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-Secp256k1Signature\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#440-456\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(deserializer: D) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, D::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","linera_base::crypto::ValidatorSignature"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Secp256k1Signature\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#459-464\">Source</a><a href=\"#impl-Display-for-Secp256k1Signature\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#460-463\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","linera_base::crypto::ValidatorSignature"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-InputType-for-Secp256k1Signature\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#472\">Source</a><a href=\"#impl-InputType-for-Secp256k1Signature\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"async_graphql/base/trait.InputType.html\" title=\"trait async_graphql::base::InputType\">InputType</a> for <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.RawValueType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#472\">Source</a><a href=\"#associatedtype.RawValueType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"async_graphql/base/trait.InputType.html#associatedtype.RawValueType\" class=\"associatedtype\">RawValueType</a> = <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h4></section></summary><div class='docblock'>The raw type used for validator. <a href=\"async_graphql/base/trait.InputType.html#associatedtype.RawValueType\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#472\">Source</a><a href=\"#method.type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.InputType.html#tymethod.type_name\" class=\"fn\">type_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Type the name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#472\">Source</a><a href=\"#method.create_type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.InputType.html#tymethod.create_type_info\" class=\"fn\">create_type_info</a>(registry: &amp;mut Registry) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Create type information in the registry and return qualified typename.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#472\">Source</a><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.InputType.html#tymethod.parse\" class=\"fn\">parse</a>(value: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"async_graphql_value/enum.ConstValue.html\" title=\"enum async_graphql_value::ConstValue\">Value</a>&gt;) -&gt; <a class=\"type\" href=\"async_graphql/error/type.InputValueResult.html\" title=\"type async_graphql::error::InputValueResult\">InputValueResult</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Parse from <code>Value</code>. None represents undefined.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#472\">Source</a><a href=\"#method.to_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.InputType.html#tymethod.to_value\" class=\"fn\">to_value</a>(&amp;self) -&gt; <a class=\"enum\" href=\"async_graphql_value/enum.ConstValue.html\" title=\"enum async_graphql_value::ConstValue\">Value</a></h4></section></summary><div class='docblock'>Convert to a <code>Value</code> for introspection.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_raw_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#472\">Source</a><a href=\"#method.as_raw_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.InputType.html#tymethod.as_raw_value\" class=\"fn\">as_raw_value</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;Self::<a class=\"associatedtype\" href=\"async_graphql/base/trait.InputType.html#associatedtype.RawValueType\" title=\"type async_graphql::base::InputType::RawValueType\">RawValueType</a>&gt;</h4></section></summary><div class='docblock'>Returns a reference to the raw value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.qualified_type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_graphql/base.rs.html#44\">Source</a><a href=\"#method.qualified_type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.InputType.html#method.qualified_type_name\" class=\"fn\">qualified_type_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Qualified typename.</div></details></div></details>","InputType","linera_base::crypto::ValidatorSignature"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-OutputType-for-Secp256k1Signature\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#472\">Source</a><a href=\"#impl-OutputType-for-Secp256k1Signature\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"async_graphql/base/trait.OutputType.html\" title=\"trait async_graphql::base::OutputType\">OutputType</a> for <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#472\">Source</a><a href=\"#method.type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.OutputType.html#tymethod.type_name\" class=\"fn\">type_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Type the name.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_type_info\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#472\">Source</a><a href=\"#method.create_type_info\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.OutputType.html#tymethod.create_type_info\" class=\"fn\">create_type_info</a>(registry: &amp;mut Registry) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Create type information in the registry and return qualified typename.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.resolve\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#472\">Source</a><a href=\"#method.resolve\" class=\"anchor\">§</a><h4 class=\"code-header\">async fn <a href=\"async_graphql/base/trait.OutputType.html#tymethod.resolve\" class=\"fn\">resolve</a>(\n    &amp;self,\n    _: &amp;<a class=\"type\" href=\"async_graphql/context/type.ContextSelectionSet.html\" title=\"type async_graphql::context::ContextSelectionSet\">ContextSelectionSet</a>&lt;'_&gt;,\n    _field: &amp;<a class=\"struct\" href=\"async_graphql_parser/pos/struct.Positioned.html\" title=\"struct async_graphql_parser::pos::Positioned\">Positioned</a>&lt;<a class=\"struct\" href=\"async_graphql_parser/types/executable/struct.Field.html\" title=\"struct async_graphql_parser::types::executable::Field\">Field</a>&gt;,\n) -&gt; <a class=\"type\" href=\"async_graphql/error/type.ServerResult.html\" title=\"type async_graphql::error::ServerResult\">ServerResult</a>&lt;<a class=\"enum\" href=\"async_graphql_value/enum.ConstValue.html\" title=\"enum async_graphql_value::ConstValue\">Value</a>&gt;</h4></section></summary><div class='docblock'>Resolve an output value to <code>async_graphql::Value</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.qualified_type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_graphql/base.rs.html#74\">Source</a><a href=\"#method.qualified_type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.OutputType.html#method.qualified_type_name\" class=\"fn\">qualified_type_name</a>() -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class='docblock'>Qualified typename.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.introspection_type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_graphql/base.rs.html#82\">Source</a><a href=\"#method.introspection_type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/base/trait.OutputType.html#method.introspection_type_name\" class=\"fn\">introspection_type_name</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class='docblock'>Introspection type name <a href=\"async_graphql/base/trait.OutputType.html#method.introspection_type_name\">Read more</a></div></details></div></details>","OutputType","linera_base::crypto::ValidatorSignature"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Secp256k1Signature\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#63\">Source</a><a href=\"#impl-PartialEq-for-Secp256k1Signature\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#63\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","linera_base::crypto::ValidatorSignature"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ScalarType-for-Secp256k1Signature\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#472\">Source</a><a href=\"#impl-ScalarType-for-Secp256k1Signature\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"async_graphql/resolver_utils/scalar/trait.ScalarType.html\" title=\"trait async_graphql::resolver_utils::scalar::ScalarType\">ScalarType</a> for <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#472\">Source</a><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/resolver_utils/scalar/trait.ScalarType.html#tymethod.parse\" class=\"fn\">parse</a>(value: <a class=\"enum\" href=\"async_graphql_value/enum.ConstValue.html\" title=\"enum async_graphql_value::ConstValue\">Value</a>) -&gt; <a class=\"type\" href=\"async_graphql/error/type.InputValueResult.html\" title=\"type async_graphql::error::InputValueResult\">InputValueResult</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Parse a scalar value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#472\">Source</a><a href=\"#method.to_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/resolver_utils/scalar/trait.ScalarType.html#tymethod.to_value\" class=\"fn\">to_value</a>(&amp;self) -&gt; <a class=\"enum\" href=\"async_graphql_value/enum.ConstValue.html\" title=\"enum async_graphql_value::ConstValue\">Value</a></h4></section></summary><div class='docblock'>Convert the scalar to <code>Value</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_valid\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/async_graphql/resolver_utils/scalar.rs.html#38\">Source</a><a href=\"#method.is_valid\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"async_graphql/resolver_utils/scalar/trait.ScalarType.html#method.is_valid\" class=\"fn\">is_valid</a>(_value: &amp;<a class=\"enum\" href=\"async_graphql_value/enum.ConstValue.html\" title=\"enum async_graphql_value::ConstValue\">ConstValue</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Checks for a valid scalar value. <a href=\"async_graphql/resolver_utils/scalar/trait.ScalarType.html#method.is_valid\">Read more</a></div></details></div></details>","ScalarType","linera_base::crypto::ValidatorSignature"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Secp256k1Signature\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#347-423\">Source</a><a href=\"#impl-Secp256k1Signature\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#350-355\">Source</a><h4 class=\"code-header\">pub fn <a href=\"linera_base/crypto/struct.Secp256k1Signature.html#tymethod.new\" class=\"fn\">new</a>&lt;'de, T&gt;(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;T</a>, secret: &amp;<a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1SecretKey.html\" title=\"struct linera_base::crypto::Secp256k1SecretKey\">Secp256k1SecretKey</a>) -&gt; Self<div class=\"where\">where\n    T: <a class=\"trait\" href=\"linera_base/crypto/trait.BcsSignable.html\" title=\"trait linera_base::crypto::BcsSignable\">BcsSignable</a>&lt;'de&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Computes a secp256k1 signature for <code>value</code> using the given <code>secret</code>.\nIt first serializes the <code>T</code> type and then creates the <code>CryptoHash</code> from the serialized bytes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sign_prehash\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#358-366\">Source</a><h4 class=\"code-header\">pub fn <a href=\"linera_base/crypto/struct.Secp256k1Signature.html#tymethod.sign_prehash\" class=\"fn\">sign_prehash</a>(secret: &amp;<a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1SecretKey.html\" title=\"struct linera_base::crypto::Secp256k1SecretKey\">Secp256k1SecretKey</a>, prehash: <a class=\"struct\" href=\"linera_base/crypto/struct.CryptoHash.html\" title=\"struct linera_base::crypto::CryptoHash\">CryptoHash</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Computes a signature from a prehash.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#369-375\">Source</a><h4 class=\"code-header\">pub fn <a href=\"linera_base/crypto/struct.Secp256k1Signature.html#tymethod.check\" class=\"fn\">check</a>&lt;'de, T&gt;(\n    &amp;self,\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;T</a>,\n    author: <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1PublicKey.html\" title=\"struct linera_base::crypto::Secp256k1PublicKey\">Secp256k1PublicKey</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_base/crypto/enum.CryptoError.html\" title=\"enum linera_base::crypto::CryptoError\">CryptoError</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"linera_base/crypto/trait.BcsSignable.html\" title=\"trait linera_base::crypto::BcsSignable\">BcsSignable</a>&lt;'de&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h4></section></summary><div class=\"docblock\"><p>Checks a signature.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.verify_batch\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#380-390\">Source</a><h4 class=\"code-header\">pub fn <a href=\"linera_base/crypto/struct.Secp256k1Signature.html#tymethod.verify_batch\" class=\"fn\">verify_batch</a>&lt;'a, 'de, T, I&gt;(\n    value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;'a T</a>,\n    votes: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_base/crypto/enum.CryptoError.html\" title=\"enum linera_base::crypto::CryptoError\">CryptoError</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"linera_base/crypto/trait.BcsSignable.html\" title=\"trait linera_base::crypto::BcsSignable\">BcsSignable</a>&lt;'de&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = &amp;'a (<a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1PublicKey.html\" title=\"struct linera_base::crypto::Secp256k1PublicKey\">Secp256k1PublicKey</a>, <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a>)&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Verifies a batch of signatures.</p>\n<p>Returns an error on first failed signature.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_bytes\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#393-395\">Source</a><h4 class=\"code-header\">pub fn <a href=\"linera_base/crypto/struct.Secp256k1Signature.html#tymethod.as_bytes\" class=\"fn\">as_bytes</a>(&amp;self) -&gt; [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.array.html\">64</a>]</h4></section></summary><div class=\"docblock\"><p>Returns the byte representation of the signature.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_slice\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#418-422\">Source</a><h4 class=\"code-header\">pub fn <a href=\"linera_base/crypto/struct.Secp256k1Signature.html#tymethod.from_slice\" class=\"fn\">from_slice</a>&lt;A: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]&gt;&gt;(bytes: A) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"linera_base/crypto/enum.CryptoError.html\" title=\"enum linera_base::crypto::CryptoError\">CryptoError</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a signature from the bytes.\nExpects the signature to be serialized in raw-bytes form.</p>\n</div></details></div></details>",0,"linera_base::crypto::ValidatorSignature"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Secp256k1Signature\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#425-437\">Source</a><a href=\"#impl-Serialize-for-Secp256k1Signature\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#426-436\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","linera_base::crypto::ValidatorSignature"],["<section id=\"impl-Copy-for-Secp256k1Signature\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#63\">Source</a><a href=\"#impl-Copy-for-Secp256k1Signature\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h3></section>","Copy","linera_base::crypto::ValidatorSignature"],["<section id=\"impl-Eq-for-Secp256k1Signature\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#63\">Source</a><a href=\"#impl-Eq-for-Secp256k1Signature\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h3></section>","Eq","linera_base::crypto::ValidatorSignature"],["<section id=\"impl-StructuralPartialEq-for-Secp256k1Signature\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_base/crypto/secp256k1/mod.rs.html#63\">Source</a><a href=\"#impl-StructuralPartialEq-for-Secp256k1Signature\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"linera_base/crypto/struct.Secp256k1Signature.html\" title=\"struct linera_base::crypto::Secp256k1Signature\">Secp256k1Signature</a></h3></section>","StructuralPartialEq","linera_base::crypto::ValidatorSignature"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[35581]}