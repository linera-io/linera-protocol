(function() {
    var type_impls = Object.fromEntries([["postcard",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllocVec\" class=\"impl\"><a class=\"src rightside\" href=\"src/postcard/ser/flavors.rs.html#455-461\">Source</a><a href=\"#impl-AllocVec\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"struct\" href=\"postcard/ser_flavors/struct.AllocVec.html\" title=\"struct postcard::ser_flavors::AllocVec\">AllocVec</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/postcard/ser/flavors.rs.html#458-460\">Source</a><h4 class=\"code-header\">pub fn <a href=\"postcard/ser_flavors/struct.AllocVec.html#tymethod.new\" class=\"fn\">new</a>() -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Create a new, currently empty, <a href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\"><code>alloc::vec::Vec</code></a> to be used for storing serialized\noutput data.</p>\n</div></details></div></details>",0,"postcard::ser::flavors::std_vec::StdVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-AllocVec\" class=\"impl\"><a class=\"src rightside\" href=\"src/postcard/ser/flavors.rs.html#449\">Source</a><a href=\"#impl-Default-for-AllocVec\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for <a class=\"struct\" href=\"postcard/ser_flavors/struct.AllocVec.html\" title=\"struct postcard::ser_flavors::AllocVec\">AllocVec</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/postcard/ser/flavors.rs.html#449\">Source</a><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; <a class=\"struct\" href=\"postcard/ser_flavors/struct.AllocVec.html\" title=\"struct postcard::ser_flavors::AllocVec\">AllocVec</a></h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","postcard::ser::flavors::std_vec::StdVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Flavor-for-AllocVec\" class=\"impl\"><a class=\"src rightside\" href=\"src/postcard/ser/flavors.rs.html#463-481\">Source</a><a href=\"#impl-Flavor-for-AllocVec\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"postcard/ser_flavors/trait.Flavor.html\" title=\"trait postcard::ser_flavors::Flavor\">Flavor</a> for <a class=\"struct\" href=\"postcard/ser_flavors/struct.AllocVec.html\" title=\"struct postcard::ser_flavors::AllocVec\">AllocVec</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/postcard/ser/flavors.rs.html#464\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"postcard/ser_flavors/trait.Flavor.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;</h4></section></summary><div class='docblock'>The <code>Output</code> type is what this storage “resolves” to when the serialization is complete,\nsuch as a slice or a Vec of some sort.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_extend\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/postcard/ser/flavors.rs.html#467-470\">Source</a><a href=\"#method.try_extend\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"postcard/ser_flavors/trait.Flavor.html#method.try_extend\" class=\"fn\">try_extend</a>(&amp;mut self, data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"type\" href=\"postcard/type.Result.html\" title=\"type postcard::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Override this method when you want to customize processing\nmultiple bytes at once, such as copying a slice to the output,\nrather than iterating over one byte at a time.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_push\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/postcard/ser/flavors.rs.html#473-476\">Source</a><a href=\"#method.try_push\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"postcard/ser_flavors/trait.Flavor.html#tymethod.try_push\" class=\"fn\">try_push</a>(&amp;mut self, data: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"type\" href=\"postcard/type.Result.html\" title=\"type postcard::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>&gt;</h4></section></summary><div class='docblock'>Push a single byte to be modified and/or stored.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.finalize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/postcard/ser/flavors.rs.html#478-480\">Source</a><a href=\"#method.finalize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"postcard/ser_flavors/trait.Flavor.html#tymethod.finalize\" class=\"fn\">finalize</a>(self) -&gt; <a class=\"type\" href=\"postcard/type.Result.html\" title=\"type postcard::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"postcard/ser_flavors/trait.Flavor.html#associatedtype.Output\" title=\"type postcard::ser_flavors::Flavor::Output\">Output</a>&gt;</h4></section></summary><div class='docblock'>Finalize the serialization process.</div></details></div></details>","Flavor","postcard::ser::flavors::std_vec::StdVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Index%3Cusize%3E-for-AllocVec\" class=\"impl\"><a class=\"src rightside\" href=\"src/postcard/ser/flavors.rs.html#483-490\">Source</a><a href=\"#impl-Index%3Cusize%3E-for-AllocVec\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html\" title=\"trait core::ops::index::Index\">Index</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"postcard/ser_flavors/struct.AllocVec.html\" title=\"struct postcard::ser_flavors::AllocVec\">AllocVec</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/postcard/ser/flavors.rs.html#484\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>The returned type after indexing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/postcard/ser/flavors.rs.html#487-489\">Source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html#tymethod.index\" class=\"fn\">index</a>(&amp;self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.Index.html#tymethod.index\">Read more</a></div></details></div></details>","Index<usize>","postcard::ser::flavors::std_vec::StdVec"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IndexMut%3Cusize%3E-for-AllocVec\" class=\"impl\"><a class=\"src rightside\" href=\"src/postcard/ser/flavors.rs.html#492-497\">Source</a><a href=\"#impl-IndexMut%3Cusize%3E-for-AllocVec\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.IndexMut.html\" title=\"trait core::ops::index::IndexMut\">IndexMut</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt; for <a class=\"struct\" href=\"postcard/ser_flavors/struct.AllocVec.html\" title=\"struct postcard::ser_flavors::AllocVec\">AllocVec</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/postcard/ser/flavors.rs.html#494-496\">Source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(&amp;mut self, idx: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Performs the mutable indexing (<code>container[index]</code>) operation. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/index/trait.IndexMut.html#tymethod.index_mut\">Read more</a></div></details></div></details>","IndexMut<usize>","postcard::ser::flavors::std_vec::StdVec"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[10628]}