(function() {
    var type_impls = Object.fromEntries([["wyz",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Address%3CFrozen%3CM%3E,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#222-236\">Source</a><a href=\"#impl-Address%3CFrozen%3CM%3E,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T&gt; <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Frozen.html\" title=\"struct wyz::comu::Frozen\">Frozen</a>&lt;M&gt;, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.thaw\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#229-235\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wyz/comu/struct.Address.html#tymethod.thaw\" class=\"fn\">thaw</a>(self) -&gt; <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M, T&gt;</h4></section></summary><div class=\"docblock\"><p>Thaws the <code>Address</code> to its original mutability permission.</p>\n</div></details></div></details>",0,"wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Address%3CM,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#136-144\">Source</a><a href=\"#impl-Address%3CM,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T&gt; <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.DANGLING\" class=\"associatedconstant\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#140-143\">Source</a><h4 class=\"code-header\">pub const <a href=\"wyz/comu/struct.Address.html#associatedconstant.DANGLING\" class=\"constant\">DANGLING</a>: Self</h4></section></summary><div class=\"docblock\"><p>The dangling pointer.</p>\n</div></details></div></details>",0,"wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Address%3CM,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#146-211\">Source</a><a href=\"#impl-Address%3CM,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T&gt; <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#155-160\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wyz/comu/struct.Address.html#tymethod.new\" class=\"fn\">new</a>(addr: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>Address</code> over some pointer value.</p>\n<p>You are responsible for selecting the correct <code>Mutability</code> marker.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.immut\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#166-171\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wyz/comu/struct.Address.html#tymethod.immut\" class=\"fn\">immut</a>(self) -&gt; <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Const.html\" title=\"struct wyz::comu::Const\">Const</a>, T&gt;</h4></section></summary><div class=\"docblock\"><p>Permanently converts an <code>Address&lt;_&gt;</code> into an <code>Address&lt;Const&gt;</code>.</p>\n<p>You should generally prefer <a href=\"wyz/comu/struct.Address.html#method.freeze\" title=\"method wyz::comu::Address::freeze\"><code>Address::freeze</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.assert_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#183-188\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.assert_mut\" class=\"fn\">assert_mut</a>(self) -&gt; <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Mut.html\" title=\"struct wyz::comu::Mut\">Mut</a>, T&gt;</h4></section></summary><div class=\"docblock\"><p>Force an <code>Address&lt;Const&gt;</code> to be <code>Address&lt;Mut&gt;</code>.</p>\n<h6 id=\"safety\"><a class=\"doc-anchor\" href=\"#safety\">§</a>Safety</h6>\n<p>You should only call this on addresses you know to have been created\nwith <code>Mut</code>able permissions and previously removed by <a href=\"wyz/comu/struct.Address.html#method.immut\" title=\"method wyz::comu::Address::immut\"><code>Address::immut</code></a>.</p>\n<p>You should prefer using <a href=\"wyz/comu/struct.Address.html#method.freeze\" title=\"method wyz::comu::Address::freeze\"><code>Address::freeze</code></a> for temporary, trackable,\nimmutability constraints instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.freeze\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#192-198\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wyz/comu/struct.Address.html#tymethod.freeze\" class=\"fn\">freeze</a>(self) -&gt; <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Frozen.html\" title=\"struct wyz::comu::Frozen\">Frozen</a>&lt;M&gt;, T&gt;</h4></section></summary><div class=\"docblock\"><p>Freezes the <code>Address</code> so that it is read-only.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_inner\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#202-204\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wyz/comu/struct.Address.html#tymethod.into_inner\" class=\"fn\">into_inner</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/ptr/non_null/struct.NonNull.html\" title=\"struct core::ptr::non_null::NonNull\">NonNull</a>&lt;T&gt;</h4></section></summary><div class=\"docblock\"><p>Removes the <code>Address</code> type marker, returning the original pointer.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_const\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#208-210\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wyz/comu/struct.Address.html#tymethod.to_const\" class=\"fn\">to_const</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.pointer.html\">*const T</a></h4></section></summary><div class=\"docblock\"><p>Gets the address as a read-only pointer.</p>\n</div></details></div></details>",0,"wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Address%3CM,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#292-314\">Source</a><a href=\"#impl-Address%3CM,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T&gt; <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,</div></h3><div class=\"docblock\"><p>Port of the pointer inherent methods on <code>Address</code>es of <code>Sized</code> types.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#295-303\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wyz/comu/struct.Address.html#tymethod.cast\" class=\"fn\">cast</a>&lt;U&gt;(self) -&gt; <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M, U&gt;</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::cast</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.cast\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#295-303\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.offset\" class=\"fn\">offset</a>(self, count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.isize.html\">isize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::offset</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.offset\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#295-303\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.add\" class=\"fn\">add</a>(self, count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::add</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.add\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#295-303\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.sub\" class=\"fn\">sub</a>(self, count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::sub</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.sub\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_offset\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#295-303\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wyz/comu/struct.Address.html#tymethod.wrapping_offset\" class=\"fn\">wrapping_offset</a>(self, count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.isize.html\">isize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::wrapping_offset</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.wrapping_offset\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_add\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#295-303\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wyz/comu/struct.Address.html#tymethod.wrapping_add\" class=\"fn\">wrapping_add</a>(self, count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::wrapping_add</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.wrapping_add\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wrapping_sub\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#295-303\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wyz/comu/struct.Address.html#tymethod.wrapping_sub\" class=\"fn\">wrapping_sub</a>(self, count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.usize.html\">usize</a>) -&gt; Self</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::wrapping_sub</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.wrapping_sub\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.offset_from\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#305-313\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.offset_from\" class=\"fn\">offset_from</a>(self, origin: Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.isize.html\">isize</a></h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::offset_from</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.offset_from\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#305-313\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.read\" class=\"fn\">read</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::read</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.read\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_volatile\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#305-313\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.read_volatile\" class=\"fn\">read_volatile</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::read_volatile</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.read_volatile\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_unaligned\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#305-313\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.read_unaligned\" class=\"fn\">read_unaligned</a>(self) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::read_unaligned</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.read_unaligned\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_to\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#305-313\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.copy_to\" class=\"fn\">copy_to</a>(self, dest: <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Mut.html\" title=\"struct wyz::comu::Mut\">Mut</a>, T&gt;, count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::copy_to</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.copy_to\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_to_nonoverlapping\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#305-313\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.copy_to_nonoverlapping\" class=\"fn\">copy_to_nonoverlapping</a>(self, dest: <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Mut.html\" title=\"struct wyz::comu::Mut\">Mut</a>, T&gt;, count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::copy_to_nonoverlapping</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.copy_to_nonoverlapping\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.align_offset\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#305-313\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wyz/comu/struct.Address.html#tymethod.align_offset\" class=\"fn\">align_offset</a>(self, align: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.usize.html\">usize</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.usize.html\">usize</a></h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::align_offset</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.align_offset\">original documentation</a>.</p>\n</div></details></div></details>",0,"wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Address%3CM,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#317-336\">Source</a><a href=\"#impl-Address%3CM,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T&gt; <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3><div class=\"docblock\"><p>Port of the pointer inherent methods on <code>Address</code>es of any type.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#322-324\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.as_ref\" class=\"fn\">as_ref</a>&lt;'a&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;'a T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::as_ref</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.as_ref\">original documentation</a>.</p>\n</div></details></div></details>",0,"wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Address%3CMut,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#213-220\">Source</a><a href=\"#impl-Address%3CMut,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Mut.html\" title=\"struct wyz::comu::Mut\">Mut</a>, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#217-219\">Source</a><h4 class=\"code-header\">pub fn <a href=\"wyz/comu/struct.Address.html#tymethod.to_mut\" class=\"fn\">to_mut</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.pointer.html\">*mut T</a></h4></section></summary><div class=\"docblock\"><p>Gets the address as a write-capable pointer.</p>\n</div></details></div></details>",0,"wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Address%3CMut,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#339-349\">Source</a><a href=\"#impl-Address%3CMut,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Mut.html\" title=\"struct wyz::comu::Mut\">Mut</a>, T&gt;</h3><div class=\"docblock\"><p>Port of pointer inherent methods on mutable <code>Address</code>es of sized types.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_from\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#340-348\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.copy_from\" class=\"fn\">copy_from</a>&lt;M2: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>&gt;(self, src: <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M2, T&gt;, count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::copy_from</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.copy_from\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.copy_from_nonoverlapping\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#340-348\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.copy_from_nonoverlapping\" class=\"fn\">copy_from_nonoverlapping</a>&lt;M2: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>&gt;(\n    self,\n    src: <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M2, T&gt;,\n    count: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.usize.html\">usize</a>,\n)</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::copy_from_nonoverlapping</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.copy_from_nonoverlapping\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#340-348\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.write\" class=\"fn\">write</a>(self, value: T)</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::write</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.write\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_volatile\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#340-348\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.write_volatile\" class=\"fn\">write_volatile</a>(self, value: T)</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::write_volatile</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.write_volatile\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_unaligned\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#340-348\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.write_unaligned\" class=\"fn\">write_unaligned</a>(self, value: T)</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::write_unaligned</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.write_unaligned\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#340-348\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.replace\" class=\"fn\">replace</a>(self, src: T) -&gt; T</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::replace</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.replace\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.swap\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#340-348\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.swap\" class=\"fn\">swap</a>(self, with: Self)</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::swap</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.swap\">original documentation</a>.</p>\n</div></details></div></details>",0,"wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Address%3CMut,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#352-359\">Source</a><a href=\"#impl-Address%3CMut,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Mut.html\" title=\"struct wyz::comu::Mut\">Mut</a>, T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3><div class=\"docblock\"><p>Port of pointer inherent methods on mutable <code>Address</code>es of any type.</p>\n</div></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_mut\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#355-358\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.as_mut\" class=\"fn\">as_mut</a>&lt;'a&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;'a mut T</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::as_mut</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.as_mut\">original documentation</a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop_in_place\" class=\"method\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#355-358\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"wyz/comu/struct.Address.html#tymethod.drop_in_place\" class=\"fn\">drop_in_place</a>(self)</h4></section></summary><div class=\"docblock\"><p>Applies <code>&lt;*T&gt;::drop_in_place</code>.</p>\n<p>See <a href=\"https://doc.rust-lang.org/std/primitive.pointer.html#method.drop_in_place\">original documentation</a>.</p>\n</div></details></div></details>",0,"wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Address%3CM,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#361-370\">Source</a><a href=\"#impl-Clone-for-Address%3CM,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#367-369\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Address%3CM,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#451-460\">Source</a><a href=\"#impl-Debug-for-Address%3CM,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#457-459\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26T%3E-for-Address%3CConst,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#385-392\">Source</a><a href=\"#impl-From%3C%26T%3E-for-Address%3CConst,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;T</a>&gt; for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Const.html\" title=\"struct wyz::comu::Const\">Const</a>, T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#389-391\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(elem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;T</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&T>","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26mut+T%3E-for-Address%3CMut,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#405-412\">Source</a><a href=\"#impl-From%3C%26mut+T%3E-for-Address%3CMut,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;mut T</a>&gt; for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Mut.html\" title=\"struct wyz::comu::Mut\">Mut</a>, T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#409-411\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(elem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;mut T</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&mut T>","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Address%3CM,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#473-483\">Source</a><a href=\"#impl-Hash-for-Address%3CM,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#479-482\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.86.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Address%3CM,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#429-437\">Source</a><a href=\"#impl-Ord-for-Address%3CM,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#433-436\">Source</a><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#998-1000\">Source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1037-1039\">Source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1063-1065\">Source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CAddress%3CM2,+T2%3E%3E-for-Address%3CM1,+T1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#418-427\">Source</a><a href=\"#impl-PartialEq%3CAddress%3CM2,+T2%3E%3E-for-Address%3CM1,+T1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M1, M2, T1, T2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M2, T2&gt;&gt; for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M1, T1&gt;<div class=\"where\">where\n    M1: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,\n    M2: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#424-426\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M2, T2&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq<Address<M2, T2>>","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd%3CAddress%3CM2,+T2%3E%3E-for-Address%3CM1,+T1%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#439-449\">Source</a><a href=\"#impl-PartialOrd%3CAddress%3CM2,+T2%3E%3E-for-Address%3CM1,+T1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M1, M2, T1, T2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M2, T2&gt;&gt; for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M1, T1&gt;<div class=\"where\">where\n    M1: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,\n    M2: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#445-448\">Source</a><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M2, T2&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1371\">Source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1389\">Source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the\n<code>&lt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1407\">Source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code>\noperator. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#1425\">Source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by\nthe <code>&gt;=</code> operator. <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd<Address<M2, T2>>","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Pointer-for-Address%3CM,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#462-471\">Source</a><a href=\"#impl-Pointer-for-Address%3CM,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Pointer.html\" title=\"trait core::fmt::Pointer\">Pointer</a> for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#468-470\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Pointer.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, fmt: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Pointer.html#tymethod.fmt\">Read more</a></div></details></div></details>","Pointer","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Referential%3C'a%3E-for-Address%3CConst,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#517-529\">Source</a><a href=\"#impl-Referential%3C'a%3E-for-Address%3CConst,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"wyz/comu/trait.Referential.html\" title=\"trait wyz::comu::Referential\">Referential</a>&lt;'a&gt; for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Const.html\" title=\"struct wyz::comu::Const\">Const</a>, T&gt;<div class=\"where\">where\n    T: 'a + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Ref\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#520\">Source</a><a href=\"#associatedtype.Ref\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"wyz/comu/trait.Referential.html#associatedtype.Ref\" class=\"associatedtype\">Ref</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;'a T</a></h4></section></summary><div class='docblock'>The created reference type. Must be one of <code>&amp;T</code> or <code>&amp;mut T</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#522-524\">Source</a><a href=\"#method.to_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"wyz/comu/trait.Referential.html#tymethod.to_ref\" class=\"fn\">to_ref</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"wyz/comu/trait.Referential.html#associatedtype.Ref\" title=\"type wyz::comu::Referential::Ref\">Ref</a></h4></section></summary><div class='docblock'>Converts the <code>Address</code> to a reference. <a href=\"wyz/comu/trait.Referential.html#tymethod.to_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#526-528\">Source</a><a href=\"#method.from_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wyz/comu/trait.Referential.html#tymethod.from_ref\" class=\"fn\">from_ref</a>(this: Self::<a class=\"associatedtype\" href=\"wyz/comu/trait.Referential.html#associatedtype.Ref\" title=\"type wyz::comu::Referential::Ref\">Ref</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts a reference back into an <code>Address</code>.</div></details></div></details>","Referential<'a>","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Referential%3C'a%3E-for-Address%3CFrozen%3CM%3E,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#545-559\">Source</a><a href=\"#impl-Referential%3C'a%3E-for-Address%3CFrozen%3CM%3E,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, M, T&gt; <a class=\"trait\" href=\"wyz/comu/trait.Referential.html\" title=\"trait wyz::comu::Referential\">Referential</a>&lt;'a&gt; for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Frozen.html\" title=\"struct wyz::comu::Frozen\">Frozen</a>&lt;M&gt;, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,\n    T: 'a + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Ref\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#550\">Source</a><a href=\"#associatedtype.Ref\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"wyz/comu/trait.Referential.html#associatedtype.Ref\" class=\"associatedtype\">Ref</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;'a T</a></h4></section></summary><div class='docblock'>The created reference type. Must be one of <code>&amp;T</code> or <code>&amp;mut T</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#552-554\">Source</a><a href=\"#method.to_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"wyz/comu/trait.Referential.html#tymethod.to_ref\" class=\"fn\">to_ref</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"wyz/comu/trait.Referential.html#associatedtype.Ref\" title=\"type wyz::comu::Referential::Ref\">Ref</a></h4></section></summary><div class='docblock'>Converts the <code>Address</code> to a reference. <a href=\"wyz/comu/trait.Referential.html#tymethod.to_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#556-558\">Source</a><a href=\"#method.from_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wyz/comu/trait.Referential.html#tymethod.from_ref\" class=\"fn\">from_ref</a>(this: Self::<a class=\"associatedtype\" href=\"wyz/comu/trait.Referential.html#associatedtype.Ref\" title=\"type wyz::comu::Referential::Ref\">Ref</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts a reference back into an <code>Address</code>.</div></details></div></details>","Referential<'a>","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Referential%3C'a%3E-for-Address%3CMut,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#531-543\">Source</a><a href=\"#impl-Referential%3C'a%3E-for-Address%3CMut,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"wyz/comu/trait.Referential.html\" title=\"trait wyz::comu::Referential\">Referential</a>&lt;'a&gt; for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Mut.html\" title=\"struct wyz::comu::Mut\">Mut</a>, T&gt;<div class=\"where\">where\n    T: 'a + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Ref\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#534\">Source</a><a href=\"#associatedtype.Ref\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"wyz/comu/trait.Referential.html#associatedtype.Ref\" class=\"associatedtype\">Ref</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.reference.html\">&amp;'a mut T</a></h4></section></summary><div class='docblock'>The created reference type. Must be one of <code>&amp;T</code> or <code>&amp;mut T</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#536-538\">Source</a><a href=\"#method.to_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"wyz/comu/trait.Referential.html#tymethod.to_ref\" class=\"fn\">to_ref</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"wyz/comu/trait.Referential.html#associatedtype.Ref\" title=\"type wyz::comu::Referential::Ref\">Ref</a></h4></section></summary><div class='docblock'>Converts the <code>Address</code> to a reference. <a href=\"wyz/comu/trait.Referential.html#tymethod.to_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#540-542\">Source</a><a href=\"#method.from_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"wyz/comu/trait.Referential.html#tymethod.from_ref\" class=\"fn\">from_ref</a>(this: Self::<a class=\"associatedtype\" href=\"wyz/comu/trait.Referential.html#associatedtype.Ref\" title=\"type wyz::comu::Referential::Ref\">Ref</a>) -&gt; Self</h4></section></summary><div class='docblock'>Converts a reference back into an <code>Address</code>.</div></details></div></details>","Referential<'a>","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SliceReferential%3C'a%3E-for-Address%3CConst,+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#583-591\">Source</a><a href=\"#impl-SliceReferential%3C'a%3E-for-Address%3CConst,+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"wyz/comu/trait.SliceReferential.html\" title=\"trait wyz::comu::SliceReferential\">SliceReferential</a>&lt;'a&gt; for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Const.html\" title=\"struct wyz::comu::Const\">Const</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.slice.html\">[T]</a>&gt;<div class=\"where\">where\n    T: 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ElementAddr\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#586\">Source</a><a href=\"#associatedtype.ElementAddr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"wyz/comu/trait.SliceReferential.html#associatedtype.ElementAddr\" class=\"associatedtype\">ElementAddr</a> = <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Const.html\" title=\"struct wyz::comu::Const\">Const</a>, T&gt;</h4></section></summary><div class='docblock'>The type of the element pointer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_parts\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#588-590\">Source</a><a href=\"#method.from_raw_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"wyz/comu/trait.SliceReferential.html#tymethod.from_raw_parts\" class=\"fn\">from_raw_parts</a>(ptr: Self::<a class=\"associatedtype\" href=\"wyz/comu/trait.SliceReferential.html#associatedtype.ElementAddr\" title=\"type wyz::comu::SliceReferential::ElementAddr\">ElementAddr</a>, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.usize.html\">usize</a>) -&gt; Self::<a class=\"associatedtype\" href=\"wyz/comu/trait.Referential.html#associatedtype.Ref\" title=\"type wyz::comu::Referential::Ref\">Ref</a></h4></section></summary><div class='docblock'>Constructs an ordinary slice reference from a base-address and a length. <a href=\"wyz/comu/trait.SliceReferential.html#tymethod.from_raw_parts\">Read more</a></div></details></div></details>","SliceReferential<'a>","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SliceReferential%3C'a%3E-for-Address%3CFrozen%3CM%3E,+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#593-603\">Source</a><a href=\"#impl-SliceReferential%3C'a%3E-for-Address%3CFrozen%3CM%3E,+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, M, T&gt; <a class=\"trait\" href=\"wyz/comu/trait.SliceReferential.html\" title=\"trait wyz::comu::SliceReferential\">SliceReferential</a>&lt;'a&gt; for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Frozen.html\" title=\"struct wyz::comu::Frozen\">Frozen</a>&lt;M&gt;, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.slice.html\">[T]</a>&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,\n    T: 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ElementAddr\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#598\">Source</a><a href=\"#associatedtype.ElementAddr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"wyz/comu/trait.SliceReferential.html#associatedtype.ElementAddr\" class=\"associatedtype\">ElementAddr</a> = <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Frozen.html\" title=\"struct wyz::comu::Frozen\">Frozen</a>&lt;M&gt;, T&gt;</h4></section></summary><div class='docblock'>The type of the element pointer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_parts\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#600-602\">Source</a><a href=\"#method.from_raw_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"wyz/comu/trait.SliceReferential.html#tymethod.from_raw_parts\" class=\"fn\">from_raw_parts</a>(ptr: Self::<a class=\"associatedtype\" href=\"wyz/comu/trait.SliceReferential.html#associatedtype.ElementAddr\" title=\"type wyz::comu::SliceReferential::ElementAddr\">ElementAddr</a>, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.usize.html\">usize</a>) -&gt; Self::<a class=\"associatedtype\" href=\"wyz/comu/trait.Referential.html#associatedtype.Ref\" title=\"type wyz::comu::Referential::Ref\">Ref</a></h4></section></summary><div class='docblock'>Constructs an ordinary slice reference from a base-address and a length. <a href=\"wyz/comu/trait.SliceReferential.html#tymethod.from_raw_parts\">Read more</a></div></details></div></details>","SliceReferential<'a>","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SliceReferential%3C'a%3E-for-Address%3CMut,+%5BT%5D%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#605-613\">Source</a><a href=\"#impl-SliceReferential%3C'a%3E-for-Address%3CMut,+%5BT%5D%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"wyz/comu/trait.SliceReferential.html\" title=\"trait wyz::comu::SliceReferential\">SliceReferential</a>&lt;'a&gt; for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Mut.html\" title=\"struct wyz::comu::Mut\">Mut</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.slice.html\">[T]</a>&gt;<div class=\"where\">where\n    T: 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.ElementAddr\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#608\">Source</a><a href=\"#associatedtype.ElementAddr\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"wyz/comu/trait.SliceReferential.html#associatedtype.ElementAddr\" class=\"associatedtype\">ElementAddr</a> = <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Mut.html\" title=\"struct wyz::comu::Mut\">Mut</a>, T&gt;</h4></section></summary><div class='docblock'>The type of the element pointer.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_raw_parts\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#610-612\">Source</a><a href=\"#method.from_raw_parts\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"wyz/comu/trait.SliceReferential.html#tymethod.from_raw_parts\" class=\"fn\">from_raw_parts</a>(ptr: Self::<a class=\"associatedtype\" href=\"wyz/comu/trait.SliceReferential.html#associatedtype.ElementAddr\" title=\"type wyz::comu::SliceReferential::ElementAddr\">ElementAddr</a>, len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.usize.html\">usize</a>) -&gt; Self::<a class=\"associatedtype\" href=\"wyz/comu/trait.Referential.html#associatedtype.Ref\" title=\"type wyz::comu::Referential::Ref\">Ref</a></h4></section></summary><div class='docblock'>Constructs an ordinary slice reference from a base-address and a length. <a href=\"wyz/comu/trait.SliceReferential.html#tymethod.from_raw_parts\">Read more</a></div></details></div></details>","SliceReferential<'a>","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C*const+T%3E-for-Address%3CConst,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#372-383\">Source</a><a href=\"#impl-TryFrom%3C*const+T%3E-for-Address%3CConst,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.pointer.html\">*const T</a>&gt; for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Const.html\" title=\"struct wyz::comu::Const\">Const</a>, T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#375\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"wyz/comu/struct.NullPtrError.html\" title=\"struct wyz::comu::NullPtrError\">NullPtrError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#378-382\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(elem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.pointer.html\">*const T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<*const T>","wyz::comu::Reference"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TryFrom%3C*mut+T%3E-for-Address%3CMut,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#394-403\">Source</a><a href=\"#impl-TryFrom%3C*mut+T%3E-for-Address%3CMut,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html\" title=\"trait core::convert::TryFrom\">TryFrom</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.pointer.html\">*mut T</a>&gt; for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;<a class=\"struct\" href=\"wyz/comu/struct.Mut.html\" title=\"struct wyz::comu::Mut\">Mut</a>, T&gt;<div class=\"where\">where\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#397\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"wyz/comu/struct.NullPtrError.html\" title=\"struct wyz::comu::NullPtrError\">NullPtrError</a></h4></section></summary><div class='docblock'>The type returned in the event of a conversion error.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#400-402\">Source</a><a href=\"#method.try_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html#tymethod.try_from\" class=\"fn\">try_from</a>(elem: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/core/primitive.pointer.html\">*mut T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, Self::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.TryFrom.html#associatedtype.Error\" title=\"type core::convert::TryFrom::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Performs the conversion.</div></details></div></details>","TryFrom<*mut T>","wyz::comu::Reference"],["<section id=\"impl-Copy-for-Address%3CM,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#485-490\">Source</a><a href=\"#impl-Copy-for-Address%3CM,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,\n    T: ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section>","Copy","wyz::comu::Reference"],["<section id=\"impl-Eq-for-Address%3CM,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/wyz/comu.rs.html#414-416\">Source</a><a href=\"#impl-Eq-for-Address%3CM,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;M, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"wyz/comu/struct.Address.html\" title=\"struct wyz::comu::Address\">Address</a>&lt;M, T&gt;<div class=\"where\">where\n    M: <a class=\"trait\" href=\"wyz/comu/trait.Mutability.html\" title=\"trait wyz::comu::Mutability\">Mutability</a>,</div></h3></section>","Eq","wyz::comu::Reference"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[79658]}