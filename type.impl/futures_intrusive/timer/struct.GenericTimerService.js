(function() {
    var type_impls = Object.fromEntries([["futures_intrusive",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-GenericTimerService%3CMutexType%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/timer/timer.rs.html#247-251\">Source</a><a href=\"#impl-Debug-for-GenericTimerService%3CMutexType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;MutexType: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"futures_intrusive/timer/struct.GenericTimerService.html\" title=\"struct futures_intrusive::timer::GenericTimerService\">GenericTimerService</a>&lt;MutexType&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/timer/timer.rs.html#248-250\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","futures_intrusive::timer::timer::if_std::TimerService","futures_intrusive::timer::timer::LocalTimerService"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericTimerService%3CMutexType%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/timer/timer.rs.html#253-294\">Source</a><a href=\"#impl-GenericTimerService%3CMutexType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;MutexType: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a>&gt; <a class=\"struct\" href=\"futures_intrusive/timer/struct.GenericTimerService.html\" title=\"struct futures_intrusive::timer::GenericTimerService\">GenericTimerService</a>&lt;MutexType&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_intrusive/timer/timer.rs.html#263-267\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_intrusive/timer/struct.GenericTimerService.html#tymethod.new\" class=\"fn\">new</a>(clock: &amp;'static dyn <a class=\"trait\" href=\"futures_intrusive/timer/trait.Clock.html\" title=\"trait futures_intrusive::timer::Clock\">Clock</a>) -&gt; <a class=\"struct\" href=\"futures_intrusive/timer/struct.GenericTimerService.html\" title=\"struct futures_intrusive::timer::GenericTimerService\">GenericTimerService</a>&lt;MutexType&gt;</h4></section></summary><div class=\"docblock\"><p>Creates a new Timer in the given state.</p>\n<p>The Timer will query the provided <a href=\"futures_intrusive/timer/trait.Clock.html\" title=\"trait futures_intrusive::timer::Clock\"><code>Clock</code></a> instance for the current\ntime whenever required.</p>\n<p>In order to create a create a clock which utilizes system time,\n<a href=\"futures_intrusive/timer/struct.StdClock.html\" title=\"struct futures_intrusive::timer::StdClock\"><code>StdClock</code></a> can be utilized.\nIn order to simulate time for test purposes,\n<a href=\"futures_intrusive/timer/struct.MockClock.html\" title=\"struct futures_intrusive::timer::MockClock\"><code>MockClock</code></a> can be utilized.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.next_expiration\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_intrusive/timer/timer.rs.html#277-279\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_intrusive/timer/struct.GenericTimerService.html#tymethod.next_expiration\" class=\"fn\">next_expiration</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Returns a timestamp when the next timer expires.</p>\n<p>For thread-safe timers, the returned value is not precise and subject to\nrace-conditions, since other threads can add timer in the meantime.</p>\n<p>Therefore adding any timer to the <a href=\"futures_intrusive/timer/struct.GenericTimerService.html\" title=\"struct futures_intrusive::timer::GenericTimerService\"><code>GenericTimerService</code></a> should  also\nmake sure to wake up the executor which polls for timeouts, in order to\nlet it capture the latest change.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.check_expirations\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_intrusive/timer/timer.rs.html#283-285\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_intrusive/timer/struct.GenericTimerService.html#tymethod.check_expirations\" class=\"fn\">check_expirations</a>(&amp;self)</h4></section></summary><div class=\"docblock\"><p>Checks whether any of the attached <a href=\"futures_intrusive/timer/struct.TimerFuture.html\" title=\"struct futures_intrusive::timer::TimerFuture\"><code>TimerFuture</code></a>s has expired.\nIn this case the associated task is woken up.</p>\n</div></details></div></details>",0,"futures_intrusive::timer::timer::if_std::TimerService","futures_intrusive::timer::timer::LocalTimerService"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-LocalTimer-for-GenericTimerService%3CMutexType%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/timer/timer.rs.html#296-311\">Source</a><a href=\"#impl-LocalTimer-for-GenericTimerService%3CMutexType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;MutexType: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a>&gt; <a class=\"trait\" href=\"futures_intrusive/timer/trait.LocalTimer.html\" title=\"trait futures_intrusive::timer::LocalTimer\">LocalTimer</a> for <a class=\"struct\" href=\"futures_intrusive/timer/struct.GenericTimerService.html\" title=\"struct futures_intrusive::timer::GenericTimerService\">GenericTimerService</a>&lt;MutexType&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.delay\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/timer/timer.rs.html#298-301\">Source</a><a href=\"#method.delay\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_intrusive/timer/trait.LocalTimer.html#tymethod.delay\" class=\"fn\">delay</a>(&amp;self, delay: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>) -&gt; <a class=\"struct\" href=\"futures_intrusive/timer/struct.LocalTimerFuture.html\" title=\"struct futures_intrusive::timer::LocalTimerFuture\">LocalTimerFuture</a>&lt;'_&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"LocalTimerFuture&lt;&#39;_&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns a future that gets fulfilled after the given <a href=\"https://doc.rust-lang.org/1.86.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\"><code>Duration</code></a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deadline\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/timer/timer.rs.html#305-310\">Source</a><a href=\"#method.deadline\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_intrusive/timer/trait.LocalTimer.html#tymethod.deadline\" class=\"fn\">deadline</a>(&amp;self, timestamp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"futures_intrusive/timer/struct.LocalTimerFuture.html\" title=\"struct futures_intrusive::timer::LocalTimerFuture\">LocalTimerFuture</a>&lt;'_&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"LocalTimerFuture&lt;&#39;_&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns a future that gets fulfilled when the utilized <a href=\"futures_intrusive/timer/trait.Clock.html\" title=\"trait futures_intrusive::timer::Clock\"><code>Clock</code></a> reaches\nthe given timestamp.</p>\n</div></details></div></details>","LocalTimer","futures_intrusive::timer::timer::if_std::TimerService","futures_intrusive::timer::timer::LocalTimerService"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Timer-for-GenericTimerService%3CMutexType%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/timer/timer.rs.html#313-333\">Source</a><a href=\"#impl-Timer-for-GenericTimerService%3CMutexType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;MutexType&gt; <a class=\"trait\" href=\"futures_intrusive/timer/trait.Timer.html\" title=\"trait futures_intrusive::timer::Timer\">Timer</a> for <a class=\"struct\" href=\"futures_intrusive/timer/struct.GenericTimerService.html\" title=\"struct futures_intrusive::timer::GenericTimerService\">GenericTimerService</a>&lt;MutexType&gt;<div class=\"where\">where\n    MutexType: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.delay\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/timer/timer.rs.html#318-321\">Source</a><a href=\"#method.delay\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_intrusive/timer/trait.Timer.html#tymethod.delay\" class=\"fn\">delay</a>(&amp;self, delay: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\">Duration</a>) -&gt; <a class=\"struct\" href=\"futures_intrusive/timer/struct.TimerFuture.html\" title=\"struct futures_intrusive::timer::TimerFuture\">TimerFuture</a>&lt;'_&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"TimerFuture&lt;&#39;_&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns a future that gets fulfilled after the given <a href=\"https://doc.rust-lang.org/1.86.0/core/time/struct.Duration.html\" title=\"struct core::time::Duration\"><code>Duration</code></a></p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deadline\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/timer/timer.rs.html#325-332\">Source</a><a href=\"#method.deadline\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"futures_intrusive/timer/trait.Timer.html#tymethod.deadline\" class=\"fn\">deadline</a>(&amp;self, timestamp: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u64.html\">u64</a>) -&gt; <a class=\"struct\" href=\"futures_intrusive/timer/struct.TimerFuture.html\" title=\"struct futures_intrusive::timer::TimerFuture\">TimerFuture</a>&lt;'_&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"TimerFuture&lt;&#39;_&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns a future that gets fulfilled when the utilized <a href=\"futures_intrusive/timer/trait.Clock.html\" title=\"trait futures_intrusive::timer::Clock\"><code>Clock</code></a> reaches\nthe given timestamp.</p>\n</div></details></div></details>","Timer","futures_intrusive::timer::timer::if_std::TimerService","futures_intrusive::timer::timer::LocalTimerService"],["<section id=\"impl-Send-for-GenericTimerService%3CMutexType%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/timer/timer.rs.html#237-240\">Source</a><a href=\"#impl-Send-for-GenericTimerService%3CMutexType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;MutexType: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> for <a class=\"struct\" href=\"futures_intrusive/timer/struct.GenericTimerService.html\" title=\"struct futures_intrusive::timer::GenericTimerService\">GenericTimerService</a>&lt;MutexType&gt;</h3></section>","Send","futures_intrusive::timer::timer::if_std::TimerService","futures_intrusive::timer::timer::LocalTimerService"],["<section id=\"impl-Sync-for-GenericTimerService%3CMutexType%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/timer/timer.rs.html#242-245\">Source</a><a href=\"#impl-Sync-for-GenericTimerService%3CMutexType%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;MutexType: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> for <a class=\"struct\" href=\"futures_intrusive/timer/struct.GenericTimerService.html\" title=\"struct futures_intrusive::timer::GenericTimerService\">GenericTimerService</a>&lt;MutexType&gt;</h3></section>","Sync","futures_intrusive::timer::timer::if_std::TimerService","futures_intrusive::timer::timer::LocalTimerService"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[14609]}