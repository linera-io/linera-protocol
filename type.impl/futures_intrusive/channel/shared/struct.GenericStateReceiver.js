(function() {
    var type_impls = Object.fromEntries([["futures_intrusive",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-GenericStateReceiver%3CMutexType,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/channel/state_broadcast.rs.html#660-675\">Source</a><a href=\"#impl-Clone-for-GenericStateReceiver%3CMutexType,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;MutexType, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"futures_intrusive/channel/shared/struct.GenericStateReceiver.html\" title=\"struct futures_intrusive::channel::shared::GenericStateReceiver\">GenericStateReceiver</a>&lt;MutexType, T&gt;<div class=\"where\">where\n    MutexType: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/channel/state_broadcast.rs.html#665-674\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","futures_intrusive::channel::state_broadcast::if_alloc::shared::if_std::StateReceiver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-GenericStateReceiver%3CMutexType,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/channel/state_broadcast.rs.html#617-625\">Source</a><a href=\"#impl-Debug-for-GenericStateReceiver%3CMutexType,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;MutexType, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"futures_intrusive/channel/shared/struct.GenericStateReceiver.html\" title=\"struct futures_intrusive::channel::shared::GenericStateReceiver\">GenericStateReceiver</a>&lt;MutexType, T&gt;<div class=\"where\">where\n    MutexType: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/channel/state_broadcast.rs.html#622-624\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","futures_intrusive::channel::state_broadcast::if_alloc::shared::if_std::StateReceiver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Drop-for-GenericStateReceiver%3CMutexType,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/channel/state_broadcast.rs.html#677-691\">Source</a><a href=\"#impl-Drop-for-GenericStateReceiver%3CMutexType,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;MutexType, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/drop/trait.Drop.html\" title=\"trait core::ops::drop::Drop\">Drop</a> for <a class=\"struct\" href=\"futures_intrusive/channel/shared/struct.GenericStateReceiver.html\" title=\"struct futures_intrusive::channel::shared::GenericStateReceiver\">GenericStateReceiver</a>&lt;MutexType, T&gt;<div class=\"where\">where\n    MutexType: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.drop\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/channel/state_broadcast.rs.html#682-690\">Source</a><a href=\"#method.drop\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/drop/trait.Drop.html#tymethod.drop\" class=\"fn\">drop</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Executes the destructor for this type. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/drop/trait.Drop.html#tymethod.drop\">Read more</a></div></details></div></details>","Drop","futures_intrusive::channel::state_broadcast::if_alloc::shared::if_std::StateReceiver"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-GenericStateReceiver%3CMutexType,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/futures_intrusive/channel/state_broadcast.rs.html#740-774\">Source</a><a href=\"#impl-GenericStateReceiver%3CMutexType,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;MutexType, T&gt; <a class=\"struct\" href=\"futures_intrusive/channel/shared/struct.GenericStateReceiver.html\" title=\"struct futures_intrusive::channel::shared::GenericStateReceiver\">GenericStateReceiver</a>&lt;MutexType, T&gt;<div class=\"where\">where\n    MutexType: <a class=\"trait\" href=\"lock_api/mutex/trait.RawMutex.html\" title=\"trait lock_api::mutex::RawMutex\">RawMutex</a> + 'static,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.receive\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_intrusive/channel/state_broadcast.rs.html#753-762\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_intrusive/channel/shared/struct.GenericStateReceiver.html#tymethod.receive\" class=\"fn\">receive</a>(&amp;self, state_id: <a class=\"struct\" href=\"futures_intrusive/channel/struct.StateId.html\" title=\"struct futures_intrusive::channel::StateId\">StateId</a>) -&gt; <a class=\"struct\" href=\"futures_intrusive/channel/shared/struct.StateReceiveFuture.html\" title=\"struct futures_intrusive::channel::shared::StateReceiveFuture\">StateReceiveFuture</a>&lt;MutexType, T&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"StateReceiveFuture&lt;MutexType, T&gt;\">ⓘ</a></h4></section></summary><div class=\"docblock\"><p>Returns a future that gets fulfilled when a value is written to the channel\nor the channel is closed.\n<code>state_id</code> specifies the minimum state ID that should be retrieved\nby the <code>receive</code> operation.</p>\n<p>The returned <a href=\"futures_intrusive/channel/shared/struct.StateReceiveFuture.html\" title=\"struct futures_intrusive::channel::shared::StateReceiveFuture\"><code>StateReceiveFuture</code></a> will get fulfilled with the\nretrieved value as well as the <a href=\"futures_intrusive/channel/struct.StateId.html\" title=\"struct futures_intrusive::channel::StateId\"><code>StateId</code></a> which is required to retrieve\nthe following state</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_receive\" class=\"method\"><a class=\"src rightside\" href=\"src/futures_intrusive/channel/state_broadcast.rs.html#768-773\">Source</a><h4 class=\"code-header\">pub fn <a href=\"futures_intrusive/channel/shared/struct.GenericStateReceiver.html#tymethod.try_receive\" class=\"fn\">try_receive</a>(&amp;self, state_id: <a class=\"struct\" href=\"futures_intrusive/channel/struct.StateId.html\" title=\"struct futures_intrusive::channel::StateId\">StateId</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;(<a class=\"struct\" href=\"futures_intrusive/channel/struct.StateId.html\" title=\"struct futures_intrusive::channel::StateId\">StateId</a>, T)&gt;</h4></section></summary><div class=\"docblock\"><p>Attempt to retrieve a value whose <code>StateId</code> is greater than the one provided.</p>\n<p>Returns <code>None</code> if no value is found in the channel, or if the current <code>StateId</code>\nof the value is less or equal to the one provided.</p>\n</div></details></div></details>",0,"futures_intrusive::channel::state_broadcast::if_alloc::shared::if_std::StateReceiver"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[10433]}