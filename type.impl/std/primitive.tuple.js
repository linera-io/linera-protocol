(function() {
    var type_impls = Object.fromEntries([["alloy",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#1492-1508\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, T1&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T1: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#1492-1508\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T0, T1)</a>, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#1492-1508\">Source</a><a href=\"#impl-Deserialize%3C'de%3E-for-(T0,+T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T0, T1, T2&gt; <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T1: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,\n    T2: <a class=\"trait\" href=\"serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/de/impls.rs.html#1492-1508\">Source</a><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T0, T1, T2)</a>, &lt;D as <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","alloy::signers::k256::elliptic_curve::weierstrass::ProjectivePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EventTopic-for-(T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/event/topic.rs.html#206\">Source</a><a href=\"#impl-EventTopic-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; <a class=\"trait\" href=\"alloy/sol_types/trait.EventTopic.html\" title=\"trait alloy::sol_types::EventTopic\">EventTopic</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: <a class=\"trait\" href=\"alloy/sol_types/trait.EventTopic.html\" title=\"trait alloy::sol_types::EventTopic\">EventTopic</a>,\n    T2: <a class=\"trait\" href=\"alloy/sol_types/trait.EventTopic.html\" title=\"trait alloy::sol_types::EventTopic\">EventTopic</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.topic_preimage_length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/event/topic.rs.html#206\">Source</a><a href=\"#method.topic_preimage_length\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.EventTopic.html#tymethod.topic_preimage_length\" class=\"fn\">topic_preimage_length</a>(rust: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2)</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of bytes this type occupies in another topic’s preimage,\nusually a multiple of 32. <a href=\"alloy/sol_types/trait.EventTopic.html#tymethod.topic_preimage_length\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_topic_preimage\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/event/topic.rs.html#206\">Source</a><a href=\"#method.encode_topic_preimage\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.EventTopic.html#tymethod.encode_topic_preimage\" class=\"fn\">encode_topic_preimage</a>(\n    rust: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2)</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>,\n    out: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n)</h4></section></summary><div class='docblock'>Encodes this type as preimage bytes which are then hashed in\ncomplex types’ <a href=\"alloy/sol_types/trait.EventTopic.html#tymethod.encode_topic\" title=\"associated function alloy::sol_types::EventTopic::encode_topic\"><code>encode_topic</code></a>. <a href=\"alloy/sol_types/trait.EventTopic.html#tymethod.encode_topic_preimage\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_topic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/event/topic.rs.html#206\">Source</a><a href=\"#method.encode_topic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.EventTopic.html#tymethod.encode_topic\" class=\"fn\">encode_topic</a>(rust: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2)</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>) -&gt; <a class=\"struct\" href=\"alloy/dyn_abi/abi/token/struct.WordToken.html\" title=\"struct alloy::dyn_abi::abi::token::WordToken\">WordToken</a></h4></section></summary><div class='docblock'>Indexed event parameter encoding. <a href=\"alloy/sol_types/trait.EventTopic.html#tymethod.encode_topic\">Read more</a></div></details></div></details>","EventTopic","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-EventTopic-for-(T1,+T2,+T3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/event/topic.rs.html#206\">Source</a><a href=\"#impl-EventTopic-for-(T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, T3&gt; <a class=\"trait\" href=\"alloy/sol_types/trait.EventTopic.html\" title=\"trait alloy::sol_types::EventTopic\">EventTopic</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2, T3)</a><div class=\"where\">where\n    T1: <a class=\"trait\" href=\"alloy/sol_types/trait.EventTopic.html\" title=\"trait alloy::sol_types::EventTopic\">EventTopic</a>,\n    T2: <a class=\"trait\" href=\"alloy/sol_types/trait.EventTopic.html\" title=\"trait alloy::sol_types::EventTopic\">EventTopic</a>,\n    T3: <a class=\"trait\" href=\"alloy/sol_types/trait.EventTopic.html\" title=\"trait alloy::sol_types::EventTopic\">EventTopic</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.topic_preimage_length\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/event/topic.rs.html#206\">Source</a><a href=\"#method.topic_preimage_length\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.EventTopic.html#tymethod.topic_preimage_length\" class=\"fn\">topic_preimage_length</a>(rust: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2, T3)</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>The number of bytes this type occupies in another topic’s preimage,\nusually a multiple of 32. <a href=\"alloy/sol_types/trait.EventTopic.html#tymethod.topic_preimage_length\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_topic_preimage\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/event/topic.rs.html#206\">Source</a><a href=\"#method.encode_topic_preimage\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.EventTopic.html#tymethod.encode_topic_preimage\" class=\"fn\">encode_topic_preimage</a>(\n    rust: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2, T3)</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>,\n    out: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;,\n)</h4></section></summary><div class='docblock'>Encodes this type as preimage bytes which are then hashed in\ncomplex types’ <a href=\"alloy/sol_types/trait.EventTopic.html#tymethod.encode_topic\" title=\"associated function alloy::sol_types::EventTopic::encode_topic\"><code>encode_topic</code></a>. <a href=\"alloy/sol_types/trait.EventTopic.html#tymethod.encode_topic_preimage\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_topic\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/event/topic.rs.html#206\">Source</a><a href=\"#method.encode_topic\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.EventTopic.html#tymethod.encode_topic\" class=\"fn\">encode_topic</a>(rust: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2, T3)</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>) -&gt; <a class=\"struct\" href=\"alloy/dyn_abi/abi/token/struct.WordToken.html\" title=\"struct alloy::dyn_abi::abi::token::WordToken\">WordToken</a></h4></section></summary><div class='docblock'>Indexed event parameter encoding. <a href=\"alloy/sol_types/trait.EventTopic.html#tymethod.encode_topic\">Read more</a></div></details></div></details>","EventTopic","alloy::signers::k256::elliptic_curve::weierstrass::ProjectivePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26LanguageIdentifier%3E-for-(Language,+Option%3CScript%3E,+Option%3CRegion%3E)\" class=\"impl\"><a class=\"src rightside\" href=\"src/icu_locale_core/langid.rs.html#652-657\">Source</a><a href=\"#impl-From%3C%26LanguageIdentifier%3E-for-(Language,+Option%3CScript%3E,+Option%3CRegion%3E)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"struct\" href=\"icu_locale_core/langid/struct.LanguageIdentifier.html\" title=\"struct icu_locale_core::langid::LanguageIdentifier\">LanguageIdentifier</a>&gt; for (<a class=\"struct\" href=\"icu_locale_core/subtags/language/struct.Language.html\" title=\"struct icu_locale_core::subtags::language::Language\">Language</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"icu_locale_core/subtags/script/struct.Script.html\" title=\"struct icu_locale_core::subtags::script::Script\">Script</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"icu_locale_core/subtags/region/struct.Region.html\" title=\"struct icu_locale_core::subtags::region::Region\">Region</a>&gt;)</h3><div class=\"docblock\"><p>Convert from a <a href=\"icu_locale_core/langid/struct.LanguageIdentifier.html\" title=\"struct icu_locale_core::langid::LanguageIdentifier\"><code>LanguageIdentifier</code></a> to an LSR tuple.</p>\n</div></section></summary><div class=\"docblock\"><h4 id=\"examples\"><a class=\"doc-anchor\" href=\"#examples\">§</a>Examples</h4>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>icu::locale::{\n    langid,\n    subtags::{language, region, script},\n};\n\n<span class=\"kw\">let </span>lid = <span class=\"macro\">langid!</span>(<span class=\"string\">\"en-Latn-US\"</span>);\n<span class=\"kw\">let </span>(lang, script, region) = (<span class=\"kw-2\">&amp;</span>lid).into();\n\n<span class=\"macro\">assert_eq!</span>(lang, <span class=\"macro\">language!</span>(<span class=\"string\">\"en\"</span>));\n<span class=\"macro\">assert_eq!</span>(script, <span class=\"prelude-val\">Some</span>(<span class=\"macro\">script!</span>(<span class=\"string\">\"Latn\"</span>)));\n<span class=\"macro\">assert_eq!</span>(region, <span class=\"prelude-val\">Some</span>(<span class=\"macro\">region!</span>(<span class=\"string\">\"US\"</span>)));</code></pre></div>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/icu_locale_core/langid.rs.html#659\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(\n    langid: &amp;<a class=\"struct\" href=\"icu_locale_core/langid/struct.LanguageIdentifier.html\" title=\"struct icu_locale_core::langid::LanguageIdentifier\">LanguageIdentifier</a>,\n) -&gt; (<a class=\"struct\" href=\"icu_locale_core/subtags/language/struct.Language.html\" title=\"struct icu_locale_core::subtags::language::Language\">Language</a>, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"icu_locale_core/subtags/script/struct.Script.html\" title=\"struct icu_locale_core::subtags::script::Script\">Script</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"icu_locale_core/subtags/region/struct.Region.html\" title=\"struct icu_locale_core::subtags::region::Region\">Region</a>&gt;)</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&LanguageIdentifier>","alloy::signers::k256::elliptic_curve::weierstrass::ProjectivePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CUint%3CLIMBS%3E%3E-for-(Uint%3CL%3E,+Uint%3CH%3E)\" class=\"impl\"><a class=\"src rightside\" href=\"src/crypto_bigint/uint/from.rs.html#217\">Source</a><a href=\"#impl-From%3CUint%3CLIMBS%3E%3E-for-(Uint%3CL%3E,+Uint%3CH%3E)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;const L: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>, const H: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>, const LIMBS: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"alloy/signers/k256/elliptic_curve/bigint/struct.Uint.html\" title=\"struct alloy::signers::k256::elliptic_curve::bigint::Uint\">Uint</a>&lt;LIMBS&gt;&gt; for (<a class=\"struct\" href=\"alloy/signers/k256/elliptic_curve/bigint/struct.Uint.html\" title=\"struct alloy::signers::k256::elliptic_curve::bigint::Uint\">Uint</a>&lt;L&gt;, <a class=\"struct\" href=\"alloy/signers/k256/elliptic_curve/bigint/struct.Uint.html\" title=\"struct alloy::signers::k256::elliptic_curve::bigint::Uint\">Uint</a>&lt;H&gt;)</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/crypto_bigint/uint/from.rs.html#218\">Source</a><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(num: <a class=\"struct\" href=\"alloy/signers/k256/elliptic_curve/bigint/struct.Uint.html\" title=\"struct alloy::signers::k256::elliptic_curve::bigint::Uint\">Uint</a>&lt;LIMBS&gt;) -&gt; (<a class=\"struct\" href=\"alloy/signers/k256/elliptic_curve/bigint/struct.Uint.html\" title=\"struct alloy::signers::k256::elliptic_curve::bigint::Uint\">Uint</a>&lt;L&gt;, <a class=\"struct\" href=\"alloy/signers/k256/elliptic_curve/bigint/struct.Uint.html\" title=\"struct alloy::signers::k256::elliptic_curve::bigint::Uint\">Uint</a>&lt;H&gt;)</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Uint<LIMBS>>","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoBounds%3CT%3E-for-(Bound%3CT%3E,+Bound%3CT%3E)\" class=\"impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/ops/range.rs.html#997\">Source</a><a href=\"#impl-IntoBounds%3CT%3E-for-(Bound%3CT%3E,+Bound%3CT%3E)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.IntoBounds.html\" title=\"trait core::ops::range::IntoBounds\">IntoBounds</a>&lt;T&gt; for (<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;T&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;T&gt;)</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_bounds\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/ops/range.rs.html#998\">Source</a><a href=\"#method.into_bounds\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.IntoBounds.html#tymethod.into_bounds\" class=\"fn\">into_bounds</a>(self) -&gt; (<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;T&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;T&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>range_into_bounds</code>)</span></div></span><div class='docblock'>Convert this range into the start and end bounds.\nReturns <code>(start_bound, end_bound)</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.IntoBounds.html#tymethod.into_bounds\">Read more</a></div></details></div></details>","IntoBounds<T>","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RangeBounds%3CT%3E-for-(Bound%3C%26T%3E,+Bound%3C%26T%3E)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/ops/range.rs.html#1004\">Source</a></span><a href=\"#impl-RangeBounds%3CT%3E-for-(Bound%3C%26T%3E,+Bound%3C%26T%3E)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;T&gt; for (<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;'a T</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;'a T</a>&gt;)<div class=\"where\">where\n    T: 'a + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/ops/range.rs.html#1005\">Source</a><a href=\"#method.start_bound\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.RangeBounds.html#tymethod.start_bound\" class=\"fn\">start_bound</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class='docblock'>Start index bound. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.RangeBounds.html#tymethod.start_bound\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.end_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/ops/range.rs.html#1009\">Source</a><a href=\"#method.end_bound\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.RangeBounds.html#tymethod.end_bound\" class=\"fn\">end_bound</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class='docblock'>End index bound. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.RangeBounds.html#tymethod.end_bound\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/ops/range.rs.html#817-820\">Source</a></span><a href=\"#method.contains\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.RangeBounds.html#method.contains\" class=\"fn\">contains</a>&lt;U&gt;(&amp;self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;U</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;U&gt;,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>item</code> is contained in the range. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.RangeBounds.html#method.contains\">Read more</a></div></details></div></details>","RangeBounds<T>","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-RangeBounds%3CT%3E-for-(Bound%3CT%3E,+Bound%3CT%3E)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.28.0\">1.28.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/ops/range.rs.html#978\">Source</a></span><a href=\"#impl-RangeBounds%3CT%3E-for-(Bound%3CT%3E,+Bound%3CT%3E)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.RangeBounds.html\" title=\"trait core::ops::range::RangeBounds\">RangeBounds</a>&lt;T&gt; for (<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;T&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;T&gt;)</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.start_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/ops/range.rs.html#979\">Source</a><a href=\"#method.start_bound\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.RangeBounds.html#tymethod.start_bound\" class=\"fn\">start_bound</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class='docblock'>Start index bound. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.RangeBounds.html#tymethod.start_bound\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.end_bound\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/ops/range.rs.html#987\">Source</a><a href=\"#method.end_bound\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.RangeBounds.html#tymethod.end_bound\" class=\"fn\">end_bound</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></summary><div class='docblock'>End index bound. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.RangeBounds.html#tymethod.end_bound\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.35.0\">1.35.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/ops/range.rs.html#817-820\">Source</a></span><a href=\"#method.contains\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.RangeBounds.html#method.contains\" class=\"fn\">contains</a>&lt;U&gt;(&amp;self, item: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;U</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;U&gt;,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>&lt;T&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns <code>true</code> if <code>item</code> is contained in the range. <a href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/trait.RangeBounds.html#method.contains\">Read more</a></div></details></div></details>","RangeBounds<T>","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#428-444\">Source</a><a href=\"#impl-Serialize-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T0, T1)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T1: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#428-444\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-(T0,+T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#428-444\">Source</a><a href=\"#impl-Serialize-for-(T0,+T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0, T1, T2&gt; <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T0, T1, T2)</a><div class=\"where\">where\n    T0: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T1: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,\n    T2: <a class=\"trait\" href=\"serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/serde/ser/impls.rs.html#428-444\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","alloy::signers::k256::elliptic_curve::weierstrass::ProjectivePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SliceIndex%3C%5BT%5D%3E-for-(Bound%3Cusize%3E,+Bound%3Cusize%3E)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.53.0\">1.53.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/slice/index.rs.html#995\">Source</a></span><a href=\"#impl-SliceIndex%3C%5BT%5D%3E-for-(Bound%3Cusize%3E,+Bound%3Cusize%3E)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.slice.html\">[T]</a>&gt; for (<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;)</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/slice/index.rs.html#996\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.slice.html\">[T]</a></h4></section></summary><div class='docblock'>The output type returned by methods.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/slice/index.rs.html#999\">Source</a><a href=\"#method.get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.get\" class=\"fn\">get</a>(\n    self,\n    slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.slice.html\">[T]</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;) as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_index_methods</code>)</span></div></span><div class='docblock'>Returns a shared reference to the output at this location, if in\nbounds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/slice/index.rs.html#1004\">Source</a><a href=\"#method.get_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(\n    self,\n    slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.slice.html\">[T]</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut &lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;) as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_index_methods</code>)</span></div></span><div class='docblock'>Returns a mutable reference to the output at this location, if in\nbounds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/slice/index.rs.html#1009\">Source</a><a href=\"#method.get_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.get_unchecked\" class=\"fn\">get_unchecked</a>(\n    self,\n    slice: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.slice.html\">[T]</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.pointer.html\">*const </a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;) as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_index_methods</code>)</span></div></span><div class='docblock'>Returns a pointer to the output at this location, without\nperforming any bounds checking. <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.get_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/slice/index.rs.html#1015\">Source</a><a href=\"#method.get_unchecked_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.get_unchecked_mut\" class=\"fn\">get_unchecked_mut</a>(\n    self,\n    slice: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.slice.html\">[T]</a>,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.pointer.html\">*mut </a>&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;) as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_index_methods</code>)</span></div></span><div class='docblock'>Returns a mutable pointer to the output at this location, without\nperforming any bounds checking. <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.get_unchecked_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/slice/index.rs.html#1021\">Source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.index\" class=\"fn\">index</a>(\n    self,\n    slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.slice.html\">[T]</a>,\n) -&gt; &amp;&lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;) as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_index_methods</code>)</span></div></span><div class='docblock'>Returns a shared reference to the output at this location, panicking\nif out of bounds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/slice/index.rs.html#1026\">Source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(\n    self,\n    slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.slice.html\">[T]</a>,\n) -&gt; &amp;mut &lt;(<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;) as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.slice.html\">[T]</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" title=\"type core::slice::index::SliceIndex::Output\">Output</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_index_methods</code>)</span></div></span><div class='docblock'>Returns a mutable reference to the output at this location, panicking\nif out of bounds.</div></details></div></details>","SliceIndex<[T]>","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SliceIndex%3Cstr%3E-for-(Bound%3Cusize%3E,+Bound%3Cusize%3E)\" class=\"impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.73.0\">1.73.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/str/traits.rs.html#376\">Source</a></span><a href=\"#impl-SliceIndex%3Cstr%3E-for-(Bound%3Cusize%3E,+Bound%3Cusize%3E)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html\" title=\"trait core::slice::index::SliceIndex\">SliceIndex</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt; for (<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;, <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/enum.Bound.html\" title=\"enum core::ops::range::Bound\">Bound</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;)</h3><div class=\"docblock\"><p>Implements substring slicing for arbitrary bounds.</p>\n</div></section></summary><div class=\"docblock\"><p>Returns a slice of the given string bounded by the byte indices\nprovided by each bound.</p>\n<p>This operation is <em>O</em>(1).</p>\n<h4 id=\"panics\"><a class=\"doc-anchor\" href=\"#panics\">§</a>Panics</h4>\n<p>Panics if <code>begin</code> or <code>end</code> (if it exists and once adjusted for\ninclusion/exclusion) does not point to the starting byte offset of\na character (as defined by <code>is_char_boundary</code>), if <code>begin &gt; end</code>, or if\n<code>end &gt; len</code>.</p>\n</div><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/str/traits.rs.html#377\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The output type returned by methods.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/str/traits.rs.html#380\">Source</a><a href=\"#method.get\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.get\" class=\"fn\">get</a>(self, slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_index_methods</code>)</span></div></span><div class='docblock'>Returns a shared reference to the output at this location, if in\nbounds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/str/traits.rs.html#385\">Source</a><a href=\"#method.get_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.get_mut\" class=\"fn\">get_mut</a>(self, slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_index_methods</code>)</span></div></span><div class='docblock'>Returns a mutable reference to the output at this location, if in\nbounds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/str/traits.rs.html#390\">Source</a><a href=\"#method.get_unchecked\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.get_unchecked\" class=\"fn\">get_unchecked</a>(self, slice: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_index_methods</code>)</span></div></span><div class='docblock'>Returns a pointer to the output at this location, without\nperforming any bounds checking. <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.get_unchecked\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.get_unchecked_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/str/traits.rs.html#397\">Source</a><a href=\"#method.get_unchecked_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.get_unchecked_mut\" class=\"fn\">get_unchecked_mut</a>(self, slice: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_index_methods</code>)</span></div></span><div class='docblock'>Returns a mutable pointer to the output at this location, without\nperforming any bounds checking. <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.get_unchecked_mut\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/str/traits.rs.html#404\">Source</a><a href=\"#method.index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.index\" class=\"fn\">index</a>(self, slice: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_index_methods</code>)</span></div></span><div class='docblock'>Returns a shared reference to the output at this location, panicking\nif out of bounds.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.index_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/str/traits.rs.html#409\">Source</a><a href=\"#method.index_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/slice/index/trait.SliceIndex.html#tymethod.index_mut\" class=\"fn\">index_mut</a>(self, slice: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>) -&gt; &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">🔬</span><span>This is a nightly-only experimental API. (<code>slice_index_methods</code>)</span></div></span><div class='docblock'>Returns a mutable reference to the output at this location, panicking\nif out of bounds.</div></details></div></details>","SliceIndex<str>","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SolType-for-(T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#impl-SolType-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>,\n    T2: <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SOL_NAME\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#associatedconstant.SOL_NAME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"alloy/dyn_abi/trait.SolType.html#associatedconstant.SOL_NAME\" class=\"constant\">SOL_NAME</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The name of this type in Solidity.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ENCODED_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#associatedconstant.ENCODED_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"alloy/dyn_abi/trait.SolType.html#associatedconstant.ENCODED_SIZE\" class=\"constant\">ENCODED_SIZE</a>: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>The statically-known ABI-encoded size of the type. <a href=\"alloy/dyn_abi/trait.SolType.html#associatedconstant.ENCODED_SIZE\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.PACKED_ENCODED_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#associatedconstant.PACKED_ENCODED_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"alloy/dyn_abi/trait.SolType.html#associatedconstant.PACKED_ENCODED_SIZE\" class=\"constant\">PACKED_ENCODED_SIZE</a>: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>The statically-known Non-standard Packed Mode ABI-encoded size of the type. <a href=\"alloy/dyn_abi/trait.SolType.html#associatedconstant.PACKED_ENCODED_SIZE\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.RustType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#associatedtype.RustType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" class=\"associatedtype\">RustType</a> = (&lt;T1 as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, &lt;T2 as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>)</h4></section></summary><div class='docblock'>The corresponding Rust type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Token\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#associatedtype.Token\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" class=\"associatedtype\">Token</a>&lt;'a&gt; = (&lt;T1 as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'a&gt;, &lt;T2 as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'a&gt;)</h4></section></summary><div class='docblock'>The corresponding <a href=\"alloy/dyn_abi/abi/trait.Token.html\" title=\"trait alloy::dyn_abi::abi::Token\">ABI token type</a>. <a href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.valid_token\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#method.valid_token\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#tymethod.valid_token\" class=\"fn\">valid_token</a>(token: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2)</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the given token can be detokenized with this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.detokenize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#method.detokenize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#tymethod.detokenize\" class=\"fn\">detokenize</a>(\n    token: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2)</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'_&gt;,\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2)</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a></h4></section></summary><div class='docblock'>Detokenize this type’s value from the given token. <a href=\"alloy/dyn_abi/trait.SolType.html#tymethod.detokenize\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DYNAMIC\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#124\">Source</a><a href=\"#associatedconstant.DYNAMIC\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"alloy/dyn_abi/trait.SolType.html#associatedconstant.DYNAMIC\" class=\"constant\">DYNAMIC</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a> = _</h4></section></summary><div class='docblock'>Whether the ABI-encoded size is dynamic. <a href=\"alloy/dyn_abi/trait.SolType.html#associatedconstant.DYNAMIC\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sol_type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#129\">Source</a><a href=\"#method.sol_type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.sol_type_name\" class=\"fn\">sol_type_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.6.3: use <code>SOL_NAME</code> instead</span></div></span><div class='docblock'>Returns the name of this type in Solidity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encoded_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#136\">Source</a><a href=\"#method.abi_encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encoded_size\" class=\"fn\">abi_encoded_size</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Calculate the ABI-encoded size of the data, counting both head and tail\nwords. For a single-word type this will always be 32.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_check\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#146\">Source</a><a href=\"#method.type_check\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.type_check\" class=\"fn\">type_check</a>(token: &amp;Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns an error if the given token cannot be detokenized with this\ntype.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tokenize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#163\">Source</a><a href=\"#method.tokenize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.tokenize\" class=\"fn\">tokenize</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'_&gt;<div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Tokenizes the given value into this type’s token. <a href=\"alloy/dyn_abi/trait.SolType.html#method.tokenize\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eip712_data_word\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#176\">Source</a><a href=\"#method.eip712_data_word\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.eip712_data_word\" class=\"fn\">eip712_data_word</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; <a class=\"struct\" href=\"alloy/primitives/struct.FixedBytes.html\" title=\"struct alloy::primitives::FixedBytes\">FixedBytes</a>&lt;32&gt;<div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encode this data according to EIP-712 <code>encodeData</code> rules, and hash it\nif necessary. <a href=\"alloy/dyn_abi/trait.SolType.html#method.eip712_data_word\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_packed_encoded_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#184\">Source</a><a href=\"#method.abi_packed_encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_packed_encoded_size\" class=\"fn\">abi_packed_encoded_size</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns the length of this value when ABI-encoded in Non-standard Packed Mode. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_packed_encoded_size\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_packed_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#192\">Source</a><a href=\"#method.abi_encode_packed_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_packed_to\" class=\"fn\">abi_encode_packed_to</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>, out: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;)<div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Non-standard Packed Mode ABI encoding. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_packed_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_packed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#205\">Source</a><a href=\"#method.abi_encode_packed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_packed\" class=\"fn\">abi_encode_packed</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Non-standard Packed Mode ABI encoding. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_packed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#216\">Source</a><a href=\"#method.abi_encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode\" class=\"fn\">abi_encode</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Tokenizes and ABI-encodes the given value by wrapping it in a\nsingle-element sequence. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_params\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#224-226\">Source</a><a href=\"#method.abi_encode_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_params\" class=\"fn\">abi_encode_params</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'a&gt;: for&lt;'a&gt; <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Tokenizes and ABI-encodes the given value as function parameters. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_params\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#235-237\">Source</a><a href=\"#method.abi_encode_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_sequence\" class=\"fn\">abi_encode_sequence</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'a&gt;: for&lt;'a&gt; <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Tokenizes and ABI-encodes the given value as a sequence. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_sequence\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#247\">Source</a><a href=\"#method.abi_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode\" class=\"fn\">abi_decode</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Decodes this type’s value from an ABI blob by interpreting it as a\nsingle-element sequence. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#259\">Source</a><a href=\"#method.abi_decode_validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_validate\" class=\"fn\">abi_decode_validate</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Decodes this type’s value from an ABI blob by interpreting it as\nsingle-element sequence, with validation. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_validate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_params\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#270-272\">Source</a><a href=\"#method.abi_decode_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_params\" class=\"fn\">abi_decode_params</a>&lt;'de&gt;(data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Decodes this type’s value from an ABI blob by interpreting it as\nfunction parameters. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_params\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_params_validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#285-287\">Source</a><a href=\"#method.abi_decode_params_validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_params_validate\" class=\"fn\">abi_decode_params_validate</a>&lt;'de&gt;(\n    data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Decodes this type’s value from an ABI blob by interpreting it as\nfunction parameters, with validation. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_params_validate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#299-301\">Source</a><a href=\"#method.abi_decode_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_sequence\" class=\"fn\">abi_decode_sequence</a>&lt;'de&gt;(data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Decodes this type’s value from an ABI blob by interpreting it as a\nsequence. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_sequence\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_sequence_validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#314-316\">Source</a><a href=\"#method.abi_decode_sequence_validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_sequence_validate\" class=\"fn\">abi_decode_sequence_validate</a>&lt;'de&gt;(\n    data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Decodes this type’s value from an ABI blob by interpreting it as\nsequence, with validation. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_sequence_validate\">Read more</a></div></details></div></details>","SolType","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SolType-for-(T1,+T2,+T3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#impl-SolType-for-(T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, T3&gt; <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2, T3)</a><div class=\"where\">where\n    T1: <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>,\n    T2: <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>,\n    T3: <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.SOL_NAME\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#associatedconstant.SOL_NAME\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"alloy/dyn_abi/trait.SolType.html#associatedconstant.SOL_NAME\" class=\"constant\">SOL_NAME</a>: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The name of this type in Solidity.</div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.ENCODED_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#associatedconstant.ENCODED_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"alloy/dyn_abi/trait.SolType.html#associatedconstant.ENCODED_SIZE\" class=\"constant\">ENCODED_SIZE</a>: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>The statically-known ABI-encoded size of the type. <a href=\"alloy/dyn_abi/trait.SolType.html#associatedconstant.ENCODED_SIZE\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.PACKED_ENCODED_SIZE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#associatedconstant.PACKED_ENCODED_SIZE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"alloy/dyn_abi/trait.SolType.html#associatedconstant.PACKED_ENCODED_SIZE\" class=\"constant\">PACKED_ENCODED_SIZE</a>: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a>&gt;</h4></section></summary><div class='docblock'>The statically-known Non-standard Packed Mode ABI-encoded size of the type. <a href=\"alloy/dyn_abi/trait.SolType.html#associatedconstant.PACKED_ENCODED_SIZE\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.RustType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#associatedtype.RustType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" class=\"associatedtype\">RustType</a> = (&lt;T1 as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, &lt;T2 as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, &lt;T3 as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>)</h4></section></summary><div class='docblock'>The corresponding Rust type.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Token\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#associatedtype.Token\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" class=\"associatedtype\">Token</a>&lt;'a&gt; = (&lt;T1 as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'a&gt;, &lt;T2 as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'a&gt;, &lt;T3 as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'a&gt;)</h4></section></summary><div class='docblock'>The corresponding <a href=\"alloy/dyn_abi/abi/trait.Token.html\" title=\"trait alloy::dyn_abi::abi::Token\">ABI token type</a>. <a href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.valid_token\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#method.valid_token\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#tymethod.valid_token\" class=\"fn\">valid_token</a>(token: &amp;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2, T3)</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'_&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> if the given token can be detokenized with this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.detokenize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/data_type.rs.html#820\">Source</a><a href=\"#method.detokenize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#tymethod.detokenize\" class=\"fn\">detokenize</a>(\n    token: &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2, T3)</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'_&gt;,\n) -&gt; &lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2, T3)</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a></h4></section></summary><div class='docblock'>Detokenize this type’s value from the given token. <a href=\"alloy/dyn_abi/trait.SolType.html#tymethod.detokenize\">Read more</a></div></details><details class=\"toggle\" open><summary><section id=\"associatedconstant.DYNAMIC\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#124\">Source</a><a href=\"#associatedconstant.DYNAMIC\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"alloy/dyn_abi/trait.SolType.html#associatedconstant.DYNAMIC\" class=\"constant\">DYNAMIC</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a> = _</h4></section></summary><div class='docblock'>Whether the ABI-encoded size is dynamic. <a href=\"alloy/dyn_abi/trait.SolType.html#associatedconstant.DYNAMIC\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sol_type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#129\">Source</a><a href=\"#method.sol_type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.sol_type_name\" class=\"fn\">sol_type_name</a>() -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.6.3: use <code>SOL_NAME</code> instead</span></div></span><div class='docblock'>Returns the name of this type in Solidity.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encoded_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#136\">Source</a><a href=\"#method.abi_encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encoded_size\" class=\"fn\">abi_encoded_size</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Calculate the ABI-encoded size of the data, counting both head and tail\nwords. For a single-word type this will always be 32.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.type_check\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#146\">Source</a><a href=\"#method.type_check\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.type_check\" class=\"fn\">type_check</a>(token: &amp;Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Returns an error if the given token cannot be detokenized with this\ntype.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tokenize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#163\">Source</a><a href=\"#method.tokenize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.tokenize\" class=\"fn\">tokenize</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'_&gt;<div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Tokenizes the given value into this type’s token. <a href=\"alloy/dyn_abi/trait.SolType.html#method.tokenize\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eip712_data_word\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#176\">Source</a><a href=\"#method.eip712_data_word\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.eip712_data_word\" class=\"fn\">eip712_data_word</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; <a class=\"struct\" href=\"alloy/primitives/struct.FixedBytes.html\" title=\"struct alloy::primitives::FixedBytes\">FixedBytes</a>&lt;32&gt;<div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Encode this data according to EIP-712 <code>encodeData</code> rules, and hash it\nif necessary. <a href=\"alloy/dyn_abi/trait.SolType.html#method.eip712_data_word\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_packed_encoded_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#184\">Source</a><a href=\"#method.abi_packed_encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_packed_encoded_size\" class=\"fn\">abi_packed_encoded_size</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a><div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns the length of this value when ABI-encoded in Non-standard Packed Mode. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_packed_encoded_size\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_packed_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#192\">Source</a><a href=\"#method.abi_encode_packed_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_packed_to\" class=\"fn\">abi_encode_packed_to</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>, out: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;)<div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Non-standard Packed Mode ABI encoding. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_packed_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_packed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#205\">Source</a><a href=\"#method.abi_encode_packed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_packed\" class=\"fn\">abi_encode_packed</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Non-standard Packed Mode ABI encoding. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_packed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#216\">Source</a><a href=\"#method.abi_encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode\" class=\"fn\">abi_encode</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Tokenizes and ABI-encodes the given value by wrapping it in a\nsingle-element sequence. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_params\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#224-226\">Source</a><a href=\"#method.abi_encode_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_params\" class=\"fn\">abi_encode_params</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'a&gt;: for&lt;'a&gt; <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Tokenizes and ABI-encodes the given value as function parameters. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_params\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#235-237\">Source</a><a href=\"#method.abi_encode_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_sequence\" class=\"fn\">abi_encode_sequence</a>&lt;E&gt;(rust: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;E</a>) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    E: SolTypeValue&lt;Self&gt; + ?<a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'a&gt;: for&lt;'a&gt; <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Tokenizes and ABI-encodes the given value as a sequence. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_encode_sequence\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#247\">Source</a><a href=\"#method.abi_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode\" class=\"fn\">abi_decode</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Decodes this type’s value from an ABI blob by interpreting it as a\nsingle-element sequence. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#259\">Source</a><a href=\"#method.abi_decode_validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_validate\" class=\"fn\">abi_decode_validate</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Decodes this type’s value from an ABI blob by interpreting it as\nsingle-element sequence, with validation. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_validate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_params\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#270-272\">Source</a><a href=\"#method.abi_decode_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_params\" class=\"fn\">abi_decode_params</a>&lt;'de&gt;(data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Decodes this type’s value from an ABI blob by interpreting it as\nfunction parameters. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_params\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_params_validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#285-287\">Source</a><a href=\"#method.abi_decode_params_validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_params_validate\" class=\"fn\">abi_decode_params_validate</a>&lt;'de&gt;(\n    data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Decodes this type’s value from an ABI blob by interpreting it as\nfunction parameters, with validation. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_params_validate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#299-301\">Source</a><a href=\"#method.abi_decode_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_sequence\" class=\"fn\">abi_decode_sequence</a>&lt;'de&gt;(data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Decodes this type’s value from an ABI blob by interpreting it as a\nsequence. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_sequence\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_sequence_validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/ty.rs.html#314-316\">Source</a><a href=\"#method.abi_decode_sequence_validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_sequence_validate\" class=\"fn\">abi_decode_sequence_validate</a>&lt;'de&gt;(\n    data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>],\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Decodes this type’s value from an ABI blob by interpreting it as\nsequence, with validation. <a href=\"alloy/dyn_abi/trait.SolType.html#method.abi_decode_sequence_validate\">Read more</a></div></details></div></details>","SolType","alloy::signers::k256::elliptic_curve::weierstrass::ProjectivePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SolValue-for-(T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#317\">Source</a><a href=\"#impl-SolValue-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2&gt; <a class=\"trait\" href=\"alloy/sol_types/trait.SolValue.html\" title=\"trait alloy::sol_types::SolValue\">SolValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: <a class=\"trait\" href=\"alloy/sol_types/trait.SolValue.html\" title=\"trait alloy::sol_types::SolValue\">SolValue</a>,\n    T2: <a class=\"trait\" href=\"alloy/sol_types/trait.SolValue.html\" title=\"trait alloy::sol_types::SolValue\">SolValue</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.SolType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#317\">Source</a><a href=\"#associatedtype.SolType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" class=\"associatedtype\">SolType</a> = (&lt;T1 as <a class=\"trait\" href=\"alloy/sol_types/trait.SolValue.html\" title=\"trait alloy::sol_types::SolValue\">SolValue</a>&gt;::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a>, &lt;T2 as <a class=\"trait\" href=\"alloy/sol_types/trait.SolValue.html\" title=\"trait alloy::sol_types::SolValue\">SolValue</a>&gt;::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a>)</h4></section></summary><div class='docblock'>The Solidity type that this type corresponds to.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sol_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#43\">Source</a><a href=\"#method.sol_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.sol_name\" class=\"fn\">sol_name</a>(&amp;self) -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The name of the associated Solidity type. <a href=\"alloy/sol_types/trait.SolValue.html#method.sol_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sol_type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#52\">Source</a><a href=\"#method.sol_type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.sol_type_name\" class=\"fn\">sol_type_name</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.6.3: use <code>sol_name</code> instead</span></div></span><div class='docblock'>The name of the associated Solidity type. <a href=\"alloy/sol_types/trait.SolValue.html#method.sol_type_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tokenize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#60\">Source</a><a href=\"#method.tokenize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.tokenize\" class=\"fn\">tokenize</a>(&amp;self) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Tokenizes the given value into this type’s token. <a href=\"alloy/sol_types/trait.SolValue.html#method.tokenize\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.detokenize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#68-70\">Source</a><a href=\"#method.detokenize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.detokenize\" class=\"fn\">detokenize</a>(token: &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'_&gt;) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>&gt;,</div></h4></section></summary><div class='docblock'>Detokenize a value from the given token. <a href=\"alloy/sol_types/trait.SolValue.html#method.detokenize\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encoded_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#79\">Source</a><a href=\"#method.abi_encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encoded_size\" class=\"fn\">abi_encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculate the ABI-encoded size of the data. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encoded_size\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eip712_data_word\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#88\">Source</a><a href=\"#method.eip712_data_word\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.eip712_data_word\" class=\"fn\">eip712_data_word</a>(&amp;self) -&gt; <a class=\"struct\" href=\"alloy/primitives/struct.FixedBytes.html\" title=\"struct alloy::primitives::FixedBytes\">FixedBytes</a>&lt;32&gt;</h4></section></summary><div class='docblock'>Encode this data according to EIP-712 <code>encodeData</code> rules, and hash it\nif necessary. <a href=\"alloy/sol_types/trait.SolValue.html#method.eip712_data_word\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_packed_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#96\">Source</a><a href=\"#method.abi_encode_packed_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_packed_to\" class=\"fn\">abi_encode_packed_to</a>(&amp;self, out: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Non-standard Packed Mode ABI encoding. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_packed_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_packed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#104\">Source</a><a href=\"#method.abi_encode_packed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_packed\" class=\"fn\">abi_encode_packed</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Non-standard Packed Mode ABI encoding. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_packed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#114\">Source</a><a href=\"#method.abi_encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode\" class=\"fn\">abi_encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>ABI-encodes the value. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#122-124\">Source</a><a href=\"#method.abi_encode_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_sequence\" class=\"fn\">abi_encode_sequence</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'a&gt;: for&lt;'a&gt; <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Encodes an ABI sequence. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_sequence\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_params\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#133-135\">Source</a><a href=\"#method.abi_encode_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_params\" class=\"fn\">abi_encode_params</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'a&gt;: for&lt;'a&gt; <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Encodes an ABI sequence suitable for function parameters. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_params\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#143-145\">Source</a><a href=\"#method.abi_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode\" class=\"fn\">abi_decode</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>&gt;,</div></h4></section></summary><div class='docblock'>ABI-decode this type from the given data. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#153-155\">Source</a><a href=\"#method.abi_decode_validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_validate\" class=\"fn\">abi_decode_validate</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>&gt;,</div></h4></section></summary><div class='docblock'>ABI-decode this type from the given data, with validation. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_validate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_params\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#164-167\">Source</a><a href=\"#method.abi_decode_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_params\" class=\"fn\">abi_decode_params</a>&lt;'de&gt;(data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>&gt;,\n    &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>ABI-decode this type from the given data. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_params\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_params_validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#176-179\">Source</a><a href=\"#method.abi_decode_params_validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_params_validate\" class=\"fn\">abi_decode_params_validate</a>&lt;'de&gt;(data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>&gt;,\n    &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>ABI-decode this type from the given data, with validation. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_params_validate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#188-191\">Source</a><a href=\"#method.abi_decode_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_sequence\" class=\"fn\">abi_decode_sequence</a>&lt;'de&gt;(data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>&gt;,\n    &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>ABI-decode this type from the given data. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_sequence\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_sequence_validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#200-203\">Source</a><a href=\"#method.abi_decode_sequence_validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_sequence_validate\" class=\"fn\">abi_decode_sequence_validate</a>&lt;'de&gt;(data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>&gt;,\n    &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>ABI-decode this type from the given data, with validation. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_sequence_validate\">Read more</a></div></details></div></details>","SolValue","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SolValue-for-(T1,+T2,+T3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#317\">Source</a><a href=\"#impl-SolValue-for-(T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T1, T2, T3&gt; <a class=\"trait\" href=\"alloy/sol_types/trait.SolValue.html\" title=\"trait alloy::sol_types::SolValue\">SolValue</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2, T3)</a><div class=\"where\">where\n    T1: <a class=\"trait\" href=\"alloy/sol_types/trait.SolValue.html\" title=\"trait alloy::sol_types::SolValue\">SolValue</a>,\n    T2: <a class=\"trait\" href=\"alloy/sol_types/trait.SolValue.html\" title=\"trait alloy::sol_types::SolValue\">SolValue</a>,\n    T3: <a class=\"trait\" href=\"alloy/sol_types/trait.SolValue.html\" title=\"trait alloy::sol_types::SolValue\">SolValue</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.SolType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#317\">Source</a><a href=\"#associatedtype.SolType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" class=\"associatedtype\">SolType</a> = (&lt;T1 as <a class=\"trait\" href=\"alloy/sol_types/trait.SolValue.html\" title=\"trait alloy::sol_types::SolValue\">SolValue</a>&gt;::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a>, &lt;T2 as <a class=\"trait\" href=\"alloy/sol_types/trait.SolValue.html\" title=\"trait alloy::sol_types::SolValue\">SolValue</a>&gt;::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a>, &lt;T3 as <a class=\"trait\" href=\"alloy/sol_types/trait.SolValue.html\" title=\"trait alloy::sol_types::SolValue\">SolValue</a>&gt;::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a>)</h4></section></summary><div class='docblock'>The Solidity type that this type corresponds to.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sol_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#43\">Source</a><a href=\"#method.sol_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.sol_name\" class=\"fn\">sol_name</a>(&amp;self) -&gt; &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The name of the associated Solidity type. <a href=\"alloy/sol_types/trait.SolValue.html#method.sol_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sol_type_name\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#52\">Source</a><a href=\"#method.sol_type_name\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.sol_type_name\" class=\"fn\">sol_type_name</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">👎</span><span>Deprecated since 0.6.3: use <code>sol_name</code> instead</span></div></span><div class='docblock'>The name of the associated Solidity type. <a href=\"alloy/sol_types/trait.SolValue.html#method.sol_type_name\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tokenize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#60\">Source</a><a href=\"#method.tokenize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.tokenize\" class=\"fn\">tokenize</a>(&amp;self) -&gt; &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'_&gt;</h4></section></summary><div class='docblock'>Tokenizes the given value into this type’s token. <a href=\"alloy/sol_types/trait.SolValue.html#method.tokenize\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.detokenize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#68-70\">Source</a><a href=\"#method.detokenize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.detokenize\" class=\"fn\">detokenize</a>(token: &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'_&gt;) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>&gt;,</div></h4></section></summary><div class='docblock'>Detokenize a value from the given token. <a href=\"alloy/sol_types/trait.SolValue.html#method.detokenize\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encoded_size\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#79\">Source</a><a href=\"#method.abi_encoded_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encoded_size\" class=\"fn\">abi_encoded_size</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculate the ABI-encoded size of the data. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encoded_size\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.eip712_data_word\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#88\">Source</a><a href=\"#method.eip712_data_word\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.eip712_data_word\" class=\"fn\">eip712_data_word</a>(&amp;self) -&gt; <a class=\"struct\" href=\"alloy/primitives/struct.FixedBytes.html\" title=\"struct alloy::primitives::FixedBytes\">FixedBytes</a>&lt;32&gt;</h4></section></summary><div class='docblock'>Encode this data according to EIP-712 <code>encodeData</code> rules, and hash it\nif necessary. <a href=\"alloy/sol_types/trait.SolValue.html#method.eip712_data_word\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_packed_to\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#96\">Source</a><a href=\"#method.abi_encode_packed_to\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_packed_to\" class=\"fn\">abi_encode_packed_to</a>(&amp;self, out: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;)</h4></section></summary><div class='docblock'>Non-standard Packed Mode ABI encoding. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_packed_to\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_packed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#104\">Source</a><a href=\"#method.abi_encode_packed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_packed\" class=\"fn\">abi_encode_packed</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>Non-standard Packed Mode ABI encoding. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_packed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#114\">Source</a><a href=\"#method.abi_encode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode\" class=\"fn\">abi_encode</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a></h4></section></summary><div class='docblock'>ABI-encodes the value. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#122-124\">Source</a><a href=\"#method.abi_encode_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_sequence\" class=\"fn\">abi_encode_sequence</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'a&gt;: for&lt;'a&gt; <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Encodes an ABI sequence. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_sequence\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_encode_params\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#133-135\">Source</a><a href=\"#method.abi_encode_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_params\" class=\"fn\">abi_encode_params</a>(&amp;self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Vec&lt;u8&gt;\">ⓘ</a><div class=\"where\">where\n    &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'a&gt;: for&lt;'a&gt; <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'a&gt;,</div></h4></section></summary><div class='docblock'>Encodes an ABI sequence suitable for function parameters. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_encode_params\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#143-145\">Source</a><a href=\"#method.abi_decode\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode\" class=\"fn\">abi_decode</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>&gt;,</div></h4></section></summary><div class='docblock'>ABI-decode this type from the given data. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#153-155\">Source</a><a href=\"#method.abi_decode_validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_validate\" class=\"fn\">abi_decode_validate</a>(data: &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>&gt;,</div></h4></section></summary><div class='docblock'>ABI-decode this type from the given data, with validation. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_validate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_params\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#164-167\">Source</a><a href=\"#method.abi_decode_params\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_params\" class=\"fn\">abi_decode_params</a>&lt;'de&gt;(data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>&gt;,\n    &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>ABI-decode this type from the given data. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_params\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_params_validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#176-179\">Source</a><a href=\"#method.abi_decode_params_validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_params_validate\" class=\"fn\">abi_decode_params_validate</a>&lt;'de&gt;(data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>&gt;,\n    &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>ABI-decode this type from the given data, with validation. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_params_validate\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#188-191\">Source</a><a href=\"#method.abi_decode_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_sequence\" class=\"fn\">abi_decode_sequence</a>&lt;'de&gt;(data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>&gt;,\n    &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>ABI-decode this type from the given data. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_sequence\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abi_decode_sequence_validate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/value.rs.html#200-203\">Source</a><a href=\"#method.abi_decode_sequence_validate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_sequence_validate\" class=\"fn\">abi_decode_sequence_validate</a>&lt;'de&gt;(data: &amp;'de [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>]) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>&gt;,\n    &lt;Self::<a class=\"associatedtype\" href=\"alloy/sol_types/trait.SolValue.html#associatedtype.SolType\" title=\"type alloy::sol_types::SolValue::SolType\">SolType</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.Token\" title=\"type alloy::dyn_abi::SolType::Token\">Token</a>&lt;'de&gt;: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>ABI-decode this type from the given data, with validation. <a href=\"alloy/sol_types/trait.SolValue.html#method.abi_decode_sequence_validate\">Read more</a></div></details></div></details>","SolValue","alloy::signers::k256::elliptic_curve::weierstrass::ProjectivePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Token%3C'de%3E-for-(T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#impl-Token%3C'de%3E-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T1, T2&gt; <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.Token.html\" title=\"trait alloy::dyn_abi::abi::Token\">Token</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.Token.html\" title=\"trait alloy::dyn_abi::abi::Token\">Token</a>&lt;'de&gt;,\n    T2: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.Token.html\" title=\"trait alloy::dyn_abi::abi::Token\">Token</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.DYNAMIC\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#associatedconstant.DYNAMIC\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"alloy/dyn_abi/abi/trait.Token.html#associatedconstant.DYNAMIC\" class=\"constant\">DYNAMIC</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>True if the token represents a dynamically-sized type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#method.decode_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.Token.html#tymethod.decode_from\" class=\"fn\">decode_from</a>(dec: &amp;mut <a class=\"struct\" href=\"alloy/dyn_abi/struct.Decoder.html\" title=\"struct alloy::dyn_abi::Decoder\">Decoder</a>&lt;'de&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2)</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Decode a token from a decoder.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.head_words\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#method.head_words\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.Token.html#tymethod.head_words\" class=\"fn\">head_words</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculate the number of head words.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tail_words\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#method.tail_words\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.Token.html#tymethod.tail_words\" class=\"fn\">tail_words</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculate the number of tail words.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.head_append\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#method.head_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.Token.html#tymethod.head_append\" class=\"fn\">head_append</a>(&amp;self, enc: &amp;mut <a class=\"struct\" href=\"alloy/dyn_abi/struct.Encoder.html\" title=\"struct alloy::dyn_abi::Encoder\">Encoder</a>)</h4></section></summary><div class='docblock'>Append head words to the encoder.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tail_append\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#method.tail_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.Token.html#tymethod.tail_append\" class=\"fn\">tail_append</a>(&amp;self, enc: &amp;mut <a class=\"struct\" href=\"alloy/dyn_abi/struct.Encoder.html\" title=\"struct alloy::dyn_abi::Encoder\">Encoder</a>)</h4></section></summary><div class='docblock'>Append tail words to the encoder.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_words\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#69\">Source</a><a href=\"#method.total_words\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.Token.html#method.total_words\" class=\"fn\">total_words</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculate the total number of head and tail words.</div></details></div></details>","Token<'de>","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Token%3C'de%3E-for-(T1,+T2,+T3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#impl-Token%3C'de%3E-for-(T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T1, T2, T3&gt; <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.Token.html\" title=\"trait alloy::dyn_abi::abi::Token\">Token</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2, T3)</a><div class=\"where\">where\n    T1: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.Token.html\" title=\"trait alloy::dyn_abi::abi::Token\">Token</a>&lt;'de&gt;,\n    T2: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.Token.html\" title=\"trait alloy::dyn_abi::abi::Token\">Token</a>&lt;'de&gt;,\n    T3: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.Token.html\" title=\"trait alloy::dyn_abi::abi::Token\">Token</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.DYNAMIC\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#associatedconstant.DYNAMIC\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"alloy/dyn_abi/abi/trait.Token.html#associatedconstant.DYNAMIC\" class=\"constant\">DYNAMIC</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>True if the token represents a dynamically-sized type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#method.decode_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.Token.html#tymethod.decode_from\" class=\"fn\">decode_from</a>(dec: &amp;mut <a class=\"struct\" href=\"alloy/dyn_abi/struct.Decoder.html\" title=\"struct alloy::dyn_abi::Decoder\">Decoder</a>&lt;'de&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2, T3)</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Decode a token from a decoder.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.head_words\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#method.head_words\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.Token.html#tymethod.head_words\" class=\"fn\">head_words</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculate the number of head words.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tail_words\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#method.tail_words\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.Token.html#tymethod.tail_words\" class=\"fn\">tail_words</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculate the number of tail words.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.head_append\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#method.head_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.Token.html#tymethod.head_append\" class=\"fn\">head_append</a>(&amp;self, enc: &amp;mut <a class=\"struct\" href=\"alloy/dyn_abi/struct.Encoder.html\" title=\"struct alloy::dyn_abi::Encoder\">Encoder</a>)</h4></section></summary><div class='docblock'>Append head words to the encoder.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.tail_append\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#method.tail_append\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.Token.html#tymethod.tail_append\" class=\"fn\">tail_append</a>(&amp;self, enc: &amp;mut <a class=\"struct\" href=\"alloy/dyn_abi/struct.Encoder.html\" title=\"struct alloy::dyn_abi::Encoder\">Encoder</a>)</h4></section></summary><div class='docblock'>Append tail words to the encoder.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.total_words\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#69\">Source</a><a href=\"#method.total_words\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.Token.html#method.total_words\" class=\"fn\">total_words</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Calculate the total number of head and tail words.</div></details></div></details>","Token<'de>","alloy::signers::k256::elliptic_curve::weierstrass::ProjectivePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TokenSeq%3C'de%3E-for-(T1,+T2)\" class=\"impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#impl-TokenSeq%3C'de%3E-for-(T1,+T2)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T1, T2&gt; <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2)</a><div class=\"where\">where\n    T1: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.Token.html\" title=\"trait alloy::dyn_abi::abi::Token\">Token</a>&lt;'de&gt;,\n    T2: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.Token.html\" title=\"trait alloy::dyn_abi::abi::Token\">Token</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_TUPLE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#associatedconstant.IS_TUPLE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"alloy/dyn_abi/abi/trait.TokenSeq.html#associatedconstant.IS_TUPLE\" class=\"constant\">IS_TUPLE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a> = true</h4></section></summary><div class='docblock'>True for tuples only.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#method.encode_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.TokenSeq.html#tymethod.encode_sequence\" class=\"fn\">encode_sequence</a>(&amp;self, enc: &amp;mut <a class=\"struct\" href=\"alloy/dyn_abi/struct.Encoder.html\" title=\"struct alloy::dyn_abi::Encoder\">Encoder</a>)</h4></section></summary><div class='docblock'>ABI-encode the token sequence into the encoder.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#method.decode_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.TokenSeq.html#tymethod.decode_sequence\" class=\"fn\">decode_sequence</a>(dec: &amp;mut <a class=\"struct\" href=\"alloy/dyn_abi/struct.Decoder.html\" title=\"struct alloy::dyn_abi::Decoder\">Decoder</a>&lt;'de&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2)</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>ABI-decode the token sequence from the encoder.</div></details></div></details>","TokenSeq<'de>","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TokenSeq%3C'de%3E-for-(T1,+T2,+T3)\" class=\"impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#impl-TokenSeq%3C'de%3E-for-(T1,+T2,+T3)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T1, T2, T3&gt; <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.TokenSeq.html\" title=\"trait alloy::dyn_abi::abi::TokenSeq\">TokenSeq</a>&lt;'de&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2, T3)</a><div class=\"where\">where\n    T1: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.Token.html\" title=\"trait alloy::dyn_abi::abi::Token\">Token</a>&lt;'de&gt;,\n    T2: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.Token.html\" title=\"trait alloy::dyn_abi::abi::Token\">Token</a>&lt;'de&gt;,\n    T3: <a class=\"trait\" href=\"alloy/dyn_abi/abi/trait.Token.html\" title=\"trait alloy::dyn_abi::abi::Token\">Token</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.IS_TUPLE\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#associatedconstant.IS_TUPLE\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"alloy/dyn_abi/abi/trait.TokenSeq.html#associatedconstant.IS_TUPLE\" class=\"constant\">IS_TUPLE</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a> = true</h4></section></summary><div class='docblock'>True for tuples only.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.encode_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#method.encode_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.TokenSeq.html#tymethod.encode_sequence\" class=\"fn\">encode_sequence</a>(&amp;self, enc: &amp;mut <a class=\"struct\" href=\"alloy/dyn_abi/struct.Encoder.html\" title=\"struct alloy::dyn_abi::Encoder\">Encoder</a>)</h4></section></summary><div class='docblock'>ABI-encode the token sequence into the encoder.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.decode_sequence\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/abi/token.rs.html#653\">Source</a><a href=\"#method.decode_sequence\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/dyn_abi/abi/trait.TokenSeq.html#tymethod.decode_sequence\" class=\"fn\">decode_sequence</a>(dec: &amp;mut <a class=\"struct\" href=\"alloy/dyn_abi/struct.Decoder.html\" title=\"struct alloy::dyn_abi::Decoder\">Decoder</a>&lt;'de&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T1, T2, T3)</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>ABI-decode the token sequence from the encoder.</div></details></div></details>","TokenSeq<'de>","alloy::signers::k256::elliptic_curve::weierstrass::ProjectivePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TopicList-for-(T,+U)\" class=\"impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/event/topic_list.rs.html#73-78\">Source</a><a href=\"#impl-TopicList-for-(T,+U)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'b, T, U&gt; <a class=\"trait\" href=\"alloy/sol_types/trait.TopicList.html\" title=\"trait alloy::sol_types::TopicList\">TopicList</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T, U)</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&lt;Token&lt;'a&gt; = <a class=\"struct\" href=\"alloy/dyn_abi/abi/token/struct.WordToken.html\" title=\"struct alloy::dyn_abi::abi::token::WordToken\">WordToken</a>&gt;,\n    U: <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&lt;Token&lt;'b&gt; = <a class=\"struct\" href=\"alloy/dyn_abi/abi/token/struct.WordToken.html\" title=\"struct alloy::dyn_abi::abi::token::WordToken\">WordToken</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.COUNT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/event/topic_list.rs.html#73-78\">Source</a><a href=\"#associatedconstant.COUNT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"alloy/sol_types/trait.TopicList.html#associatedconstant.COUNT\" class=\"constant\">COUNT</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a> = 2usize</h4></section></summary><div class='docblock'>The number of topics.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.detokenize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/event/topic_list.rs.html#73-78\">Source</a><a href=\"#method.detokenize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.TopicList.html#tymethod.detokenize\" class=\"fn\">detokenize</a>&lt;I, D&gt;(topics: I) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T, U)</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = D&gt;,\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"alloy/dyn_abi/abi/token/struct.WordToken.html\" title=\"struct alloy::dyn_abi::abi::token::WordToken\">WordToken</a>&gt;,</div></h4></section></summary><div class='docblock'>Detokenize the topics into a tuple of rust types. <a href=\"alloy/sol_types/trait.TopicList.html#tymethod.detokenize\">Read more</a></div></details></div></details>","TopicList","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TopicList-for-(T,+U,+V)\" class=\"impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/event/topic_list.rs.html#73-78\">Source</a><a href=\"#impl-TopicList-for-(T,+U,+V)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, 'b, 'c, T, U, V&gt; <a class=\"trait\" href=\"alloy/sol_types/trait.TopicList.html\" title=\"trait alloy::sol_types::TopicList\">TopicList</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T, U, V)</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&lt;Token&lt;'a&gt; = <a class=\"struct\" href=\"alloy/dyn_abi/abi/token/struct.WordToken.html\" title=\"struct alloy::dyn_abi::abi::token::WordToken\">WordToken</a>&gt;,\n    U: <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&lt;Token&lt;'b&gt; = <a class=\"struct\" href=\"alloy/dyn_abi/abi/token/struct.WordToken.html\" title=\"struct alloy::dyn_abi::abi::token::WordToken\">WordToken</a>&gt;,\n    V: <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&lt;Token&lt;'c&gt; = <a class=\"struct\" href=\"alloy/dyn_abi/abi/token/struct.WordToken.html\" title=\"struct alloy::dyn_abi::abi::token::WordToken\">WordToken</a>&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedconstant.COUNT\" class=\"associatedconstant trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/event/topic_list.rs.html#73-78\">Source</a><a href=\"#associatedconstant.COUNT\" class=\"anchor\">§</a><h4 class=\"code-header\">const <a href=\"alloy/sol_types/trait.TopicList.html#associatedconstant.COUNT\" class=\"constant\">COUNT</a>: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.usize.html\">usize</a> = 3usize</h4></section></summary><div class='docblock'>The number of topics.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.detokenize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/alloy_sol_types/types/event/topic_list.rs.html#73-78\">Source</a><a href=\"#method.detokenize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/sol_types/trait.TopicList.html#tymethod.detokenize\" class=\"fn\">detokenize</a>&lt;I, D&gt;(\n    topics: I,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T, U, V)</a> as <a class=\"trait\" href=\"alloy/dyn_abi/trait.SolType.html\" title=\"trait alloy::dyn_abi::SolType\">SolType</a>&gt;::<a class=\"associatedtype\" href=\"alloy/dyn_abi/trait.SolType.html#associatedtype.RustType\" title=\"type alloy::dyn_abi::SolType::RustType\">RustType</a>, <a class=\"enum\" href=\"alloy/sol_types/enum.Error.html\" title=\"enum alloy::sol_types::Error\">Error</a>&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = D&gt;,\n    D: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"alloy/dyn_abi/abi/token/struct.WordToken.html\" title=\"struct alloy::dyn_abi::abi::token::WordToken\">WordToken</a>&gt;,</div></h4></section></summary><div class='docblock'>Detokenize the topics into a tuple of rust types. <a href=\"alloy/sol_types/trait.TopicList.html#tymethod.detokenize\">Read more</a></div></details></div></details>","TopicList","alloy::signers::k256::elliptic_curve::weierstrass::ProjectivePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/zeroize/lib.rs.html#532\">Source</a><a href=\"#impl-Zeroize-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.Zeroize.html\" title=\"trait alloy::signers::k256::elliptic_curve::bigint::zeroize::Zeroize\">Zeroize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.Zeroize.html\" title=\"trait alloy::signers::k256::elliptic_curve::bigint::zeroize::Zeroize\">Zeroize</a>,\n    B: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.Zeroize.html\" title=\"trait alloy::signers::k256::elliptic_curve::bigint::zeroize::Zeroize\">Zeroize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zeroize/lib.rs.html#532\">Source</a><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.Zeroize.html#tymethod.zeroize\" class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroize-for-(A,+B,+C)\" class=\"impl\"><a class=\"src rightside\" href=\"src/zeroize/lib.rs.html#533\">Source</a><a href=\"#impl-Zeroize-for-(A,+B,+C)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C&gt; <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.Zeroize.html\" title=\"trait alloy::signers::k256::elliptic_curve::bigint::zeroize::Zeroize\">Zeroize</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.Zeroize.html\" title=\"trait alloy::signers::k256::elliptic_curve::bigint::zeroize::Zeroize\">Zeroize</a>,\n    B: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.Zeroize.html\" title=\"trait alloy::signers::k256::elliptic_curve::bigint::zeroize::Zeroize\">Zeroize</a>,\n    C: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.Zeroize.html\" title=\"trait alloy::signers::k256::elliptic_curve::bigint::zeroize::Zeroize\">Zeroize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zeroize/lib.rs.html#533\">Source</a><a href=\"#method.zeroize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.Zeroize.html#tymethod.zeroize\" class=\"fn\">zeroize</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Zero out this object from memory using Rust intrinsics which ensure the\nzeroization operation is not “optimized away” by the compiler.</div></details></div></details>","Zeroize","alloy::signers::k256::elliptic_curve::weierstrass::ProjectivePoint"],["<section id=\"impl-ZeroizeOnDrop-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/zeroize/lib.rs.html#532\">Source</a><a href=\"#impl-ZeroizeOnDrop-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B&gt; <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.ZeroizeOnDrop.html\" title=\"trait alloy::signers::k256::elliptic_curve::bigint::zeroize::ZeroizeOnDrop\">ZeroizeOnDrop</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.ZeroizeOnDrop.html\" title=\"trait alloy::signers::k256::elliptic_curve::bigint::zeroize::ZeroizeOnDrop\">ZeroizeOnDrop</a>,\n    B: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.ZeroizeOnDrop.html\" title=\"trait alloy::signers::k256::elliptic_curve::bigint::zeroize::ZeroizeOnDrop\">ZeroizeOnDrop</a>,</div></h3></section>","ZeroizeOnDrop","alloy::signers::k256::elliptic_curve::weierstrass::AffinePoint"],["<section id=\"impl-ZeroizeOnDrop-for-(A,+B,+C)\" class=\"impl\"><a class=\"src rightside\" href=\"src/zeroize/lib.rs.html#533\">Source</a><a href=\"#impl-ZeroizeOnDrop-for-(A,+B,+C)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A, B, C&gt; <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.ZeroizeOnDrop.html\" title=\"trait alloy::signers::k256::elliptic_curve::bigint::zeroize::ZeroizeOnDrop\">ZeroizeOnDrop</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B, C)</a><div class=\"where\">where\n    A: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.ZeroizeOnDrop.html\" title=\"trait alloy::signers::k256::elliptic_curve::bigint::zeroize::ZeroizeOnDrop\">ZeroizeOnDrop</a>,\n    B: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.ZeroizeOnDrop.html\" title=\"trait alloy::signers::k256::elliptic_curve::bigint::zeroize::ZeroizeOnDrop\">ZeroizeOnDrop</a>,\n    C: <a class=\"trait\" href=\"alloy/signers/k256/elliptic_curve/bigint/zeroize/trait.ZeroizeOnDrop.html\" title=\"trait alloy::signers::k256::elliptic_curve::bigint::zeroize::ZeroizeOnDrop\">ZeroizeOnDrop</a>,</div></h3></section>","ZeroizeOnDrop","alloy::signers::k256::elliptic_curve::weierstrass::ProjectivePoint"]]],["ark_ec",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#69\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA,)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A,)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#69\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA,)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA,)>","ark_ec::models::bls12::g2::EllCoeff","ark_ec::models::bn::g2::EllCoeff"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#70\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#70\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB)>","ark_ec::models::bls12::g2::EllCoeff","ark_ec::models::bn::g2::EllCoeff"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#71\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B, C)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#71\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC)>","ark_ec::models::bls12::g2::EllCoeff","ark_ec::models::bn::g2::EllCoeff"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#72\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B, C, D)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#72\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD)>","ark_ec::models::bls12::g2::EllCoeff","ark_ec::models::bn::g2::EllCoeff"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#73\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B, C, D, E)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#73\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE)>","ark_ec::models::bls12::g2::EllCoeff","ark_ec::models::bn::g2::EllCoeff"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#74\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B, C, D, E, F)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#74\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF)>","ark_ec::models::bls12::g2::EllCoeff","ark_ec::models::bn::g2::EllCoeff"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#75\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#75\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG)>","ark_ec::models::bls12::g2::EllCoeff","ark_ec::models::bn::g2::EllCoeff"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#76\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#76\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH)>","ark_ec::models::bls12::g2::EllCoeff","ark_ec::models::bn::g2::EllCoeff"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#77\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#77\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI)>","ark_ec::models::bls12::g2::EllCoeff","ark_ec::models::bn::g2::EllCoeff"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#78\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#78\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ)>","ark_ec::models::bls12::g2::EllCoeff","ark_ec::models::bn::g2::EllCoeff"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#79\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#79\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK)>","ark_ec::models::bls12::g2::EllCoeff","ark_ec::models::bn::g2::EllCoeff"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#80\">Source</a><a href=\"#impl-MultiUnzip%3C(FromA,+FromB,+FromC,+FromD,+FromE,+FromF,+FromG,+FromH,+FromI,+FromJ,+FromK,+FromL)%3E-for-IT\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;IT, A, FromA, B, FromB, C, FromC, D, FromD, E, FromE, F, FromF, G, FromG, H, FromH, I, FromI, J, FromJ, K, FromK, L, FromL&gt; <a class=\"trait\" href=\"itertools/unziptuple/trait.MultiUnzip.html\" title=\"trait itertools::unziptuple::MultiUnzip\">MultiUnzip</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a>&gt; for IT<div class=\"where\">where\n    IT: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B, C, D, E, F, G, H, I, J, K, L)</a>&gt;,\n    FromA: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;A&gt;,\n    FromB: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;B&gt;,\n    FromC: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;C&gt;,\n    FromD: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;D&gt;,\n    FromE: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;E&gt;,\n    FromF: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;F&gt;,\n    FromG: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;G&gt;,\n    FromH: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;H&gt;,\n    FromI: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;I&gt;,\n    FromJ: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;J&gt;,\n    FromK: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;K&gt;,\n    FromL: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.Extend.html\" title=\"trait core::iter::traits::collect::Extend\">Extend</a>&lt;L&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.multiunzip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/itertools/unziptuple.rs.html#80\">Source</a><a href=\"#method.multiunzip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"itertools/unziptuple/trait.MultiUnzip.html#tymethod.multiunzip\" class=\"fn\">multiunzip</a>(\n    self,\n) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)</a></h4></section></summary><div class='docblock'>Unzip this iterator into multiple collections.</div></details></div></details>","MultiUnzip<(FromA, FromB, FromC, FromD, FromE, FromF, FromG, FromH, FromI, FromJ, FromK, FromL)>","ark_ec::models::bls12::g2::EllCoeff","ark_ec::models::bn::g2::EllCoeff"]]],["elliptic_curve",[]],["proptest",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Arbitrary-for-(T0,+T1)\" class=\"impl\"><a class=\"src rightside\" href=\"src/proptest/arbitrary/tuples.rs.html#30\">Source</a><a href=\"#impl-Arbitrary-for-(T0,+T1)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T0: <a class=\"trait\" href=\"proptest/arbitrary/trait.Arbitrary.html\" title=\"trait proptest::arbitrary::Arbitrary\">Arbitrary</a>, T1: <a class=\"trait\" href=\"proptest/arbitrary/trait.Arbitrary.html\" title=\"trait proptest::arbitrary::Arbitrary\">Arbitrary</a>&gt; <a class=\"trait\" href=\"proptest/arbitrary/trait.Arbitrary.html\" title=\"trait proptest::arbitrary::Arbitrary\">Arbitrary</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(T0, T1)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Parameters\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/proptest/arbitrary/tuples.rs.html#30\">Source</a><a href=\"#associatedtype.Parameters\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"proptest/arbitrary/trait.Arbitrary.html#associatedtype.Parameters\" class=\"associatedtype\">Parameters</a> = (&lt;T0 as <a class=\"trait\" href=\"proptest/arbitrary/trait.Arbitrary.html\" title=\"trait proptest::arbitrary::Arbitrary\">Arbitrary</a>&gt;::<a class=\"associatedtype\" href=\"proptest/arbitrary/trait.Arbitrary.html#associatedtype.Parameters\" title=\"type proptest::arbitrary::Arbitrary::Parameters\">Parameters</a>, &lt;T1 as <a class=\"trait\" href=\"proptest/arbitrary/trait.Arbitrary.html\" title=\"trait proptest::arbitrary::Arbitrary\">Arbitrary</a>&gt;::<a class=\"associatedtype\" href=\"proptest/arbitrary/trait.Arbitrary.html#associatedtype.Parameters\" title=\"type proptest::arbitrary::Arbitrary::Parameters\">Parameters</a>)</h4></section></summary><div class='docblock'>The type of parameters that <a href=\"trait.Arbitrary.html#tymethod.arbitrary_with\"><code>arbitrary_with</code></a> accepts for configuration\nof the generated <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a>. Parameters must implement <a href=\"https://doc.rust-lang.org/nightly/std/default/trait.Default.html\"><code>Default</code></a>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Strategy\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/proptest/arbitrary/tuples.rs.html#30\">Source</a><a href=\"#associatedtype.Strategy\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"proptest/arbitrary/trait.Arbitrary.html#associatedtype.Strategy\" class=\"associatedtype\">Strategy</a> = (&lt;T0 as <a class=\"trait\" href=\"proptest/arbitrary/trait.Arbitrary.html\" title=\"trait proptest::arbitrary::Arbitrary\">Arbitrary</a>&gt;::<a class=\"associatedtype\" href=\"proptest/arbitrary/trait.Arbitrary.html#associatedtype.Strategy\" title=\"type proptest::arbitrary::Arbitrary::Strategy\">Strategy</a>, &lt;T1 as <a class=\"trait\" href=\"proptest/arbitrary/trait.Arbitrary.html\" title=\"trait proptest::arbitrary::Arbitrary\">Arbitrary</a>&gt;::<a class=\"associatedtype\" href=\"proptest/arbitrary/trait.Arbitrary.html#associatedtype.Strategy\" title=\"type proptest::arbitrary::Arbitrary::Strategy\">Strategy</a>)</h4></section></summary><div class='docblock'>The type of <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> used to generate values of type <code>Self</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary_with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/arbitrary/tuples.rs.html#30\">Source</a><a href=\"#method.arbitrary_with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/arbitrary/trait.Arbitrary.html#tymethod.arbitrary_with\" class=\"fn\">arbitrary_with</a>(args: Self::<a class=\"associatedtype\" href=\"proptest/arbitrary/trait.Arbitrary.html#associatedtype.Parameters\" title=\"type proptest::arbitrary::Arbitrary::Parameters\">Parameters</a>) -&gt; Self::<a class=\"associatedtype\" href=\"proptest/arbitrary/trait.Arbitrary.html#associatedtype.Strategy\" title=\"type proptest::arbitrary::Arbitrary::Strategy\">Strategy</a></h4></section></summary><div class='docblock'>Generates a <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> for producing arbitrary values of type the\nimplementing type (<code>Self</code>). The strategy is passed the arguments given\nin args. <a href=\"proptest/arbitrary/trait.Arbitrary.html#tymethod.arbitrary_with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.arbitrary\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/arbitrary/traits.rs.html#74-76\">Source</a><a href=\"#method.arbitrary\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/arbitrary/trait.Arbitrary.html#method.arbitrary\" class=\"fn\">arbitrary</a>() -&gt; Self::<a class=\"associatedtype\" href=\"proptest/arbitrary/trait.Arbitrary.html#associatedtype.Strategy\" title=\"type proptest::arbitrary::Arbitrary::Strategy\">Strategy</a></h4></section></summary><div class='docblock'>Generates a <a href=\"../strategy/trait.Strategy.html\"><code>Strategy</code></a> for producing arbitrary values\nof type the implementing type (<code>Self</code>). <a href=\"proptest/arbitrary/trait.Arbitrary.html#method.arbitrary\">Read more</a></div></details></div></details>","Arbitrary","proptest::strategy::unions::W","proptest::strategy::unions::WA"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Strategy-for-(A,+B)\" class=\"impl\"><a class=\"src rightside\" href=\"src/proptest/tuple.rs.html#93\">Source</a><a href=\"#impl-Strategy-for-(A,+B)\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A: <a class=\"trait\" href=\"proptest/strategy/trait.Strategy.html\" title=\"trait proptest::strategy::Strategy\">Strategy</a>, B: <a class=\"trait\" href=\"proptest/strategy/trait.Strategy.html\" title=\"trait proptest::strategy::Strategy\">Strategy</a>&gt; <a class=\"trait\" href=\"proptest/strategy/trait.Strategy.html\" title=\"trait proptest::strategy::Strategy\">Strategy</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.tuple.html\">(A, B)</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Tree\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/proptest/tuple.rs.html#93\">Source</a><a href=\"#associatedtype.Tree\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"proptest/strategy/trait.Strategy.html#associatedtype.Tree\" class=\"associatedtype\">Tree</a> = <a class=\"struct\" href=\"proptest/tuple/struct.TupleValueTree.html\" title=\"struct proptest::tuple::TupleValueTree\">TupleValueTree</a>&lt;(&lt;A as <a class=\"trait\" href=\"proptest/strategy/trait.Strategy.html\" title=\"trait proptest::strategy::Strategy\">Strategy</a>&gt;::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Tree\" title=\"type proptest::strategy::Strategy::Tree\">Tree</a>, &lt;B as <a class=\"trait\" href=\"proptest/strategy/trait.Strategy.html\" title=\"trait proptest::strategy::Strategy\">Strategy</a>&gt;::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Tree\" title=\"type proptest::strategy::Strategy::Tree\">Tree</a>)&gt;</h4></section></summary><div class='docblock'>The value tree generated by this <code>Strategy</code>.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Value\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/proptest/tuple.rs.html#93\">Source</a><a href=\"#associatedtype.Value\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" class=\"associatedtype\">Value</a> = (&lt;A as <a class=\"trait\" href=\"proptest/strategy/trait.Strategy.html\" title=\"trait proptest::strategy::Strategy\">Strategy</a>&gt;::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>, &lt;B as <a class=\"trait\" href=\"proptest/strategy/trait.Strategy.html\" title=\"trait proptest::strategy::Strategy\">Strategy</a>&gt;::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>)</h4></section></summary><div class='docblock'>The type of value used by functions under test generated by this Strategy. <a href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_tree\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/tuple.rs.html#93\">Source</a><a href=\"#method.new_tree\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/strategy/trait.Strategy.html#tymethod.new_tree\" class=\"fn\">new_tree</a>(&amp;self, runner: &amp;mut <a class=\"struct\" href=\"proptest/test_runner/struct.TestRunner.html\" title=\"struct proptest::test_runner::TestRunner\">TestRunner</a>) -&gt; <a class=\"type\" href=\"proptest/strategy/type.NewTree.html\" title=\"type proptest::strategy::NewTree\">NewTree</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Generate a new value tree from the given runner. <a href=\"proptest/strategy/trait.Strategy.html#tymethod.new_tree\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/strategy/traits.rs.html#74-85\">Source</a><a href=\"#method.prop_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/strategy/trait.Strategy.html#method.prop_map\" class=\"fn\">prop_map</a>&lt;O: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>) -&gt; O&gt;(self, fun: F) -&gt; <a class=\"struct\" href=\"proptest/strategy/struct.Map.html\" title=\"struct proptest::strategy::Map\">Map</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns a strategy which produces values transformed by the function\n<code>fun</code>. <a href=\"proptest/strategy/trait.Strategy.html#method.prop_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_map_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/strategy/traits.rs.html#96-102\">Source</a><a href=\"#method.prop_map_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/strategy/trait.Strategy.html#method.prop_map_into\" class=\"fn\">prop_map_into</a>&lt;O: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt;(self) -&gt; <a class=\"struct\" href=\"proptest/strategy/struct.MapInto.html\" title=\"struct proptest::strategy::MapInto\">MapInto</a>&lt;Self, O&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    Self::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;O&gt;,</div></h4></section></summary><div class='docblock'>Returns a strategy which produces values of type <code>O</code> by transforming\n<code>Self</code> with <code>Into&lt;O&gt;</code>. <a href=\"proptest/strategy/trait.Strategy.html#method.prop_map_into\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_perturb\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/strategy/traits.rs.html#137-148\">Source</a><a href=\"#method.prop_perturb\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/strategy/trait.Strategy.html#method.prop_perturb\" class=\"fn\">prop_perturb</a>&lt;O: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>, <a class=\"struct\" href=\"proptest/test_runner/struct.TestRng.html\" title=\"struct proptest::test_runner::TestRng\">TestRng</a>) -&gt; O&gt;(\n    self,\n    fun: F,\n) -&gt; <a class=\"struct\" href=\"proptest/strategy/struct.Perturb.html\" title=\"struct proptest::strategy::Perturb\">Perturb</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns a strategy which produces values transformed by the function\n<code>fun</code>, which is additionally given a random number generator. <a href=\"proptest/strategy/trait.Strategy.html#method.prop_perturb\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_flat_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/strategy/traits.rs.html#238-249\">Source</a><a href=\"#method.prop_flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/strategy/trait.Strategy.html#method.prop_flat_map\" class=\"fn\">prop_flat_map</a>&lt;S: <a class=\"trait\" href=\"proptest/strategy/trait.Strategy.html\" title=\"trait proptest::strategy::Strategy\">Strategy</a>, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>) -&gt; S&gt;(\n    self,\n    fun: F,\n) -&gt; <a class=\"struct\" href=\"proptest/strategy/struct.Flatten.html\" title=\"struct proptest::strategy::Flatten\">Flatten</a>&lt;<a class=\"struct\" href=\"proptest/strategy/struct.Map.html\" title=\"struct proptest::strategy::Map\">Map</a>&lt;Self, F&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Maps values produced by this strategy into new strategies and picks\nvalues from those strategies. <a href=\"proptest/strategy/trait.Strategy.html#method.prop_flat_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_ind_flat_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/strategy/traits.rs.html#264-275\">Source</a><a href=\"#method.prop_ind_flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/strategy/trait.Strategy.html#method.prop_ind_flat_map\" class=\"fn\">prop_ind_flat_map</a>&lt;S: <a class=\"trait\" href=\"proptest/strategy/trait.Strategy.html\" title=\"trait proptest::strategy::Strategy\">Strategy</a>, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>) -&gt; S&gt;(\n    self,\n    fun: F,\n) -&gt; <a class=\"struct\" href=\"proptest/strategy/struct.IndFlatten.html\" title=\"struct proptest::strategy::IndFlatten\">IndFlatten</a>&lt;<a class=\"struct\" href=\"proptest/strategy/struct.Map.html\" title=\"struct proptest::strategy::Map\">Map</a>&lt;Self, F&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Maps values produced by this strategy into new strategies and picks\nvalues from those strategies while considering the new strategies to be\nindependent. <a href=\"proptest/strategy/trait.Strategy.html#method.prop_ind_flat_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_ind_flat_map2\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/strategy/traits.rs.html#282-293\">Source</a><a href=\"#method.prop_ind_flat_map2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/strategy/trait.Strategy.html#method.prop_ind_flat_map2\" class=\"fn\">prop_ind_flat_map2</a>&lt;S: <a class=\"trait\" href=\"proptest/strategy/trait.Strategy.html\" title=\"trait proptest::strategy::Strategy\">Strategy</a>, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>) -&gt; S&gt;(\n    self,\n    fun: F,\n) -&gt; <a class=\"struct\" href=\"proptest/strategy/struct.IndFlattenMap.html\" title=\"struct proptest::strategy::IndFlattenMap\">IndFlattenMap</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Similar to <code>prop_ind_flat_map()</code>, but produces 2-tuples with the input\ngenerated from <code>self</code> in slot 0 and the derived strategy in slot 1. <a href=\"proptest/strategy/trait.Strategy.html#method.prop_ind_flat_map2\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_filter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/strategy/traits.rs.html#315-324\">Source</a><a href=\"#method.prop_filter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/strategy/trait.Strategy.html#method.prop_filter\" class=\"fn\">prop_filter</a>&lt;R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"proptest/test_runner/struct.Reason.html\" title=\"struct proptest::test_runner::Reason\">Reason</a>&gt;, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(&amp;Self::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>&gt;(\n    self,\n    whence: R,\n    fun: F,\n) -&gt; <a class=\"struct\" href=\"proptest/strategy/struct.Filter.html\" title=\"struct proptest::strategy::Filter\">Filter</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns a strategy which only produces values accepted by <code>fun</code>. <a href=\"proptest/strategy/trait.Strategy.html#method.prop_filter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_filter_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/strategy/traits.rs.html#349-358\">Source</a><a href=\"#method.prop_filter_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/strategy/trait.Strategy.html#method.prop_filter_map\" class=\"fn\">prop_filter_map</a>&lt;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(Self::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;O&gt;, O: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt;(\n    self,\n    whence: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;<a class=\"struct\" href=\"proptest/test_runner/struct.Reason.html\" title=\"struct proptest::test_runner::Reason\">Reason</a>&gt;,\n    fun: F,\n) -&gt; <a class=\"struct\" href=\"proptest/strategy/struct.FilterMap.html\" title=\"struct proptest::strategy::FilterMap\">FilterMap</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns a strategy which only produces transformed values where <code>fun</code>\nreturns <code>Some(value)</code> and rejects those where <code>fun</code> returns <code>None</code>. <a href=\"proptest/strategy/trait.Strategy.html#method.prop_filter_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_union\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/strategy/traits.rs.html#374-379\">Source</a><a href=\"#method.prop_union\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/strategy/trait.Strategy.html#method.prop_union\" class=\"fn\">prop_union</a>(self, other: Self) -&gt; <a class=\"struct\" href=\"proptest/strategy/struct.Union.html\" title=\"struct proptest::strategy::Union\">Union</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Returns a strategy which picks uniformly from <code>self</code> and <code>other</code>. <a href=\"proptest/strategy/trait.Strategy.html#method.prop_union\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.prop_recursive\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/strategy/traits.rs.html#448-462\">Source</a><a href=\"#method.prop_recursive\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/strategy/trait.Strategy.html#method.prop_recursive\" class=\"fn\">prop_recursive</a>&lt;R: <a class=\"trait\" href=\"proptest/strategy/trait.Strategy.html\" title=\"trait proptest::strategy::Strategy\">Strategy</a>&lt;Value = Self::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>&gt; + 'static, F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.Fn.html\" title=\"trait core::ops::function::Fn\">Fn</a>(<a class=\"struct\" href=\"proptest/strategy/struct.BoxedStrategy.html\" title=\"struct proptest::strategy::BoxedStrategy\">BoxedStrategy</a>&lt;Self::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>&gt;) -&gt; R&gt;(\n    self,\n    depth: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>,\n    desired_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>,\n    expected_branch_size: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>,\n    recurse: F,\n) -&gt; <a class=\"struct\" href=\"proptest/strategy/struct.Recursive.html\" title=\"struct proptest::strategy::Recursive\">Recursive</a>&lt;Self::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'static,</div></h4></section></summary><div class='docblock'>Generate a recursive structure with <code>self</code> items as leaves. <a href=\"proptest/strategy/trait.Strategy.html#method.prop_recursive\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boxed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/strategy/traits.rs.html#516-521\">Source</a><a href=\"#method.boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/strategy/trait.Strategy.html#method.boxed\" class=\"fn\">boxed</a>(self) -&gt; <a class=\"struct\" href=\"proptest/strategy/struct.BoxedStrategy.html\" title=\"struct proptest::strategy::BoxedStrategy\">BoxedStrategy</a>&lt;Self::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'static,</div></h4></section></summary><div class='docblock'>Erases the type of this <code>Strategy</code> so it can be passed around as a\nsimple trait object. <a href=\"proptest/strategy/trait.Strategy.html#method.boxed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sboxed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/strategy/traits.rs.html#531-536\">Source</a><a href=\"#method.sboxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/strategy/trait.Strategy.html#method.sboxed\" class=\"fn\">sboxed</a>(self) -&gt; <a class=\"struct\" href=\"proptest/strategy/struct.SBoxedStrategy.html\" title=\"struct proptest::strategy::SBoxedStrategy\">SBoxedStrategy</a>&lt;Self::<a class=\"associatedtype\" href=\"proptest/strategy/trait.Strategy.html#associatedtype.Value\" title=\"type proptest::strategy::Strategy::Value\">Value</a>&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,</div></h4></section></summary><div class='docblock'>Erases the type of this <code>Strategy</code> so it can be passed around as a\nsimple trait object. <a href=\"proptest/strategy/trait.Strategy.html#method.sboxed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.no_shrink\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/proptest/strategy/traits.rs.html#547-552\">Source</a><a href=\"#method.no_shrink\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"proptest/strategy/trait.Strategy.html#method.no_shrink\" class=\"fn\">no_shrink</a>(self) -&gt; <a class=\"struct\" href=\"proptest/strategy/struct.NoShrink.html\" title=\"struct proptest::strategy::NoShrink\">NoShrink</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Wraps this strategy to prevent values from being subject to shrinking. <a href=\"proptest/strategy/trait.Strategy.html#method.no_shrink\">Read more</a></div></details></div></details>","Strategy","proptest::strategy::unions::W","proptest::strategy::unions::WA"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[208421,49573,22,29494]}