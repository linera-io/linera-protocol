(function() {
    var type_impls = Object.fromEntries([["linera_core",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-DbStorage%3CDatabase,+Clock%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#320\">Source</a><a href=\"#impl-Clone-for-DbStorage%3CDatabase,+Clock%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Database, Clock&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, Clock&gt;<div class=\"where\">where\n    Database: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    Clock: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#320\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, Clock&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","linera_core::environment::TestStorage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DbStorage%3CDatabase,+TestClock%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#1133-1137\">Source</a><a href=\"#impl-DbStorage%3CDatabase,+TestClock%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Database&gt; <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, <a class=\"struct\" href=\"linera_storage/db_storage/struct.TestClock.html\" title=\"struct linera_storage::db_storage::TestClock\">TestClock</a>&gt;<div class=\"where\">where\n    Database: <a class=\"trait\" href=\"linera_views/store/trait.TestKeyValueDatabase.html\" title=\"trait linera_views::store::TestKeyValueDatabase\">TestKeyValueDatabase</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    &lt;Database as <a class=\"trait\" href=\"linera_views/store/trait.KeyValueDatabase.html\" title=\"trait linera_views::store::KeyValueDatabase\">KeyValueDatabase</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/store/trait.KeyValueDatabase.html#associatedtype.Store\" title=\"type linera_views::store::KeyValueDatabase::Store\">Store</a>: <a class=\"trait\" href=\"linera_views/store/trait.KeyValueStore.html\" title=\"trait linera_views::store::KeyValueStore\">KeyValueStore</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    &lt;Database as <a class=\"trait\" href=\"linera_views/store/trait.WithError.html\" title=\"trait linera_views::store::WithError\">WithError</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/store/trait.WithError.html#associatedtype.Error\" title=\"type linera_views::store::WithError::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.make_test_storage\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#1139\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_storage/db_storage/struct.DbStorage.html#tymethod.make_test_storage\" class=\"fn\">make_test_storage</a>(\n    wasm_runtime: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"linera_execution/enum.WasmRuntime.html\" title=\"enum linera_execution::WasmRuntime\">WasmRuntime</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, <a class=\"struct\" href=\"linera_storage/db_storage/struct.TestClock.html\" title=\"struct linera_storage::db_storage::TestClock\">TestClock</a>&gt;</h4></section><section id=\"method.new_for_testing\" class=\"method\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#1152-1157\">Source</a><h4 class=\"code-header\">pub async fn <a href=\"linera_storage/db_storage/struct.DbStorage.html#tymethod.new_for_testing\" class=\"fn\">new_for_testing</a>(\n    config: &lt;Database as <a class=\"trait\" href=\"linera_views/store/trait.KeyValueDatabase.html\" title=\"trait linera_views::store::KeyValueDatabase\">KeyValueDatabase</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/store/trait.KeyValueDatabase.html#associatedtype.Config\" title=\"type linera_views::store::KeyValueDatabase::Config\">Config</a>,\n    namespace: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a>,\n    wasm_runtime: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"linera_execution/enum.WasmRuntime.html\" title=\"enum linera_execution::WasmRuntime\">WasmRuntime</a>&gt;,\n    clock: <a class=\"struct\" href=\"linera_storage/db_storage/struct.TestClock.html\" title=\"struct linera_storage::db_storage::TestClock\">TestClock</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, <a class=\"struct\" href=\"linera_storage/db_storage/struct.TestClock.html\" title=\"struct linera_storage::db_storage::TestClock\">TestClock</a>&gt;, &lt;Database as <a class=\"trait\" href=\"linera_views/store/trait.WithError.html\" title=\"trait linera_views::store::WithError\">WithError</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/store/trait.WithError.html#associatedtype.Error\" title=\"type linera_views::store::WithError::Error\">Error</a>&gt;</h4></section></div></details>",0,"linera_core::environment::TestStorage"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Storage-for-DbStorage%3CDatabase,+C%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#564-569\">Source</a><a href=\"#impl-Storage-for-DbStorage%3CDatabase,+C%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Database, C&gt; <a class=\"trait\" href=\"linera_storage/trait.Storage.html\" title=\"trait linera_storage::Storage\">Storage</a> for <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;<div class=\"where\">where\n    Database: <a class=\"trait\" href=\"linera_views/store/trait.KeyValueDatabase.html\" title=\"trait linera_views::store::KeyValueDatabase\">KeyValueDatabase</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    &lt;Database as <a class=\"trait\" href=\"linera_views/store/trait.KeyValueDatabase.html\" title=\"trait linera_views::store::KeyValueDatabase\">KeyValueDatabase</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/store/trait.KeyValueDatabase.html#associatedtype.Store\" title=\"type linera_views::store::KeyValueDatabase::Store\">Store</a>: <a class=\"trait\" href=\"linera_views/store/trait.KeyValueStore.html\" title=\"trait linera_views::store::KeyValueStore\">KeyValueStore</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    C: <a class=\"trait\" href=\"linera_storage/trait.Clock.html\" title=\"trait linera_storage::Clock\">Clock</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'static,\n    &lt;Database as <a class=\"trait\" href=\"linera_views/store/trait.WithError.html\" title=\"trait linera_views::store::WithError\">WithError</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/store/trait.WithError.html#associatedtype.Error\" title=\"type linera_views::store::WithError::Error\">Error</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_certificates_raw\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#859\">Source</a><a href=\"#method.read_certificates_raw\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.read_certificates_raw\" class=\"fn\">read_certificates_raw</a>&lt;'life0, 'async_trait, I&gt;(\n    &amp;'life0 self,\n    hashes: I,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;(<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;)&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    I: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"linera_base/crypto/hash/struct.CryptoHash.html\" title=\"struct linera_base::crypto::hash::CryptoHash\">CryptoHash</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class=\"docblock\"><p>Reads certificates by hashes.</p>\n<p>Returns a vector of tuples where the first element is a lite certificate\nand the second element is confirmed block.</p>\n<p>It does not check if all hashes all returned.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Context\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#571\">Source</a><a href=\"#associatedtype.Context\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"linera_storage/trait.Storage.html#associatedtype.Context\" class=\"associatedtype\">Context</a> = <a class=\"struct\" href=\"linera_views/context/struct.ViewContext.html\" title=\"struct linera_views::context::ViewContext\">ViewContext</a>&lt;<a class=\"struct\" href=\"linera_storage/struct.ChainRuntimeContext.html\" title=\"struct linera_storage::ChainRuntimeContext\">ChainRuntimeContext</a>&lt;<a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;&gt;, &lt;Database as <a class=\"trait\" href=\"linera_views/store/trait.KeyValueDatabase.html\" title=\"trait linera_views::store::KeyValueDatabase\">KeyValueDatabase</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/store/trait.KeyValueDatabase.html#associatedtype.Store\" title=\"type linera_views::store::KeyValueDatabase::Store\">Store</a>&gt;</h4></section></summary><div class='docblock'>The low-level storage implementation in use by the core protocol (chain workers etc).</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Clock\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#572\">Source</a><a href=\"#associatedtype.Clock\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"linera_storage/trait.Storage.html#associatedtype.Clock\" class=\"associatedtype\">Clock</a> = C</h4></section></summary><div class='docblock'>The clock type being used.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.BlockExporterContext\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#573\">Source</a><a href=\"#associatedtype.BlockExporterContext\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"linera_storage/trait.Storage.html#associatedtype.BlockExporterContext\" class=\"associatedtype\">BlockExporterContext</a> = <a class=\"struct\" href=\"linera_views/context/struct.ViewContext.html\" title=\"struct linera_views::context::ViewContext\">ViewContext</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>, &lt;Database as <a class=\"trait\" href=\"linera_views/store/trait.KeyValueDatabase.html\" title=\"trait linera_views::store::KeyValueDatabase\">KeyValueDatabase</a>&gt;::<a class=\"associatedtype\" href=\"linera_views/store/trait.KeyValueDatabase.html#associatedtype.Store\" title=\"type linera_views::store::KeyValueDatabase::Store\">Store</a>&gt;</h4></section></summary><div class='docblock'>The low-level storage implementation in use by the block exporter.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clock\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#575\">Source</a><a href=\"#method.clock\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.clock\" class=\"fn\">clock</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;C</a></h4></section></summary><div class='docblock'>Returns the current wall clock time.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_chain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#579\">Source</a><a href=\"#method.load_chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.load_chain\" class=\"fn\">load_chain</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    chain_id: <a class=\"struct\" href=\"linera_base/identifiers/struct.ChainId.html\" title=\"struct linera_base::identifiers::ChainId\">ChainId</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linera_chain/chain/struct.ChainStateView.html\" title=\"struct linera_chain::chain::ChainStateView\">ChainStateView</a>&lt;&lt;<a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt; as <a class=\"trait\" href=\"linera_storage/trait.Storage.html\" title=\"trait linera_storage::Storage\">Storage</a>&gt;::<a class=\"associatedtype\" href=\"linera_storage/trait.Storage.html#associatedtype.Context\" title=\"type linera_storage::Storage::Context\">Context</a>&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Loads the view of a chain state. <a href=\"linera_storage/trait.Storage.html#tymethod.load_chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_blob\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#599\">Source</a><a href=\"#method.contains_blob\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.contains_blob\" class=\"fn\">contains_blob</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    blob_id: <a class=\"struct\" href=\"linera_base/identifiers/struct.BlobId.html\" title=\"struct linera_base::identifiers::BlobId\">BlobId</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Tests the existence of a blob with the given blob ID.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.missing_blobs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#609\">Source</a><a href=\"#method.missing_blobs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.missing_blobs\" class=\"fn\">missing_blobs</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    blob_ids: &amp;'life1 [<a class=\"struct\" href=\"linera_base/identifiers/struct.BlobId.html\" title=\"struct linera_base::identifiers::BlobId\">BlobId</a>],\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"linera_base/identifiers/struct.BlobId.html\" title=\"struct linera_base::identifiers::BlobId\">BlobId</a>&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Returns what blobs from the input are missing from storage.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_blob_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#625\">Source</a><a href=\"#method.contains_blob_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.contains_blob_state\" class=\"fn\">contains_blob_state</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    blob_id: <a class=\"struct\" href=\"linera_base/identifiers/struct.BlobId.html\" title=\"struct linera_base::identifiers::BlobId\">BlobId</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Tests existence of a blob state with the given blob ID.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_confirmed_block\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#637\">Source</a><a href=\"#method.read_confirmed_block\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.read_confirmed_block\" class=\"fn\">read_confirmed_block</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    hash: <a class=\"struct\" href=\"linera_base/crypto/hash/struct.CryptoHash.html\" title=\"struct linera_base::crypto::hash::CryptoHash\">CryptoHash</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"linera_chain/block/struct.ConfirmedBlock.html\" title=\"struct linera_chain::block::ConfirmedBlock\">ConfirmedBlock</a>&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Reads the hashed certificate value with the given hash.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_blob\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#652\">Source</a><a href=\"#method.read_blob\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.read_blob\" class=\"fn\">read_blob</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    blob_id: <a class=\"struct\" href=\"linera_base/identifiers/struct.BlobId.html\" title=\"struct linera_base::identifiers::BlobId\">BlobId</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"linera_base/data_types/struct.Blob.html\" title=\"struct linera_base::data_types::Blob\">Blob</a>&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Reads the blob with the given blob ID.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_blobs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#662\">Source</a><a href=\"#method.read_blobs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.read_blobs\" class=\"fn\">read_blobs</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    blob_ids: &amp;'life1 [<a class=\"struct\" href=\"linera_base/identifiers/struct.BlobId.html\" title=\"struct linera_base::identifiers::BlobId\">BlobId</a>],\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"linera_base/data_types/struct.Blob.html\" title=\"struct linera_base::data_types::Blob\">Blob</a>&gt;&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Reads the blobs with the given blob IDs.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_blob_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#678\">Source</a><a href=\"#method.read_blob_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.read_blob_state\" class=\"fn\">read_blob_state</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    blob_id: <a class=\"struct\" href=\"linera_base/identifiers/struct.BlobId.html\" title=\"struct linera_base::identifiers::BlobId\">BlobId</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"linera_execution/struct.BlobState.html\" title=\"struct linera_execution::BlobState\">BlobState</a>&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Reads the blob state with the given blob ID.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_blob_states\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#690\">Source</a><a href=\"#method.read_blob_states\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.read_blob_states\" class=\"fn\">read_blob_states</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    blob_ids: &amp;'life1 [<a class=\"struct\" href=\"linera_base/identifiers/struct.BlobId.html\" title=\"struct linera_base::identifiers::BlobId\">BlobId</a>],\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"linera_execution/struct.BlobState.html\" title=\"struct linera_execution::BlobState\">BlobState</a>&gt;&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Reads the blob states with the given blob IDs.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_blob\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#709\">Source</a><a href=\"#method.write_blob\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.write_blob\" class=\"fn\">write_blob</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    blob: &amp;'life1 <a class=\"struct\" href=\"linera_base/data_types/struct.Blob.html\" title=\"struct linera_base::data_types::Blob\">Blob</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Writes the given blob.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.maybe_write_blob_states\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#717\">Source</a><a href=\"#method.maybe_write_blob_states\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.maybe_write_blob_states\" class=\"fn\">maybe_write_blob_states</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    blob_ids: &amp;'life1 [<a class=\"struct\" href=\"linera_base/identifiers/struct.BlobId.html\" title=\"struct linera_base::identifiers::BlobId\">BlobId</a>],\n    blob_state: <a class=\"struct\" href=\"linera_execution/struct.BlobState.html\" title=\"struct linera_execution::BlobState\">BlobState</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Attempts to write the given blob state. Returns the latest <code>Epoch</code> to have used this blob.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.maybe_write_blobs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#753\">Source</a><a href=\"#method.maybe_write_blobs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.maybe_write_blobs\" class=\"fn\">maybe_write_blobs</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    blobs: &amp;'life1 [<a class=\"struct\" href=\"linera_base/data_types/struct.Blob.html\" title=\"struct linera_base::data_types::Blob\">Blob</a>],\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Writes the given blobs, but only if they already have a blob state. Returns <code>true</code> for the\nblobs that were written.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_blobs\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#773\">Source</a><a href=\"#method.write_blobs\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.write_blobs\" class=\"fn\">write_blobs</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    blobs: &amp;'life1 [<a class=\"struct\" href=\"linera_base/data_types/struct.Blob.html\" title=\"struct linera_base::data_types::Blob\">Blob</a>],\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Writes several blobs.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_blobs_and_certificate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#785\">Source</a><a href=\"#method.write_blobs_and_certificate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.write_blobs_and_certificate\" class=\"fn\">write_blobs_and_certificate</a>&lt;'life0, 'life1, 'life2, 'async_trait&gt;(\n    &amp;'life0 self,\n    blobs: &amp;'life1 [<a class=\"struct\" href=\"linera_base/data_types/struct.Blob.html\" title=\"struct linera_base::data_types::Blob\">Blob</a>],\n    certificate: &amp;'life2 <a class=\"struct\" href=\"linera_chain/certificate/generic/struct.GenericCertificate.html\" title=\"struct linera_chain::certificate::generic::GenericCertificate\">GenericCertificate</a>&lt;<a class=\"struct\" href=\"linera_chain/block/struct.ConfirmedBlock.html\" title=\"struct linera_chain::block::ConfirmedBlock\">ConfirmedBlock</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    'life2: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Writes blobs and certificate</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_certificate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#799\">Source</a><a href=\"#method.contains_certificate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.contains_certificate\" class=\"fn\">contains_certificate</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    hash: <a class=\"struct\" href=\"linera_base/crypto/hash/struct.CryptoHash.html\" title=\"struct linera_base::crypto::hash::CryptoHash\">CryptoHash</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Tests existence of the certificate with the given hash.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_certificate\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#811\">Source</a><a href=\"#method.read_certificate\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.read_certificate\" class=\"fn\">read_certificate</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    hash: <a class=\"struct\" href=\"linera_base/crypto/hash/struct.CryptoHash.html\" title=\"struct linera_base::crypto::hash::CryptoHash\">CryptoHash</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"linera_chain/certificate/generic/struct.GenericCertificate.html\" title=\"struct linera_chain::certificate::generic::GenericCertificate\">GenericCertificate</a>&lt;<a class=\"struct\" href=\"linera_chain/block/struct.ConfirmedBlock.html\" title=\"struct linera_chain::block::ConfirmedBlock\">ConfirmedBlock</a>&gt;&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Reads the certificate with the given hash.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_certificates\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#826\">Source</a><a href=\"#method.read_certificates\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.read_certificates\" class=\"fn\">read_certificates</a>&lt;'life0, 'async_trait, I&gt;(\n    &amp;'life0 self,\n    hashes: I,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"linera_chain/certificate/generic/struct.GenericCertificate.html\" title=\"struct linera_chain::certificate::generic::GenericCertificate\">GenericCertificate</a>&lt;<a class=\"struct\" href=\"linera_chain/block/struct.ConfirmedBlock.html\" title=\"struct linera_chain::block::ConfirmedBlock\">ConfirmedBlock</a>&gt;&gt;&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    I: 'async_trait + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = <a class=\"struct\" href=\"linera_base/crypto/hash/struct.CryptoHash.html\" title=\"struct linera_base::crypto::hash::CryptoHash\">CryptoHash</a>&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a>,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Reads a number of certificates</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#888\">Source</a><a href=\"#method.read_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.read_event\" class=\"fn\">read_event</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    event_id: <a class=\"struct\" href=\"linera_base/identifiers/struct.EventId.html\" title=\"struct linera_base::identifiers::EventId\">EventId</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Reads the event with the given ID.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.contains_event\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#899\">Source</a><a href=\"#method.contains_event\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.contains_event\" class=\"fn\">contains_event</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    event_id: <a class=\"struct\" href=\"linera_base/identifiers/struct.EventId.html\" title=\"struct linera_base::identifiers::EventId\">EventId</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a>, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Tests existence of the event with the given ID.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_events_from_index\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#910\">Source</a><a href=\"#method.read_events_from_index\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.read_events_from_index\" class=\"fn\">read_events_from_index</a>&lt;'life0, 'life1, 'life2, 'async_trait&gt;(\n    &amp;'life0 self,\n    chain_id: &amp;'life1 <a class=\"struct\" href=\"linera_base/identifiers/struct.ChainId.html\" title=\"struct linera_base::identifiers::ChainId\">ChainId</a>,\n    stream_id: &amp;'life2 <a class=\"struct\" href=\"linera_base/identifiers/struct.StreamId.html\" title=\"struct linera_base::identifiers::StreamId\">StreamId</a>,\n    start_index: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"linera_base/identifiers/struct.IndexAndEvent.html\" title=\"struct linera_base::identifiers::IndexAndEvent\">IndexAndEvent</a>&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    'life2: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Lists all the events from a starting index</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_events\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#940\">Source</a><a href=\"#method.write_events\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.write_events\" class=\"fn\">write_events</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    events: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/iter/traits/collect/trait.IntoIterator.html\" title=\"trait core::iter::traits::collect::IntoIterator\">IntoIterator</a>&lt;Item = (<a class=\"struct\" href=\"linera_base/identifiers/struct.EventId.html\" title=\"struct linera_base::identifiers::EventId\">EventId</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>&gt;)&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Writes a vector of events.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_network_description\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#952\">Source</a><a href=\"#method.read_network_description\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.read_network_description\" class=\"fn\">read_network_description</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"linera_base/data_types/struct.NetworkDescription.html\" title=\"struct linera_base::data_types::NetworkDescription\">NetworkDescription</a>&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Reads the network description.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_network_description\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#964\">Source</a><a href=\"#method.write_network_description\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.write_network_description\" class=\"fn\">write_network_description</a>&lt;'life0, 'life1, 'async_trait&gt;(\n    &amp;'life0 self,\n    information: &amp;'life1 <a class=\"struct\" href=\"linera_base/data_types/struct.NetworkDescription.html\" title=\"struct linera_base::data_types::NetworkDescription\">NetworkDescription</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section></summary><div class='docblock'>Writes the network description.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.wasm_runtime\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#975\">Source</a><a href=\"#method.wasm_runtime\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.wasm_runtime\" class=\"fn\">wasm_runtime</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"linera_execution/enum.WasmRuntime.html\" title=\"enum linera_execution::WasmRuntime\">WasmRuntime</a>&gt;</h4></section></summary><div class='docblock'>Selects the WebAssembly runtime to use for applications (if any).</div></details><section id=\"method.block_exporter_context\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/db_storage.rs.html#979\">Source</a><a href=\"#method.block_exporter_context\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#tymethod.block_exporter_context\" class=\"fn\">block_exporter_context</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    block_exporter_id: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u32.html\">u32</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;<a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt; as <a class=\"trait\" href=\"linera_storage/trait.Storage.html\" title=\"trait linera_storage::Storage\">Storage</a>&gt;::<a class=\"associatedtype\" href=\"linera_storage/trait.Storage.html#associatedtype.BlockExporterContext\" title=\"type linera_storage::Storage::BlockExporterContext\">BlockExporterContext</a>, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/db_storage/struct.DbStorage.html\" title=\"struct linera_storage::db_storage::DbStorage\">DbStorage</a>&lt;Database, C&gt;: 'async_trait,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.committees_for\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/lib.rs.html#49\">Source</a><a href=\"#method.committees_for\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#method.committees_for\" class=\"fn\">committees_for</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    epoch_range: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/range/struct.RangeInclusive.html\" title=\"struct core::ops::range::RangeInclusive\">RangeInclusive</a>&lt;<a class=\"struct\" href=\"linera_base/data_types/struct.Epoch.html\" title=\"struct linera_base::data_types::Epoch\">Epoch</a>&gt;,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/collections/btree/map/struct.BTreeMap.html\" title=\"struct alloc::collections::btree::map::BTreeMap\">BTreeMap</a>&lt;<a class=\"struct\" href=\"linera_base/data_types/struct.Epoch.html\" title=\"struct linera_base::data_types::Epoch\">Epoch</a>, <a class=\"struct\" href=\"linera_execution/committee/struct.Committee.html\" title=\"struct linera_execution::committee::Committee\">Committee</a>&gt;, <a class=\"enum\" href=\"linera_views/error/enum.ViewError.html\" title=\"enum linera_views::error::ViewError\">ViewError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'async_trait,</div></h4></section></summary><div class='docblock'>Returns a map of the committees for the given epochs.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.create_chain\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/lib.rs.html#49\">Source</a><a href=\"#method.create_chain\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#method.create_chain\" class=\"fn\">create_chain</a>&lt;'life0, 'async_trait&gt;(\n    &amp;'life0 self,\n    description: <a class=\"struct\" href=\"linera_base/data_types/struct.ChainDescription.html\" title=\"struct linera_base::data_types::ChainDescription\">ChainDescription</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.unit.html\">()</a>, <a class=\"enum\" href=\"linera_chain/enum.ChainError.html\" title=\"enum linera_chain::ChainError\">ChainError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    <a class=\"struct\" href=\"linera_storage/struct.ChainRuntimeContext.html\" title=\"struct linera_storage::ChainRuntimeContext\">ChainRuntimeContext</a>&lt;Self&gt;: <a class=\"trait\" href=\"linera_execution/trait.ExecutionRuntimeContext.html\" title=\"trait linera_execution::ExecutionRuntimeContext\">ExecutionRuntimeContext</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'async_trait,</div></h4></section></summary><div class='docblock'>Initializes a chain in a simple way (used for testing and to create a genesis state). <a href=\"linera_storage/trait.Storage.html#method.create_chain\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_contract\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/lib.rs.html#49\">Source</a><a href=\"#method.load_contract\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#method.load_contract\" class=\"fn\">load_contract</a>&lt;'life0, 'life1, 'life2, 'async_trait&gt;(\n    &amp;'life0 self,\n    application_description: &amp;'life1 <a class=\"struct\" href=\"linera_base/data_types/struct.ApplicationDescription.html\" title=\"struct linera_base::data_types::ApplicationDescription\">ApplicationDescription</a>,\n    txn_tracker: &amp;'life2 <a class=\"struct\" href=\"linera_execution/transaction_tracker/struct.TransactionTracker.html\" title=\"struct linera_execution::transaction_tracker::TransactionTracker\">TransactionTracker</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linera_execution/struct.UserContractCode.html\" title=\"struct linera_execution::UserContractCode\">UserContractCode</a>, <a class=\"enum\" href=\"linera_execution/enum.ExecutionError.html\" title=\"enum linera_execution::ExecutionError\">ExecutionError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    'life2: 'async_trait,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'async_trait,</div></h4></section></summary><div class='docblock'>Creates a <a href=\"linera_execution/struct.UserContractCode.html\" title=\"struct linera_execution::UserContractCode\"><code>UserContractCode</code></a> instance using the bytecode in storage referenced\nby the <code>application_description</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.load_service\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/linera_storage/lib.rs.html#49\">Source</a><a href=\"#method.load_service\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"linera_storage/trait.Storage.html#method.load_service\" class=\"fn\">load_service</a>&lt;'life0, 'life1, 'life2, 'async_trait&gt;(\n    &amp;'life0 self,\n    application_description: &amp;'life1 <a class=\"struct\" href=\"linera_base/data_types/struct.ApplicationDescription.html\" title=\"struct linera_base::data_types::ApplicationDescription\">ApplicationDescription</a>,\n    txn_tracker: &amp;'life2 <a class=\"struct\" href=\"linera_execution/transaction_tracker/struct.TransactionTracker.html\" title=\"struct linera_execution::transaction_tracker::TransactionTracker\">TransactionTracker</a>,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/pin/struct.Pin.html\" title=\"struct core::pin::Pin\">Pin</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/future/future/trait.Future.html\" title=\"trait core::future::future::Future\">Future</a>&lt;Output = <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"struct\" href=\"linera_execution/struct.UserServiceCode.html\" title=\"struct linera_execution::UserServiceCode\">UserServiceCode</a>, <a class=\"enum\" href=\"linera_execution/enum.ExecutionError.html\" title=\"enum linera_execution::ExecutionError\">ExecutionError</a>&gt;&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + 'async_trait&gt;&gt;<div class=\"where\">where\n    'life0: 'async_trait,\n    'life1: 'async_trait,\n    'life2: 'async_trait,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + 'async_trait,</div></h4></section></summary><div class='docblock'>Creates a [<code>linera-sdk::UserContract</code>] instance using the bytecode in storage referenced\nby the <code>application_description</code>.</div></details></div></details>","Storage","linera_core::environment::TestStorage"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[81519]}