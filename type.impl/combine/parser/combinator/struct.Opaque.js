(function() {
    var type_impls = Object.fromEntries([["combine",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Opaque%3CF,+Input,+O,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/combine/parser/combinator.rs.html#1288\">Source</a><a href=\"#impl-Clone-for-Opaque%3CF,+Input,+O,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, Input: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, O: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"combine/parser/combinator/struct.Opaque.html\" title=\"struct combine::parser::combinator::Opaque\">Opaque</a>&lt;F, Input, O, S&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/combinator.rs.html#1288\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"combine/parser/combinator/struct.Opaque.html\" title=\"struct combine::parser::combinator::Opaque\">Opaque</a>&lt;F, Input, O, S&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/clone.rs.html#174\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","combine::parser::combinator::FnOpaque"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Parser%3CInput%3E-for-Opaque%3CF,+Input,+O,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/combine/parser/combinator.rs.html#1290-1340\">Source</a><a href=\"#impl-Parser%3CInput%3E-for-Opaque%3CF,+Input,+O,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;Input, F, O, S&gt; <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input&gt; for <a class=\"struct\" href=\"combine/parser/combinator/struct.Opaque.html\" title=\"struct combine::parser::combinator::Opaque\">Opaque</a>&lt;F, Input, O, S&gt;<div class=\"where\">where\n    Input: <a class=\"trait\" href=\"combine/trait.Stream.html\" title=\"trait combine::Stream\">Stream</a>,\n    S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;mut dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;mut dyn <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input, Output = O, PartialState = S&gt;)),</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/combinator.rs.html#1296\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"combine/trait.Parser.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = O</h4></section></summary><div class='docblock'>The type which is returned if the parser is successful.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.PartialState\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/combinator.rs.html#1297\">Source</a><a href=\"#associatedtype.PartialState\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"combine/trait.Parser.html#associatedtype.PartialState\" class=\"associatedtype\">PartialState</a> = S</h4></section></summary><div class='docblock'>Determines the state necessary to resume parsing after more input is supplied. <a href=\"combine/trait.Parser.html#associatedtype.PartialState\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_stream\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/combinator.rs.html#1299-1303\">Source</a><a href=\"#method.parse_stream\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.parse_stream\" class=\"fn\">parse_stream</a>(\n    &amp;mut self,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut Input</a>,\n) -&gt; <a class=\"enum\" href=\"combine/enum.ParseResult.html\" title=\"enum combine::ParseResult\">ParseResult</a>&lt;O, &lt;Input as <a class=\"trait\" href=\"combine/trait.StreamOnce.html\" title=\"trait combine::StreamOnce\">StreamOnce</a>&gt;::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Error\" title=\"type combine::StreamOnce::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Parses using the stream <code>input</code> by calling <a href=\"combine/trait.StreamOnce.html#tymethod.uncons\" title=\"method combine::StreamOnce::uncons\"><code>Stream::uncons</code></a> one or more times. <a href=\"combine/trait.Parser.html#method.parse_stream\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_lazy\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/combinator.rs.html#1305-1309\">Source</a><a href=\"#method.parse_lazy\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.parse_lazy\" class=\"fn\">parse_lazy</a>(\n    &amp;mut self,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut Input</a>,\n) -&gt; <a class=\"enum\" href=\"combine/enum.ParseResult.html\" title=\"enum combine::ParseResult\">ParseResult</a>&lt;O, &lt;Input as <a class=\"trait\" href=\"combine/trait.StreamOnce.html\" title=\"trait combine::StreamOnce\">StreamOnce</a>&gt;::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Error\" title=\"type combine::StreamOnce::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Parses using the stream <code>input</code> by calling <a href=\"combine/trait.StreamOnce.html#tymethod.uncons\" title=\"method combine::StreamOnce::uncons\"><code>Stream::uncons</code></a> one or more times. <a href=\"combine/trait.Parser.html#method.parse_lazy\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_error\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/combinator.rs.html#1333-1335\">Source</a><a href=\"#method.add_error\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.add_error\" class=\"fn\">add_error</a>(&amp;mut self, errors: &amp;mut <a class=\"struct\" href=\"combine/error/struct.Tracked.html\" title=\"struct combine::error::Tracked\">Tracked</a>&lt;&lt;Input as <a class=\"trait\" href=\"combine/trait.StreamOnce.html\" title=\"trait combine::StreamOnce\">StreamOnce</a>&gt;::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Error\" title=\"type combine::StreamOnce::Error\">Error</a>&gt;)</h4></section></summary><div class='docblock'>Adds the first error that would normally be returned by this parser if it failed with an\n<code>PeekErr</code> result. <a href=\"combine/trait.Parser.html#method.add_error\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#105-113\">Source</a><a href=\"#method.parse\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.parse\" class=\"fn\">parse</a>(\n    &amp;mut self,\n    input: Input,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;(Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.Output\" title=\"type combine::Parser::Output\">Output</a>, Input), &lt;Input as <a class=\"trait\" href=\"combine/trait.StreamOnce.html\" title=\"trait combine::StreamOnce\">StreamOnce</a>&gt;::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Error\" title=\"type combine::StreamOnce::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Entry point of the parser. Takes some input and tries to parse it. <a href=\"combine/trait.Parser.html#method.parse\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_with_state\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#120-129\">Source</a><a href=\"#method.parse_with_state\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.parse_with_state\" class=\"fn\">parse_with_state</a>(\n    &amp;mut self,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut Input</a>,\n    state: &amp;mut Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.PartialState\" title=\"type combine::Parser::PartialState\">PartialState</a>,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.Output\" title=\"type combine::Parser::Output\">Output</a>, &lt;Input as <a class=\"trait\" href=\"combine/trait.StreamOnce.html\" title=\"trait combine::StreamOnce\">StreamOnce</a>&gt;::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Error\" title=\"type combine::StreamOnce::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Entry point of the parser when using partial parsing.\nTakes some input and tries to parse it. <a href=\"combine/trait.Parser.html#method.parse_with_state\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.parse_stream_partial\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#210-228\">Source</a><a href=\"#method.parse_stream_partial\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.parse_stream_partial\" class=\"fn\">parse_stream_partial</a>(\n    &amp;mut self,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut Input</a>,\n    state: &amp;mut Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.PartialState\" title=\"type combine::Parser::PartialState\">PartialState</a>,\n) -&gt; <a class=\"enum\" href=\"combine/enum.ParseResult.html\" title=\"enum combine::ParseResult\">ParseResult</a>&lt;Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.Output\" title=\"type combine::Parser::Output\">Output</a>, &lt;Input as <a class=\"trait\" href=\"combine/trait.StreamOnce.html\" title=\"trait combine::StreamOnce\">StreamOnce</a>&gt;::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Error\" title=\"type combine::StreamOnce::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Like <code>parse_stream</code> but supports partial parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.by_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#357-362\">Source</a><a href=\"#method.by_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.by_ref\" class=\"fn\">by_ref</a>(&amp;mut self) -&gt; &amp;mut Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Borrows a parser instead of consuming it. <a href=\"combine/trait.Parser.html#method.by_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.with\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#379-385\">Source</a><a href=\"#method.with\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.with\" class=\"fn\">with</a>&lt;P2&gt;(self, p: P2) -&gt; <a class=\"struct\" href=\"combine/parser/sequence/struct.With.html\" title=\"struct combine::parser::sequence::With\">With</a>&lt;Self, P2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P2: <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input&gt;,</div></h4></section></summary><div class='docblock'>Discards the value of the <code>self</code> parser and returns the value of <code>p</code>.\nFails if any of the parsers fails. <a href=\"combine/trait.Parser.html#method.with\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.skip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#402-408\">Source</a><a href=\"#method.skip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.skip\" class=\"fn\">skip</a>&lt;P2&gt;(self, p: P2) -&gt; <a class=\"struct\" href=\"combine/parser/sequence/struct.Skip.html\" title=\"struct combine::parser::sequence::Skip\">Skip</a>&lt;Self, P2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P2: <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input&gt;,</div></h4></section></summary><div class='docblock'>Discards the value of the <code>p</code> parser and returns the value of <code>self</code>.\nFails if any of the parsers fails. <a href=\"combine/trait.Parser.html#method.skip\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#426-432\">Source</a><a href=\"#method.and\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.and\" class=\"fn\">and</a>&lt;P2&gt;(self, p: P2) -&gt; (Self, P2)<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P2: <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input&gt;,</div></h4></section></summary><div class='docblock'>Parses with <code>self</code> followed by <code>p</code>.\nSucceeds if both parsers succeed, otherwise fails.\nReturns a tuple with both values on success. <a href=\"combine/trait.Parser.html#method.and\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.or\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#463-469\">Source</a><a href=\"#method.or\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.or\" class=\"fn\">or</a>&lt;P2&gt;(self, p: P2) -&gt; <a class=\"struct\" href=\"combine/parser/choice/struct.Or.html\" title=\"struct combine::parser::choice::Or\">Or</a>&lt;Self, P2&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    P2: <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input, Output = Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.Output\" title=\"type combine::Parser::Output\">Output</a>&gt;,</div></h4></section></summary><div class='docblock'>Returns a parser which attempts to parse using <code>self</code>. If <code>self</code> fails without committing\nit tries to consume the same input using <code>p</code>. <a href=\"combine/trait.Parser.html#method.or\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.then\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#500-507\">Source</a><a href=\"#method.then\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.then\" class=\"fn\">then</a>&lt;N, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"combine/parser/sequence/struct.Then.html\" title=\"struct combine::parser::sequence::Then\">Then</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.Output\" title=\"type combine::Parser::Output\">Output</a>) -&gt; N,\n    N: <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input&gt;,</div></h4></section></summary><div class='docblock'>Parses using <code>self</code> and then passes the value to <code>f</code> which returns a parser used to parse\nthe rest of the input. <a href=\"combine/trait.Parser.html#method.then\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.then_partial\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#539-546\">Source</a><a href=\"#method.then_partial\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.then_partial\" class=\"fn\">then_partial</a>&lt;N, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"combine/parser/sequence/struct.ThenPartial.html\" title=\"struct combine::parser::sequence::ThenPartial\">ThenPartial</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;mut Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.Output\" title=\"type combine::Parser::Output\">Output</a>) -&gt; N,\n    N: <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input&gt;,</div></h4></section></summary><div class='docblock'>Variant of <a href=\"combine/trait.Parser.html#method.then\" title=\"method combine::Parser::then\"><code>then</code></a> which parses using <code>self</code> and then passes the value to <code>f</code> as a <code>&amp;mut</code> reference. <a href=\"combine/trait.Parser.html#method.then_partial\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.then_ref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#575-582\">Source</a><a href=\"#method.then_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.then_ref\" class=\"fn\">then_ref</a>&lt;N, F&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"combine/parser/sequence/struct.ThenRef.html\" title=\"struct combine::parser::sequence::ThenRef\">ThenRef</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(&amp;Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.Output\" title=\"type combine::Parser::Output\">Output</a>) -&gt; N,\n    N: <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input&gt;,</div></h4></section></summary><div class='docblock'>Parses using <code>self</code> and then passes a reference to the value to <code>f</code> which returns a parser\nused to parse the rest of the input. The value is then combined with the output of <code>f</code>. <a href=\"combine/trait.Parser.html#method.then_ref\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#598-604\">Source</a><a href=\"#method.map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.map\" class=\"fn\">map</a>&lt;F, B&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"combine/parser/combinator/struct.Map.html\" title=\"struct combine::parser::combinator::Map\">Map</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.Output\" title=\"type combine::Parser::Output\">Output</a>) -&gt; B,</div></h4></section></summary><div class='docblock'>Uses <code>f</code> to map over the parsed value. <a href=\"combine/trait.Parser.html#method.map\">Read more</a></div></details><section id=\"method.map_input\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#606-612\">Source</a><a href=\"#method.map_input\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.map_input\" class=\"fn\">map_input</a>&lt;F, B&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"combine/parser/combinator/struct.MapInput.html\" title=\"struct combine::parser::combinator::MapInput\">MapInput</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.Output\" title=\"type combine::Parser::Output\">Output</a>, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut Input</a>) -&gt; B,</div></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.flat_map\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#628-634\">Source</a><a href=\"#method.flat_map\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.flat_map\" class=\"fn\">flat_map</a>&lt;F, B&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"combine/parser/combinator/struct.FlatMap.html\" title=\"struct combine::parser::combinator::FlatMap\">FlatMap</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.Output\" title=\"type combine::Parser::Output\">Output</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;B, &lt;Input as <a class=\"trait\" href=\"combine/trait.StreamOnce.html\" title=\"trait combine::StreamOnce\">StreamOnce</a>&gt;::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Error\" title=\"type combine::StreamOnce::Error\">Error</a>&gt;,</div></h4></section></summary><div class='docblock'>Uses <code>f</code> to map over the output of <code>self</code>. If <code>f</code> returns an error the parser fails. <a href=\"combine/trait.Parser.html#method.flat_map\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#658-664\">Source</a><a href=\"#method.message\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.message\" class=\"fn\">message</a>&lt;S&gt;(self, msg: S) -&gt; <a class=\"struct\" href=\"combine/parser/error/struct.Message.html\" title=\"struct combine::parser::error::Message\">Message</a>&lt;Self, S&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    S: for&lt;'s&gt; <a class=\"trait\" href=\"combine/error/trait.ErrorInfo.html\" title=\"trait combine::error::ErrorInfo\">ErrorInfo</a>&lt;'s, Input::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Token\" title=\"type combine::StreamOnce::Token\">Token</a>, Input::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Range\" title=\"type combine::StreamOnce::Range\">Range</a>&gt;,</div></h4></section></summary><div class='docblock'>Parses with <code>self</code> and if it fails, adds the message <code>msg</code> to the error. <a href=\"combine/trait.Parser.html#method.message\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.expected\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#700-706\">Source</a><a href=\"#method.expected\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.expected\" class=\"fn\">expected</a>&lt;S&gt;(self, msg: S) -&gt; <a class=\"struct\" href=\"combine/parser/error/struct.Expected.html\" title=\"struct combine::parser::error::Expected\">Expected</a>&lt;Self, S&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    S: for&lt;'s&gt; <a class=\"trait\" href=\"combine/error/trait.ErrorInfo.html\" title=\"trait combine::error::ErrorInfo\">ErrorInfo</a>&lt;'s, Input::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Token\" title=\"type combine::StreamOnce::Token\">Token</a>, Input::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Range\" title=\"type combine::StreamOnce::Range\">Range</a>&gt;,</div></h4></section></summary><div class='docblock'>Parses with <code>self</code> and if it fails without consuming any input any expected errors are\nreplaced by <code>msg</code>. <code>msg</code> is then used in error messages as “Expected <code>msg</code>”. <a href=\"combine/trait.Parser.html#method.expected\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.silent\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#730-735\">Source</a><a href=\"#method.silent\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.silent\" class=\"fn\">silent</a>(self) -&gt; <a class=\"struct\" href=\"combine/parser/error/struct.Silent.html\" title=\"struct combine::parser::error::Silent\">Silent</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Parses with <code>self</code>, if it fails without consuming any input any expected errors that would\notherwise be emitted by <code>self</code> are suppressed. <a href=\"combine/trait.Parser.html#method.silent\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.and_then\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#756-765\">Source</a><a href=\"#method.and_then\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.and_then\" class=\"fn\">and_then</a>&lt;F, O, E&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"combine/parser/combinator/struct.AndThen.html\" title=\"struct combine::parser::combinator::AndThen\">AndThen</a>&lt;Self, F&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.Output\" title=\"type combine::Parser::Output\">Output</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;O, E&gt;,\n    E: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;&lt;Input::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Error\" title=\"type combine::StreamOnce::Error\">Error</a> as <a class=\"trait\" href=\"combine/trait.ParseError.html\" title=\"trait combine::ParseError\">ParseError</a>&lt;Input::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Token\" title=\"type combine::StreamOnce::Token\">Token</a>, Input::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Range\" title=\"type combine::StreamOnce::Range\">Range</a>, Input::<a class=\"associatedtype\" href=\"combine/trait.StreamOnce.html#associatedtype.Position\" title=\"type combine::StreamOnce::Position\">Position</a>&gt;&gt;::<a class=\"associatedtype\" href=\"combine/trait.ParseError.html#associatedtype.StreamError\" title=\"type combine::ParseError::StreamError\">StreamError</a>&gt;,</div></h4></section></summary><div class='docblock'>Parses with <code>self</code> and applies <code>f</code> on the result if <code>self</code> parses successfully.\n<code>f</code> may optionally fail with an error which is automatically converted to a <code>ParseError</code>. <a href=\"combine/trait.Parser.html#method.and_then\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#790-795\">Source</a><a href=\"#method.iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.iter\" class=\"fn\">iter</a>(\n    self,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;mut Input</a>,\n) -&gt; <a class=\"struct\" href=\"combine/parser/repeat/struct.Iter.html\" title=\"struct combine::parser::repeat::Iter\">Iter</a>&lt;'_, Input, Self, Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.PartialState\" title=\"type combine::Parser::PartialState\">PartialState</a>, FirstMode&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;&#39;_, Input, Self, Self::PartialState, FirstMode&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Creates an iterator from a parser and a state. Can be used as an alternative to <a href=\"combine/fn.many.html\" title=\"fn combine::many\"><code>many</code></a>\nwhen collecting directly into a <code>Extend</code> type is not desirable. <a href=\"combine/trait.Parser.html#method.iter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_iter\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#820-831\">Source</a><a href=\"#method.partial_iter\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.partial_iter\" class=\"fn\">partial_iter</a>&lt;'a, 's, M&gt;(\n    self,\n    mode: M,\n    input: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;'a mut Input</a>,\n    partial_state: &amp;'s mut Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.PartialState\" title=\"type combine::Parser::PartialState\">PartialState</a>,\n) -&gt; <a class=\"struct\" href=\"combine/parser/repeat/struct.Iter.html\" title=\"struct combine::parser::repeat::Iter\">Iter</a>&lt;'a, Input, Self, &amp;'s mut Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.PartialState\" title=\"type combine::Parser::PartialState\">PartialState</a>, M&gt; <a href=\"#\" class=\"tooltip\" data-notable-ty=\"Iter&lt;&#39;a, Input, Self, &amp;&#39;s mut Self::PartialState, M&gt;\">ⓘ</a><div class=\"where\">where\n    Self: <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    M: ParseMode,</div></h4></section></summary><div class='docblock'>Creates an iterator from a parser and a state. Can be used as an alternative to <a href=\"combine/fn.many.html\" title=\"fn combine::many\"><code>many</code></a>\nwhen collecting directly into a <code>Extend</code> type is not desirable. <a href=\"combine/trait.Parser.html#method.partial_iter\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.boxed\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#854-861\">Source</a><a href=\"#method.boxed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.boxed\" class=\"fn\">boxed</a>&lt;'a&gt;(\n    self,\n) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input, Output = Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.Output\" title=\"type combine::Parser::Output\">Output</a>, PartialState = Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.PartialState\" title=\"type combine::Parser::PartialState\">PartialState</a>&gt; + 'a&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + 'a,</div></h4></section></summary><div class='docblock'>Turns the parser into a trait object by putting it in a <code>Box</code>. Can be used to easily\nreturn parsers from functions without naming the type. <a href=\"combine/trait.Parser.html#method.boxed\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.left\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#889-895\">Source</a><a href=\"#method.left\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.left\" class=\"fn\">left</a>&lt;R&gt;(self) -&gt; <a class=\"enum\" href=\"combine/parser/combinator/enum.Either.html\" title=\"enum combine::parser::combinator::Either\">Either</a>&lt;Self, R&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    R: <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input, Output = Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.Output\" title=\"type combine::Parser::Output\">Output</a>&gt;,</div></h4></section></summary><div class='docblock'>Wraps the parser into the <a href=\"combine/parser/combinator/enum.Either.html\" title=\"enum combine::parser::combinator::Either\"><code>Either</code></a> enum which allows combinators such as <a href=\"combine/trait.Parser.html#method.then\" title=\"method combine::Parser::then\"><code>then</code></a> to return\nmultiple different parser types (merging them to one) <a href=\"combine/trait.Parser.html#method.left\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.right\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#923-929\">Source</a><a href=\"#method.right\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.right\" class=\"fn\">right</a>&lt;L&gt;(self) -&gt; <a class=\"enum\" href=\"combine/parser/combinator/enum.Either.html\" title=\"enum combine::parser::combinator::Either\">Either</a>&lt;L, Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,\n    L: <a class=\"trait\" href=\"combine/trait.Parser.html\" title=\"trait combine::Parser\">Parser</a>&lt;Input, Output = Self::<a class=\"associatedtype\" href=\"combine/trait.Parser.html#associatedtype.Output\" title=\"type combine::Parser::Output\">Output</a>&gt;,</div></h4></section></summary><div class='docblock'>Wraps the parser into the <a href=\"combine/parser/combinator/enum.Either.html\" title=\"enum combine::parser::combinator::Either\"><code>Either</code></a> enum which allows combinators such as <a href=\"combine/trait.Parser.html#method.then\" title=\"method combine::Parser::then\"><code>then</code></a> to return\nmultiple different parser types (merging them to one) <a href=\"combine/trait.Parser.html#method.right\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.spanned\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/parser/mod.rs.html#950-955\">Source</a><a href=\"#method.spanned\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.Parser.html#method.spanned\" class=\"fn\">spanned</a>(self) -&gt; <a class=\"struct\" href=\"combine/parser/combinator/struct.Spanned.html\" title=\"struct combine::parser::combinator::Spanned\">Spanned</a>&lt;Self&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Marks errors produced inside the <code>self</code> parser with the span from the start of the parse to\nthe end of it. <a href=\"combine/trait.Parser.html#method.spanned\">Read more</a></div></details></div></details>","Parser<Input>","combine::parser::combinator::FnOpaque"],["<section id=\"impl-Copy-for-Opaque%3CF,+Input,+O,+S%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/combine/parser/combinator.rs.html#1288\">Source</a><a href=\"#impl-Copy-for-Opaque%3CF,+Input,+O,+S%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, Input: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, O: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>, S: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"combine/parser/combinator/struct.Opaque.html\" title=\"struct combine::parser::combinator::Opaque\">Opaque</a>&lt;F, Input, O, S&gt;</h3></section>","Copy","combine::parser::combinator::FnOpaque"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[43190]}