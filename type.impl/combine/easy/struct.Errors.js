(function() {
    var type_impls = Object.fromEntries([["combine",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Errors%3CT,+R,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#636\">Source</a><a href=\"#impl-Debug-for-Errors%3CT,+R,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>, P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, R, P&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#636\">Source</a><a href=\"#method.fmt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","combine::stream::easy::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Errors%3CT,+R,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#780-790\">Source</a><a href=\"#impl-Display-for-Errors%3CT,+R,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, R, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, R, P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#786-789\">Source</a><a href=\"#method.fmt\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","combine::stream::easy::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Error-for-Errors%3CT,+R,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#769-778\">Source</a><a href=\"#impl-Error-for-Errors%3CT,+R,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, R, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> for <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, R, P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.description\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#775-777\">Source</a><a href=\"#method.description\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html#method.description\" class=\"fn\">description</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.str.html\">str</a></h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 1.42.0: use the Display impl or to_string()</span></div></span><div class='docblock'> <a href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html#method.description\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.source\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.30.0\">1.30.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/error.rs.html#81\">Source</a></span><a href=\"#method.source\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html#method.source\" class=\"fn\">source</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;(dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a> + 'static)&gt;</h4></section></summary><div class='docblock'>Returns the lower-level source of this error, if any. <a href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html#method.source\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cause\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/error.rs.html#117\">Source</a></span><a href=\"#method.cause\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html#method.cause\" class=\"fn\">cause</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.86.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;dyn <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html\" title=\"trait core::error::Error\">Error</a>&gt;</h4></section></summary><span class=\"item-info\"><div class=\"stab deprecated\"><span class=\"emoji\">ðŸ‘Ž</span><span>Deprecated since 1.33.0: replaced by Error::source, which can support downcasting</span></div></span></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.provide\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://doc.rust-lang.org/1.86.0/src/core/error.rs.html#180\">Source</a><a href=\"#method.provide\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html#method.provide\" class=\"fn\">provide</a>&lt;'a&gt;(&amp;'a self, request: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/core/error/struct.Request.html\" title=\"struct core::error::Request\">Request</a>&lt;'a&gt;)</h4></section></summary><span class=\"item-info\"><div class=\"stab unstable\"><span class=\"emoji\">ðŸ”¬</span><span>This is a nightly-only experimental API. (<code>error_generic_member_access</code>)</span></div></span><div class='docblock'>Provides type-based access to context intended for error reports. <a href=\"https://doc.rust-lang.org/1.86.0/core/error/trait.Error.html#method.provide\">Read more</a></div></details></div></details>","Error","combine::stream::easy::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Errors%3CT,+R,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#647-767\">Source</a><a href=\"#impl-Errors%3CT,+R,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, R, P&gt; <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, R, P&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#650-652\">Source</a><h4 class=\"code-header\">pub fn <a href=\"combine/easy/struct.Errors.html#tymethod.new\" class=\"fn\">new</a>(position: P, error: <a class=\"enum\" href=\"combine/easy/enum.Error.html\" title=\"enum combine::easy::Error\">Error</a>&lt;T, R&gt;) -&gt; <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, R, P&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a new <code>ParseError</code> which occurred at <code>position</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#656-658\">Source</a><h4 class=\"code-header\">pub fn <a href=\"combine/easy/struct.Errors.html#tymethod.empty\" class=\"fn\">empty</a>(position: P) -&gt; <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, R, P&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs an error with no other information than the position it occurred at.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_errors\" class=\"method\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#662-664\">Source</a><h4 class=\"code-header\">pub fn <a href=\"combine/easy/struct.Errors.html#tymethod.from_errors\" class=\"fn\">from_errors</a>(position: P, errors: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.86.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"combine/easy/enum.Error.html\" title=\"enum combine::easy::Error\">Error</a>&lt;T, R&gt;&gt;) -&gt; <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, R, P&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs a <code>ParseError</code> with multiple causes.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.end_of_input\" class=\"method\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#669-671\">Source</a><h4 class=\"code-header\">pub fn <a href=\"combine/easy/struct.Errors.html#tymethod.end_of_input\" class=\"fn\">end_of_input</a>(position: P) -&gt; <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, R, P&gt;</h4></section></summary><div class=\"docblock\"><p>Constructs an end of input error. Should be returned by parsers which encounter end of\ninput unexpectedly.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_error\" class=\"method\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#675-684\">Source</a><h4 class=\"code-header\">pub fn <a href=\"combine/easy/struct.Errors.html#tymethod.add_error\" class=\"fn\">add_error</a>(&amp;mut self, error: <a class=\"enum\" href=\"combine/easy/enum.Error.html\" title=\"enum combine::easy::Error\">Error</a>&lt;T, R&gt;)<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h4></section></summary><div class=\"docblock\"><p>Adds an error if <code>error</code> does not exist in this <code>ParseError</code> already (as determined byte\n<code>PartialEq</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_expected\" class=\"method\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#687-694\">Source</a><h4 class=\"code-header\">pub fn <a href=\"combine/easy/struct.Errors.html#tymethod.set_expected\" class=\"fn\">set_expected</a>(&amp;mut self, info: <a class=\"enum\" href=\"combine/easy/enum.Info.html\" title=\"enum combine::easy::Info\">Info</a>&lt;T, R&gt;)</h4></section></summary><div class=\"docblock\"><p>Removes all <code>Expected</code> errors in <code>self</code> and adds <code>info</code> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge\" class=\"method\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#699-718\">Source</a><h4 class=\"code-header\">pub fn <a href=\"combine/easy/struct.Errors.html#tymethod.merge\" class=\"fn\">merge</a>(self, other: <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, R, P&gt;) -&gt; <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, R, P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a>,\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h4></section></summary><div class=\"docblock\"><p>Merges two <code>ParseError</code>s. If they exist at the same position the errors of <code>other</code> are\nadded to <code>self</code> (using <code>add_error</code> to skip duplicates). If they are not at the same\nposition the error furthest ahead are returned, ignoring the other <code>ParseError</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_position\" class=\"method\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#721-726\">Source</a><h4 class=\"code-header\">pub fn <a href=\"combine/easy/struct.Errors.html#tymethod.map_position\" class=\"fn\">map_position</a>&lt;F, Q&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, R, Q&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(P) -&gt; Q,</div></h4></section></summary><div class=\"docblock\"><p>Maps the position to a new value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_token\" class=\"method\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#729-740\">Source</a><h4 class=\"code-header\">pub fn <a href=\"combine/easy/struct.Errors.html#tymethod.map_token\" class=\"fn\">map_token</a>&lt;F, U&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;U, R, P&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; U,</div></h4></section></summary><div class=\"docblock\"><p>Maps all token variants to a new value</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map_range\" class=\"method\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#755-766\">Source</a><h4 class=\"code-header\">pub fn <a href=\"combine/easy/struct.Errors.html#tymethod.map_range\" class=\"fn\">map_range</a>&lt;F, S&gt;(self, f: F) -&gt; <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, S, P&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(R) -&gt; S,</div></h4></section></summary><div class=\"docblock\"><p>Maps all range variants to a new value.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>combine::<span class=\"kw-2\">*</span>;\n<span class=\"kw\">use </span>combine::parser::range::range;\n<span class=\"macro\">println!</span>(\n    <span class=\"string\">\"{}\"</span>,\n    range(<span class=\"kw-2\">&amp;</span><span class=\"string\">\"HTTP\"</span>[..])\n        .easy_parse(<span class=\"string\">\"HTT\"</span>)\n        .unwrap_err()\n        .map_range(|bytes| <span class=\"macro\">format!</span>(<span class=\"string\">\"{:?}\"</span>, bytes))\n);</code></pre></div>\n</div></details></div></details>",0,"combine::stream::easy::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CError%3CErrors%3Cu8,+%26%5Bu8%5D,+P%3E,+P%3E%3E-for-Errors%3Cu8,+%26%5Bu8%5D,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/combine/stream/decoder.rs.html#20-33\">Source</a><a href=\"#impl-From%3CError%3CErrors%3Cu8,+%26%5Bu8%5D,+P%3E,+P%3E%3E-for-Errors%3Cu8,+%26%5Bu8%5D,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;'a, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"combine/stream/decoder/enum.Error.html\" title=\"enum combine::stream::decoder::Error\">Error</a>&lt;<a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>, &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>], P&gt;, P&gt;&gt; for <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>, &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>], P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/decoder.rs.html#25-32\">Source</a><a href=\"#method.from\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(e: <a class=\"enum\" href=\"combine/stream/decoder/enum.Error.html\" title=\"enum combine::stream::decoder::Error\">Error</a>&lt;<a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>, &amp;'a [<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.u8.html\">u8</a>], P&gt;, P&gt;) -&gt; Self</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Error<Errors<u8, &'a [u8], P>, P>>","combine::stream::easy::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParseError%3CItem,+Range,+Position%3E-for-Errors%3CItem,+Range,+Position%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#415-499\">Source</a><a href=\"#impl-ParseError%3CItem,+Range,+Position%3E-for-Errors%3CItem,+Range,+Position%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;Item, Range, Position&gt; <a class=\"trait\" href=\"combine/trait.ParseError.html\" title=\"trait combine::ParseError\">ParseError</a>&lt;Item, Range, Position&gt; for <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;Item, Range, Position&gt;<div class=\"where\">where\n    Item: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    Range: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,\n    Position: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"associatedtype.StreamError\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#422\">Source</a><a href=\"#associatedtype.StreamError\" class=\"anchor\">Â§</a><h4 class=\"code-header\">type <a href=\"combine/trait.ParseError.html#associatedtype.StreamError\" class=\"associatedtype\">StreamError</a> = <a class=\"enum\" href=\"combine/easy/enum.Error.html\" title=\"enum combine::easy::Error\">Error</a>&lt;Item, Range&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.empty\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#424-426\">Source</a><a href=\"#method.empty\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.ParseError.html#tymethod.empty\" class=\"fn\">empty</a>(pos: Position) -&gt; Self</h4></section></summary><div class='docblock'>Constructs an empty error. <a href=\"combine/trait.ParseError.html#tymethod.empty\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_error\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#428-430\">Source</a><a href=\"#method.from_error\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.ParseError.html#method.from_error\" class=\"fn\">from_error</a>(position: Position, err: Self::<a class=\"associatedtype\" href=\"combine/trait.ParseError.html#associatedtype.StreamError\" title=\"type combine::ParseError::StreamError\">StreamError</a>) -&gt; Self</h4></section></summary><div class='docblock'>Creates a <code>ParseError</code> from a single <code>Self::StreamError</code></div></details><section id=\"method.position\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#433-435\">Source</a><a href=\"#method.position\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.ParseError.html#method.position\" class=\"fn\">position</a>(&amp;self) -&gt; Position</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_position\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#438-440\">Source</a><a href=\"#method.set_position\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.ParseError.html#tymethod.set_position\" class=\"fn\">set_position</a>(&amp;mut self, position: Position)</h4></section></summary><div class='docblock'>Sets the position of this <code>ParseError</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.merge\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#443-445\">Source</a><a href=\"#method.merge\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.ParseError.html#method.merge\" class=\"fn\">merge</a>(self, other: Self) -&gt; Self</h4></section></summary><div class='docblock'>Merges two errors. If they exist at the same position the errors of <code>other</code> are\nadded to <code>self</code> (using the semantics of <code>add</code>). If they are not at the same\nposition the error furthest ahead are returned, ignoring the other <code>ParseError</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#448-450\">Source</a><a href=\"#method.add\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.ParseError.html#tymethod.add\" class=\"fn\">add</a>(&amp;mut self, err: Self::<a class=\"associatedtype\" href=\"combine/trait.ParseError.html#associatedtype.StreamError\" title=\"type combine::ParseError::StreamError\">StreamError</a>)</h4></section></summary><div class='docblock'>Adds a <code>StreamError</code> to <code>self</code>. <a href=\"combine/trait.ParseError.html#tymethod.add\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.set_expected\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#453-474\">Source</a><a href=\"#method.set_expected\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.ParseError.html#tymethod.set_expected\" class=\"fn\">set_expected</a>&lt;F&gt;(self_: &amp;mut <a class=\"struct\" href=\"combine/error/struct.Tracked.html\" title=\"struct combine::error::Tracked\">Tracked</a>&lt;Self&gt;, info: Self::<a class=\"associatedtype\" href=\"combine/trait.ParseError.html#associatedtype.StreamError\" title=\"type combine::ParseError::StreamError\">StreamError</a>, f: F)<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(&amp;mut <a class=\"struct\" href=\"combine/error/struct.Tracked.html\" title=\"struct combine::error::Tracked\">Tracked</a>&lt;Self&gt;),</div></h4></section></summary><div class='docblock'>Sets <code>info</code> as the <em>only</em> <code>Expected</code> error of <code>self</code></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear_expected\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#476-481\">Source</a><a href=\"#method.clear_expected\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.ParseError.html#method.clear_expected\" class=\"fn\">clear_expected</a>(&amp;mut self)</h4></section></summary><div class='docblock'>Removes any expected errors currently in <code>self</code></div></details><section id=\"method.is_unexpected_end_of_input\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#483-487\">Source</a><a href=\"#method.is_unexpected_end_of_input\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.ParseError.html#tymethod.is_unexpected_end_of_input\" class=\"fn\">is_unexpected_end_of_input</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_other\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#490-498\">Source</a><a href=\"#method.into_other\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.ParseError.html#tymethod.into_other\" class=\"fn\">into_other</a>&lt;T&gt;(self) -&gt; T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"combine/trait.ParseError.html\" title=\"trait combine::ParseError\">ParseError</a>&lt;Item, Range, Position&gt;,</div></h4></section></summary><div class='docblock'>Does a best-effort conversion of <code>self</code> into another <code>ParseError</code></div></details><section id=\"method.add_expected\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/error.rs.html#491-496\">Source</a><a href=\"#method.add_expected\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.ParseError.html#method.add_expected\" class=\"fn\">add_expected</a>&lt;E&gt;(&amp;mut self, info: E)<div class=\"where\">where\n    E: for&lt;'s&gt; <a class=\"trait\" href=\"combine/error/trait.ErrorInfo.html\" title=\"trait combine::error::ErrorInfo\">ErrorInfo</a>&lt;'s, Item, Range&gt;,</div></h4></section><section id=\"method.add_unexpected\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/error.rs.html#498-503\">Source</a><a href=\"#method.add_unexpected\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.ParseError.html#method.add_unexpected\" class=\"fn\">add_unexpected</a>&lt;E&gt;(&amp;mut self, info: E)<div class=\"where\">where\n    E: for&lt;'s&gt; <a class=\"trait\" href=\"combine/error/trait.ErrorInfo.html\" title=\"trait combine::error::ErrorInfo\">ErrorInfo</a>&lt;'s, Item, Range&gt;,</div></h4></section><section id=\"method.add_message\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/error.rs.html#505-510\">Source</a><a href=\"#method.add_message\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"combine/trait.ParseError.html#method.add_message\" class=\"fn\">add_message</a>&lt;E&gt;(&amp;mut self, info: E)<div class=\"where\">where\n    E: for&lt;'s&gt; <a class=\"trait\" href=\"combine/error/trait.ErrorInfo.html\" title=\"trait combine::error::ErrorInfo\">ErrorInfo</a>&lt;'s, Item, Range&gt;,</div></h4></section></div></details>","ParseError<Item, Range, Position>","combine::stream::easy::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParseErrorInto%3CItem,+Range,+Position%3E-for-Errors%3CItem,+Range,+Position%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#366-382\">Source</a><a href=\"#impl-ParseErrorInto%3CItem,+Range,+Position%3E-for-Errors%3CItem,+Range,+Position%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;Item, Range, Position&gt; <a class=\"trait\" href=\"combine/error/trait.ParseErrorInto.html\" title=\"trait combine::error::ParseErrorInto\">ParseErrorInto</a>&lt;Item, Range, Position&gt; for <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;Item, Range, Position&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.into_other_error\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#369-381\">Source</a><a href=\"#method.into_other_error\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"combine/error/trait.ParseErrorInto.html#tymethod.into_other_error\" class=\"fn\">into_other_error</a>&lt;T, Item2, Range2, Position2&gt;(self) -&gt; T<div class=\"where\">where\n    T: <a class=\"trait\" href=\"combine/trait.ParseError.html\" title=\"trait combine::ParseError\">ParseError</a>&lt;Item2, Range2, Position2&gt;,\n    Item2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Item&gt;,\n    Range2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Range&gt;,\n    Position2: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Position&gt;,</div></h4></section></div></details>","ParseErrorInto<Item, Range, Position>","combine::stream::easy::ParseError"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Errors%3CT,+R,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#636\">Source</a><a href=\"#impl-PartialEq-for-Errors%3CT,+R,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>, P: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, R, P&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#636\">Source</a><a href=\"#method.eq\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, R, P&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> Â· <a class=\"src\" href=\"https://doc.rust-lang.org/1.86.0/src/core/cmp.rs.html#261\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">Â§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.86.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.86.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","combine::stream::easy::ParseError"],["<section id=\"impl-StructuralPartialEq-for-Errors%3CT,+R,+P%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/combine/stream/easy.rs.html#636\">Source</a><a href=\"#impl-StructuralPartialEq-for-Errors%3CT,+R,+P%3E\" class=\"anchor\">Â§</a><h3 class=\"code-header\">impl&lt;T, R, P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.86.0/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"combine/easy/struct.Errors.html\" title=\"struct combine::easy::Errors\">Errors</a>&lt;T, R, P&gt;</h3></section>","StructuralPartialEq","combine::stream::easy::ParseError"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[37511]}