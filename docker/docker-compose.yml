services:
  web:
    image: caddy:2.10.2-alpine
    container_name: web
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    environment:
      - DOMAIN=${DOMAIN:-localhost}
    labels:
      com.centurylinklabs.watchtower.enable: "true"

  scylla-setup:
    image: ubuntu:24.04
    container_name: scylla-setup
    privileged: true
    volumes:
      - /proc:/host/proc
      - /sys:/host/sys
      - /etc/sysctl.d:/host/sysctl.d
      - ./compose-scylla-setup.sh:/setup.sh:ro
    command: ["/bin/bash", "/setup.sh", "--persist"]
    restart: "no"

  scylla:
    image: scylladb/scylla:6.2.3
    container_name: scylla
    volumes:
      - linera-scylla-data:/var/lib/scylla
    environment:
      SCYLLA_AUTO_CONF: 1
    command:
      - "--developer-mode"
      - "0"
      - "--overprovisioned"
      - "1"
    depends_on:
      scylla-setup:
        condition: service_completed_successfully

  proxy:
    image: "${LINERA_IMAGE:-us-docker.pkg.dev/linera-io-dev/linera-public-registry/linera:latest}"
    container_name: proxy
    ports:
      - "19100:19100"
    command: ["./compose-proxy-entrypoint.sh", "1"]
    volumes:
      - .:/config
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    depends_on:
      shard-init:
        condition: service_completed_successfully

  shard:
    image: "${LINERA_IMAGE:-us-docker.pkg.dev/linera-io-dev/linera-public-registry/linera:latest}"
    deploy:
      replicas: 4
    command: ["./compose-server-entrypoint.sh", "scylladb:tcp:scylla:9042", "1"]
    volumes:
      - .:/config
    labels:
      com.centurylinklabs.watchtower.enable: "true"
    depends_on:
      shard-init:
        condition: service_completed_successfully

  shard-init:
    image: "${LINERA_IMAGE:-us-docker.pkg.dev/linera-io-dev/linera-public-registry/linera:latest}"
    container_name: shard-init
    command: ["./compose-server-init.sh", "scylladb:tcp:scylla:9042", "1"]
    volumes:
      - .:/config
    depends_on:
      scylla-setup:
        condition: service_completed_successfully
      scylla:
        condition: service_started

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./dashboards:/var/lib/grafana/dashboards

  watchtower:
    image: containrrr/watchtower:latest
    container_name: watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: ["--interval", "30"]

volumes:
  linera-scylla-data:
    driver: local
  grafana-storage:
  caddy_data:
    driver: local
  caddy_config:
    driver: local
